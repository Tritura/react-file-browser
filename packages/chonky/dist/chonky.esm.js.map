{"version":3,"file":"chonky.esm.js","sources":["../src/util/hooks-helpers.ts","../src/util/logger.ts","../src/util/file-helper.ts","../src/redux/files-transforms.ts","../src/action-definitions/option-ids.ts","../src/types/sort.types.ts","../src/redux/selectors.ts","../src/redux/thunks/file-actions.thunks.ts","../src/redux/thunks/dispatchers.thunks.ts","../src/types/file-view.types.ts","../src/types/icons.types.ts","../src/util/helpers.ts","../src/redux/thunks/index.ts","../src/action-definitions/essential.ts","../src/action-definitions/default.ts","../src/action-definitions/extra.ts","../src/action-definitions/index.ts","../src/redux/state.ts","../src/redux/reducers.ts","../src/redux/watchers.ts","../src/redux/store.ts","../src/components/internal/ChonkyIconPlaceholder.tsx","../src/util/default-config.ts","../src/util/i18n.ts","../src/util/icon-helper.ts","../src/util/styles.ts","../src/util/file-browser-handle.ts","../src/components/internal/ChonkyBusinessLogic.tsx","../src/util/dnd-fallback.ts","../src/components/external/FileContextMenu-hooks.ts","../src/types/dnd.types.ts","../src/components/file-list/DnDFileListDragLayer.tsx","../src/components/internal/HotkeyListener.tsx","../src/components/internal/ChonkyPresentationLayer.tsx","../src/components/external/FileBrowser.tsx","../src/components/external/FileNavbar-hooks.ts","../src/util/dnd.ts","../src/components/external/TextPlaceholder.tsx","../src/components/file-list/FileEntry-hooks.tsx","../src/types/action.types.ts","../src/util/file-actions.ts","../src/components/external/ToolbarButton.tsx","../src/components/external/FolderChainButton.tsx","../src/components/external/FileNavbar.tsx","../src/components/external/ToolbarDropdownButton.tsx","../src/components/external/ToolbarDropdown.tsx","../src/components/external/ToolbarInfo.tsx","../src/components/external/ToolbarSearch.tsx","../src/components/external/FileToolbar.tsx","../src/components/file-list/FileListEmpty.tsx","../src/components/internal/ClickableWrapper-hooks.tsx","../src/components/internal/ClickableWrapper.tsx","../src/components/file-list/FileEntryName.tsx","../src/components/file-list/CompactEntry.tsx","../src/components/file-list/DnDFileEntry.tsx","../src/components/file-list/FileThumbnail.tsx","../src/components/file-list/GridEntryDndIndicator.tsx","../src/components/file-list/GridEntryPreview.tsx","../src/components/file-list/GridEntry.tsx","../src/components/file-list/ListEntry.tsx","../src/components/file-list/FileEntry.tsx","../src/components/file-list/GridContainer.tsx","../src/components/file-list/ListContainer.tsx","../src/components/file-list/FileList.tsx","../src/components/external/FileContextMenu.tsx","../src/components/external/FullFileBrowser.tsx","../src/extensions/file-map.ts"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nexport const useDebounce = <T>(\n    value: T,\n    delay: number\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        return () => {\n            clearTimeout(handler);\n        };\n    }, [value, delay]);\n\n    return [debouncedValue, setDebouncedValue];\n};\n\nconst UNINITIALIZED_SENTINEL = {};\nexport const useStaticValue = <T>(factory: () => T): T => {\n    const valueRef = useRef<T>(UNINITIALIZED_SENTINEL as T);\n    if (valueRef.current === UNINITIALIZED_SENTINEL) valueRef.current = factory();\n    return valueRef.current;\n};\n\nexport const useInstanceVariable = <T>(value: T) => {\n    const ref = useRef(value);\n    useEffect(() => {\n        ref.current = value;\n    }, [ref, value]);\n    return ref;\n};\n","export class Logger {\n    public static error(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.error('[Chonky runtime error]', ...args);\n    }\n\n    public static warn(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.warn('[Chonky runtime warning]', ...args);\n    }\n\n    public static debug(...args: any[]): void {\n        // eslint-disable-next-line no-console\n        console.debug('[Chonky runtime debug]', ...args);\n    }\n\n    public static formatBullets(bullets: string[]): string {\n        return `\\n- ${bullets.join('\\n- ')}`;\n    }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from '../types/file.types';\nimport { Logger } from './logger';\n\nexport class FileHelper {\n    public static isDirectory(file: Nullable<FileData>): file is FileData {\n        // Not a directory by default\n        return !!file && file.isDir === true;\n    }\n\n    public static isHidden(file: Nullable<FileData>): file is FileData {\n        // Not hidden by default\n        return !!file && file.isHidden === true;\n    }\n\n    public static isSymlink(file: Nullable<FileData>): file is FileData {\n        // Not a symlink by default\n        return !!file && file.isSymlink === true;\n    }\n\n    public static isEncrypted(file: Nullable<FileData>): file is FileData {\n        // Not encrypted by default\n        return !!file && file.isEncrypted === true;\n    }\n\n    public static isClickable(file: Nullable<FileData>): file is FileData {\n        // Clickable by default\n        return !!file;\n    }\n\n    public static isOpenable(file: Nullable<FileData>): file is FileData {\n        // Openable by default\n        return !!file && file.openable !== false;\n    }\n\n    public static isSelectable(file: Nullable<FileData>): file is FileData {\n        // Selectable by default\n        return !!file && file.selectable !== false;\n    }\n\n    public static isDraggable(file: Nullable<FileData>): file is FileData {\n        // File & folders are draggable by default, `null` is not\n        return !!file && file.draggable !== false;\n    }\n\n    public static isDroppable(file: Nullable<FileData>): file is FileData {\n        // Folders are droppable by default, files are not\n        if (!file) return false;\n        if (file.isDir && file.droppable !== false) return true;\n        return file.droppable === true;\n    }\n\n    public static isDndOpenable(file: Nullable<FileData>): file is FileData {\n        // Folders are DnD openable by default, files are not\n        if (!FileHelper.isOpenable(file)) return false;\n        if (file.isDir && file.dndOpenable !== false) return true;\n        return file.dndOpenable === true;\n    }\n\n    public static getModDate(file: Nullable<FileData>): Nullable<Date> {\n        if (!file || file.modDate === null || file.modDate === undefined) return null;\n        return FileHelper.parseDate(file.modDate);\n    }\n\n    public static parseDate(maybeDate: Date | string | any): Nullable<Date> {\n        if (typeof maybeDate === 'string' || typeof maybeDate === 'number') {\n            // We allow users to provide string and numerical representations of dates.\n            try {\n                return new Date(maybeDate);\n            } catch (error) {\n                Logger.error(\n                    `Could not convert provided string/number into a date: ${error.message} `,\n                    'Invalid value:',\n                    maybeDate\n                );\n            }\n        }\n        if (maybeDate instanceof Date && !isNaN(maybeDate.getTime())) {\n            // We only allow valid dates objects\n            return maybeDate;\n        }\n\n        // If we have an invalid date representation, we just return null.\n        Logger.warn('Unsupported date representation:', maybeDate);\n        return null;\n    }\n\n    public static getChildrenCount(file: Nullable<FileData>): Nullable<number> {\n        if (!file || typeof file.childrenCount !== 'number') return null;\n\n        return file.childrenCount;\n    }\n}\n","import { Nullable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileArray } from '../types/file.types';\nimport { Logger } from '../util/logger';\n\ninterface SanitizeFiles {\n    (mode: 'files', rawArray: FileArray | any): {\n        sanitizedArray: FileArray;\n        errorMessages: string[];\n    };\n    (mode: 'folderChain', rawArray: Nullable<FileArray> | any): {\n        sanitizedArray: FileArray;\n        errorMessages: string[];\n    };\n    (mode: 'fileActions', rawArray: FileAction[] | any): {\n        sanitizedArray: FileAction[];\n        errorMessages: string[];\n    };\n}\n\nexport const sanitizeInputArray: SanitizeFiles = (mode: string, rawArray: any[]) => {\n    const sanitizedFiles = [];\n    const errorMessages: string[] = [];\n\n    if ((mode === 'folderChain' || mode === 'fileActions') && !rawArray) {\n        // Do nothing, we allow folder chain to be null.\n    } else if (!Array.isArray(rawArray)) {\n        errorMessages.push(\n            `Expected \"${mode}\" prop to be an array, got \"${typeof rawArray}\" instead.`\n        );\n    } else {\n        let nonObjectFileCount = 0;\n        let missingFieldFileCount = 0;\n        const seenIds = new Set<string>();\n        const duplicateIds = new Set<string>();\n\n        for (let i = 0; i < rawArray.length; ++i) {\n            const item = rawArray[i];\n            if (!item) {\n                if (mode === 'fileActions') nonObjectFileCount++;\n                else sanitizedFiles.push(null);\n            } else if (typeof item !== 'object') {\n                nonObjectFileCount++;\n            } else {\n                if (!item.id || (mode !== 'fileActions' && !item.name)) {\n                    missingFieldFileCount++;\n                } else if (seenIds.has(item.id)) {\n                    duplicateIds.add(item.id);\n                } else {\n                    seenIds.add(item.id);\n                    sanitizedFiles.push(item);\n                }\n            }\n        }\n\n        if (nonObjectFileCount) {\n            errorMessages.push(\n                `Detected ${nonObjectFileCount} file(s) of invalid type. Remember ` +\n                    `that \"files\" array should contain either objects or nulls.`\n            );\n        }\n        if (missingFieldFileCount) {\n            errorMessages.push(\n                `Detected ${missingFieldFileCount} file(s) that are missing the ` +\n                    `required fields. Remember that file object should define an ` +\n                    `\"id\" and a \"name\".`\n            );\n        }\n        if (duplicateIds.size > 0) {\n            const repeatedIdsString = '\"' + Array.from(duplicateIds).join('\", \"') + '\"';\n            errorMessages.push(\n                `Detected ${duplicateIds.size} file IDs that are used multiple ` +\n                    `times. Remember that each file should have a unique IDs. The ` +\n                    `following IDs were seen multiple times: ${repeatedIdsString}`\n            );\n        }\n    }\n\n    if (errorMessages.length > 0) {\n        const errorMessageString = '\\n- ' + errorMessages.join('\\n- ');\n        let arrayString: string;\n        let itemString: string;\n        if (mode === 'folderChain') {\n            arrayString = 'folder chain';\n            itemString = 'files';\n        } else if (mode === 'fileActions') {\n            arrayString = 'file actions';\n            itemString = 'file actions';\n        } else {\n            // mode === 'files'\n            arrayString = 'files';\n            itemString = 'files';\n        }\n\n        Logger.error(\n            `Errors were detected when sanitizing the ${arrayString} array. ` +\n                `Offending ${itemString} were removed from the array. Summary of ` +\n                `validation errors: ${errorMessageString}`\n        );\n    }\n\n    return {\n        sanitizedArray: sanitizedFiles,\n        errorMessages,\n    };\n};\n","/**\n * We have option IDs in a separate file to avoid circular deps...\n */\nexport const OptionIds = {\n    ShowHiddenFiles: 'show_hidden_files',\n    ShowFoldersFirst: 'show_folders_first',\n    DarkMode: 'dark_mode',\n};\n","import { Nullable } from 'tsdef';\n\nimport { FileData } from './file.types';\n\nexport type FileSortKeySelector = (file: Nullable<FileData>) => any;\n\nexport enum SortOrder {\n    ASC = 'asc',\n    DESC = 'desc',\n}\n","import sort from 'fast-sort';\nimport FuzzySearch from 'fuzzy-search';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport { OptionIds } from '../action-definitions/option-ids';\nimport { FileArray, FileData, FileFilter } from '../types/file.types';\nimport { RootState } from '../types/redux.types';\nimport { FileSortKeySelector, SortOrder } from '../types/sort.types';\nimport { FileHelper } from '../util/file-helper';\n\n// Raw selectors\nexport const selectInstanceId = (state: RootState) => state.instanceId;\nexport const selectExternalFileActionHandler = (state: RootState) => state.externalFileActionHandler;\n\nexport const selectFileActionMap = (state: RootState) => state.fileActionMap;\nexport const selectFileActionIds = (state: RootState) => state.fileActionIds;\nexport const selectFileActionData = (fileActionId: string) => (state: RootState) =>\n    selectFileActionMap(state)[fileActionId];\nexport const selectToolbarItems = (state: RootState) => state.toolbarItems;\nexport const selectContextMenuItems = (state: RootState) => state.contextMenuItems;\n\nexport const selectFolderChain = (state: RootState) => state.folderChain;\nexport const selectCurrentFolder = (state: RootState) => {\n    const folderChain = selectFolderChain(state);\n    const currentFolder = folderChain.length > 0 ? folderChain[folderChain.length - 1] : null;\n    return currentFolder;\n};\nexport const selectParentFolder = (state: RootState) => {\n    const folderChain = selectFolderChain(state);\n    const parentFolder = folderChain.length > 1 ? folderChain[folderChain.length - 2] : null;\n    return parentFolder;\n};\n\nexport const selectRawFiles = (state: RootState) => state.rawFiles;\nexport const selectFileMap = (state: RootState) => state.fileMap;\nexport const selectCleanFileIds = (state: RootState) => state.cleanFileIds;\nexport const selectFileData = (fileId: Nullable<string>) => (state: RootState) =>\n    fileId ? selectFileMap(state)[fileId] : null;\n\nexport const selectHiddenFileIdMap = (state: RootState) => state.hiddenFileIdMap;\nexport const selectHiddenFileCount = (state: RootState) => Object.keys(selectHiddenFileIdMap(state)).length;\n\nexport const selectFocusSearchInput = (state: RootState) => state.focusSearchInput;\nexport const selectSearchString = (state: RootState) => state.searchString;\n\nexport const selectSelectionMap = (state: RootState) => state.selectionMap;\nexport const selectSelectedFileIds = (state: RootState) => Object.keys(selectSelectionMap(state));\nexport const selectSelectionSize = (state: RootState) => selectSelectedFileIds(state).length;\nexport const selectIsFileSelected = (fileId: Nullable<string>) => (state: RootState) =>\n    !!fileId && !!selectSelectionMap(state)[fileId];\nexport const selectSelectedFiles = (state: RootState) => {\n    const fileMap = selectFileMap(state);\n    return Object.keys(selectSelectionMap(state)).map(id => fileMap[id]);\n};\nexport const selectSelectedFilesForAction = (fileActionId: string) => (state: RootState) => {\n    const { fileActionMap } = state;\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.requiresSelection) return undefined;\n\n    return getSelectedFiles(state, action.fileFilter);\n};\nexport const selectSelectedFilesForActionCount = (fileActionId: string) => (state: RootState) =>\n    getSelectedFilesForAction(state, fileActionId)?.length;\nexport const selectDisableSelection = (state: RootState) => state.disableSelection;\n\nexport const selectFileViewConfig = (state: RootState) => state.fileViewConfig;\n\nexport const selectSortActionId = (state: RootState) => state.sortActionId;\nexport const selectSortOrder = (state: RootState) => state.sortOrder;\n\nexport const selectOptionMap = (state: RootState) => state.optionMap;\nexport const selectOptionValue = (optionId: string) => (state: RootState) => selectOptionMap(state)[optionId];\n\nexport const selectThumbnailGenerator = (state: RootState) => state.thumbnailGenerator;\nexport const selectDoubleClickDelay = (state: RootState) => state.doubleClickDelay;\nexport const selectIsDnDDisabled = (state: RootState) => state.disableDragAndDrop;\nexport const selectClearSelectionOnOutsideClick = (state: RootState) => state.clearSelectionOnOutsideClick;\n\nexport const selectContextMenuMounted = (state: RootState) => state.contextMenuMounted;\nexport const selectContextMenuConfig = (state: RootState) => state.contextMenuConfig;\nexport const selectContextMenuTriggerFile = (state: RootState) => {\n    const config = selectContextMenuConfig(state);\n    if (!config || !config.triggerFileId) return null;\n    const fileMap = selectFileMap(state);\n    return fileMap[config.triggerFileId] ?? null;\n};\n\n// Raw selectors\nconst getFileActionMap = (state: RootState) => state.fileActionMap;\nconst getOptionMap = (state: RootState) => state.optionMap;\nconst getFileMap = (state: RootState) => state.fileMap;\nconst getFileIds = (state: RootState) => state.fileIds;\nconst getCleanFileIds = (state: RootState) => state.cleanFileIds;\nconst getSortActionId = (state: RootState) => state.sortActionId;\nconst getSortOrder = (state: RootState) => state.sortOrder;\nconst getSearchString = (state: RootState) => state.searchString;\nconst _getLastClick = (state: RootState) => state.lastClick;\n\n// Memoized selectors\nconst makeGetAction = (fileActionSelector: (state: RootState) => Nullable<string>) =>\n    createSelector([getFileActionMap, fileActionSelector], (fileActionMap, fileActionId) =>\n        fileActionId && fileActionMap[fileActionId] ? fileActionMap[fileActionId] : null\n    );\nconst makeGetOptionValue = (optionId: string, defaultValue: any = undefined) =>\n    createSelector([getOptionMap], optionMap => {\n        const value = optionMap[optionId];\n        if (value === undefined) {\n            return defaultValue;\n        }\n        return value;\n    });\nconst makeGetFiles = (fileIdsSelector: (state: RootState) => Nullable<string>[]) =>\n    createSelector(\n        [getFileMap, fileIdsSelector],\n        (fileMap, fileIds): FileArray => fileIds.map(fileId => (fileId && fileMap[fileId] ? fileMap[fileId] : null))\n    );\nconst getSortedFileIds = createSelector(\n    [\n        getFileIds,\n        getSortOrder,\n        makeGetFiles(getFileIds),\n        makeGetAction(getSortActionId),\n        makeGetOptionValue(OptionIds.ShowFoldersFirst, false),\n    ],\n    (fileIds, sortOrder, files, sortAction, showFolderFirst) => {\n        if (!sortAction) {\n            // We allow users to set the sort action ID to `null` if they want to use their\n            // own sorting mechanisms instead of relying on Chonky built-in sort.\n            return fileIds;\n        }\n\n        const prepareSortKeySelector = (selector: FileSortKeySelector) => (file: Nullable<FileData>) => selector(file);\n\n        const sortFunctions: {\n            asc?: (file: FileData) => any;\n            desc?: (file: FileData) => any;\n        }[] = [];\n\n        if (showFolderFirst) {\n            // If option is undefined (relevant actions is not enabled), we don't show\n            // folders first.\n            sortFunctions.push({\n                desc: prepareSortKeySelector(FileHelper.isDirectory),\n            });\n        }\n        if (sortAction.sortKeySelector) {\n            const configKeyName = sortOrder === SortOrder.ASC ? 'asc' : 'desc';\n            sortFunctions.push({\n                [configKeyName]: prepareSortKeySelector(sortAction.sortKeySelector),\n            });\n        }\n        if (sortFunctions.length === 0) return fileIds;\n\n        // We copy the array because `fast-sort` mutates it\n        const sortedFileIds = sort([...files])\n            .by(sortFunctions as any)\n            .map(file => (file ? file.id : null));\n        return sortedFileIds;\n    }\n);\nconst getSearcher = createSelector(\n    [makeGetFiles(getCleanFileIds)],\n    cleanFiles => new FuzzySearch(cleanFiles as FileData[], ['name'], { caseSensitive: false })\n);\nconst getSearchFilteredFileIds = createSelector(\n    [getCleanFileIds, getSearchString, getSearcher],\n    (cleanFileIds, searchString, searcher) =>\n        searchString ? searcher.search(searchString).map(f => f.id) : cleanFileIds\n);\nconst getHiddenFileIdMap = createSelector(\n    [getSearchFilteredFileIds, makeGetFiles(getCleanFileIds), makeGetOptionValue(OptionIds.ShowHiddenFiles)],\n    (searchFilteredFileIds, cleanFiles, showHiddenFiles) => {\n        const searchFilteredFileIdsSet = new Set(searchFilteredFileIds);\n        const hiddenFileIdMap: any = {};\n        cleanFiles.forEach(file => {\n            if (!file) return;\n            else if (!searchFilteredFileIdsSet.has(file.id)) {\n                // Hidden by seach\n                hiddenFileIdMap[file.id] = true;\n            } else if (!showHiddenFiles && FileHelper.isHidden(file)) {\n                // Hidden by options\n                hiddenFileIdMap[file.id] = true;\n            }\n        });\n        return hiddenFileIdMap;\n    }\n);\nconst getDisplayFileIds = createSelector(\n    [getSortedFileIds, getHiddenFileIdMap],\n    /** Returns files that will actually be shown to the user. */\n    (sortedFileIds, hiddenFileIdMap) => sortedFileIds.filter(id => !id || !hiddenFileIdMap[id])\n);\nconst getLastClickIndex = createSelector(\n    [_getLastClick, getSortedFileIds],\n    /** Returns the last click index after ensuring it is actually still valid. */\n    (lastClick, displayFileIds) => {\n        if (\n            !lastClick ||\n            lastClick.index > displayFileIds.length - 1 ||\n            lastClick.fileId != displayFileIds[lastClick.index]\n        ) {\n            return null;\n        }\n        return lastClick.index;\n    }\n);\n\nexport const selectors = {\n    // Raw selectors\n    getFileActionMap,\n    getOptionMap,\n    getFileMap,\n    getFileIds,\n    getCleanFileIds,\n    getSortActionId,\n    getSortOrder,\n    getSearchString,\n    _getLastClick,\n\n    // Memoized selectors\n    getSortedFileIds,\n    getSearcher,\n    getSearchFilteredFileIds,\n    getHiddenFileIdMap,\n    getDisplayFileIds,\n    getLastClickIndex,\n\n    // Parametrized selectors\n    makeGetAction,\n    makeGetOptionValue,\n    makeGetFiles,\n};\n\n// Selectors meant to be used outside of Redux code\nexport const getFileData = (state: RootState, fileId: Nullable<string>) =>\n    fileId ? selectFileMap(state)[fileId] : null;\nexport const getIsFileSelected = (state: RootState, file: FileData) => {\n    // !!! We deliberately don't use `FileHelper.isSelectable` here as we want to\n    //     reflect the state of Redux store accurately.\n    return !!selectSelectionMap(state)[file.id];\n};\nexport const getSelectedFiles = (state: RootState, ...filters: Nilable<FileFilter>[]) => {\n    const { fileMap, selectionMap } = state;\n\n    const selectedFiles = Object.keys(selectionMap).map(id => fileMap[id]);\n    const filteredSelectedFiles = filters.reduce(\n        (prevFiles, filter) => (filter ? prevFiles.filter(filter) : prevFiles),\n        selectedFiles\n    );\n    return filteredSelectedFiles;\n};\nexport const getSelectedFilesForAction = (state: RootState, fileActionId: string) =>\n    selectSelectedFilesForAction(fileActionId)(state);\n","import { Nilable } from 'tsdef';\n\nimport { ChonkyActions, DefaultFileActions, EssentialFileActions } from '../../action-definitions/index';\nimport { FileActionGroup, FileActionMenuItem } from '../../types/action-menus.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyThunk } from '../../types/redux.types';\nimport { SortOrder } from '../../types/sort.types';\nimport { sanitizeInputArray } from '../files-transforms';\nimport { reduxActions } from '../reducers';\nimport { selectCleanFileIds, selectFileMap, selectHiddenFileIdMap, selectSelectionMap } from '../selectors';\n\n/**\n * Merges multiple file action arrays into one while removing duplicates\n */\nconst mergeFileActionsArrays = (...fileActionArrays: FileAction[][]): FileAction[] => {\n    const seenActionIds = new Set<string>();\n    const addToSeen = (a: FileAction) => !!seenActionIds.add(a.id);\n    const wasNotSeen = (a: FileAction) => !seenActionIds.has(a.id);\n\n    const duplicateFreeArrays = fileActionArrays.map(arr => {\n        const duplicateFreeArray = arr.filter(wasNotSeen);\n        duplicateFreeArray.map(addToSeen);\n        return duplicateFreeArray;\n    });\n    return new Array<FileAction>().concat(...duplicateFreeArrays);\n};\n\nexport const thunkUpdateRawFileActions = (\n    rawFileActions: FileAction[] | any,\n    disableDefaultFileActions: Nilable<boolean | string[]>\n): ChonkyThunk => dispatch => {\n    const { sanitizedArray, errorMessages } = sanitizeInputArray('fileActions', rawFileActions);\n\n    // Add default actions unless user disabled them\n    let defaultActionsToAdd: FileAction[];\n    if (Array.isArray(disableDefaultFileActions)) {\n        const disabledActionIds = new Set(disableDefaultFileActions);\n        defaultActionsToAdd = DefaultFileActions.filter(action => !disabledActionIds.has(action.id));\n    } else if (disableDefaultFileActions) {\n        defaultActionsToAdd = [];\n    } else {\n        defaultActionsToAdd = DefaultFileActions;\n    }\n\n    const fileActions = mergeFileActionsArrays(sanitizedArray, EssentialFileActions, defaultActionsToAdd);\n    const optionDefaults: any = {};\n    fileActions.map(a => (a.option ? (optionDefaults[a.option.id] = a.option.defaultValue) : null));\n\n    dispatch(reduxActions.setRawFileActions(rawFileActions));\n    dispatch(reduxActions.setFileActionsErrorMessages(errorMessages));\n    dispatch(reduxActions.setFileActions(fileActions));\n    dispatch(reduxActions.setOptionDefaults(optionDefaults));\n    dispatch(thunkUpdateToolbarNContextMenuItems(fileActions));\n};\n\nexport const thunkUpdateToolbarNContextMenuItems = (fileActions: FileAction[]): ChonkyThunk => dispatch => {\n    const excludedToolbarFileActionIds = new Set<string>([\n        // TODO: Move decision to exclude actions somewhere else, as users' custom\n        //  components might not give these actions special treatment like Chonky does.\n        ChonkyActions.OpenParentFolder.id,\n    ]);\n\n    type SeenGroupMap = { [groupName: string]: FileActionGroup };\n\n    const toolbarItems: FileActionMenuItem[] = [];\n    const seenToolbarGroups: SeenGroupMap = {};\n\n    const contextMenuItems: FileActionMenuItem[] = [];\n    const seenContextMenuGroups: SeenGroupMap = {};\n\n    const getGroup = (itemArray: FileActionMenuItem[], seenMap: SeenGroupMap, groupName: string): FileActionGroup => {\n        if (seenMap[groupName]) return seenMap[groupName];\n        const group: FileActionGroup = { name: groupName, fileActionIds: [] };\n        itemArray.push(group);\n        seenMap[groupName] = group;\n        return group;\n    };\n\n    for (const action of fileActions) {\n        const button = action.button;\n        if (!button) continue;\n\n        if (button.toolbar && !excludedToolbarFileActionIds.has(action.id)) {\n            if (button.group) {\n                const group = getGroup(toolbarItems, seenToolbarGroups, button.group);\n                group.fileActionIds.push(action.id);\n            } else {\n                toolbarItems.push(action.id);\n            }\n        }\n\n        if (button.contextMenu) {\n            if (button.group) {\n                const group = getGroup(contextMenuItems, seenContextMenuGroups, button.group);\n                group.fileActionIds.push(action.id);\n            } else {\n                contextMenuItems.push(action.id);\n            }\n        }\n    }\n\n    dispatch(reduxActions.updateFileActionMenuItems([toolbarItems, contextMenuItems]));\n};\n\nexport const thunkUpdateDefaultFileViewActionId = (fileActionId: Nilable<string>): ChonkyThunk => (\n    dispatch,\n    getState\n) => {\n    const { fileActionMap } = getState();\n    const action = fileActionId ? fileActionMap[fileActionId] : null;\n    if (action && action.fileViewConfig) {\n        dispatch(reduxActions.setFileViewConfig(action.fileViewConfig));\n    }\n};\n\nexport const thunkActivateSortAction = (fileActionId: Nilable<string>): ChonkyThunk => (dispatch, getState) => {\n    if (!fileActionId) return;\n\n    const { sortActionId: oldActionId, sortOrder: oldOrder, fileActionMap } = getState();\n    const action = fileActionMap[fileActionId];\n    if (!action || !action.sortKeySelector) return;\n\n    let order = oldOrder === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\n    if (oldActionId !== fileActionId) {\n        order = SortOrder.ASC;\n    }\n\n    dispatch(reduxActions.setSort({ actionId: fileActionId, order: order }));\n};\n\nexport const thunkApplySelectionTransform = (action: FileAction): ChonkyThunk => (dispatch, getState) => {\n    const selectionTransform = action.selectionTransform;\n    if (!selectionTransform) return;\n\n    const state = getState();\n    const prevSelection = new Set<string>(Object.keys(selectSelectionMap(state)));\n    const hiddenFileIds = new Set<string>(Object.keys(selectHiddenFileIdMap(state)));\n\n    const newSelection = selectionTransform({\n        prevSelection,\n        fileIds: selectCleanFileIds(state),\n        fileMap: selectFileMap(state),\n        hiddenFileIds,\n    });\n    if (!newSelection) return;\n\n    if (newSelection.size === 0) {\n        dispatch(reduxActions.clearSelection());\n    } else {\n        dispatch(reduxActions.selectFiles({ fileIds: Array.from(newSelection), reset: true }));\n    }\n};\n","import { MaybePromise, Undefinable } from 'tsdef';\n\nimport { FileActionData, FileActionState } from '../../types/action-handler.types';\nimport { FileAction } from '../../types/action.types';\nimport { ChonkyDispatch, ChonkyThunk } from '../../types/redux.types';\nimport { Logger } from '../../util/logger';\nimport { reduxActions } from '../reducers';\nimport {\n    selectContextMenuTriggerFile, selectExternalFileActionHandler, selectFileActionMap,\n    selectInstanceId, selectSelectedFiles\n} from '../selectors';\nimport { thunkActivateSortAction, thunkApplySelectionTransform } from './file-actions.thunks';\n\n/**\n * Thunk that dispatches actions to the external (user-provided) action handler.\n */\nexport const thunkDispatchFileAction = (data: FileActionData<FileAction>): ChonkyThunk => (_dispatch, getState) => {\n    Logger.debug(`FILE ACTION DISPATCH: [${data.id}]`, 'data:', data);\n    const state = getState();\n    const action = selectFileActionMap(state)[data.id];\n    const externalFileActionHandler = selectExternalFileActionHandler(state);\n    if (action) {\n        if (externalFileActionHandler) {\n            Promise.resolve(externalFileActionHandler(data)).catch(error =>\n                Logger.error(`User-defined file action handler threw an error: ${error.message}`)\n            );\n        }\n    } else {\n        Logger.warn(\n            `Internal components dispatched the \"${data.id}\" file action, but such ` + `action was not registered.`\n        );\n    }\n};\n\n/**\n * Thunk that is used by internal components (and potentially the user) to \"request\"\n * actions. When action is requested, Chonky \"prepares\" the action data by extracting it\n * from Redux state. Once action data is ready, Chonky executes some side effect and/or\n * dispatches the action to the external action handler.\n */\nexport const thunkRequestFileAction = <Action extends FileAction>(\n    action: Action,\n    payload: Action['__payloadType']\n): ChonkyThunk => (dispatch, getState) => {\n    Logger.debug(`FILE ACTION REQUEST: [${action.id}]`, 'action:', action, 'payload:', payload);\n    const state = getState();\n    const instanceId = selectInstanceId(state);\n\n    if (!selectFileActionMap(state)[action.id]) {\n        Logger.warn(\n            `The action \"${action.id}\" was requested, but it is not registered. The ` +\n                `action will still be dispatched, but this might indicate a bug in ` +\n                `the code. Please register your actions by passing them to ` +\n                `\"fileActions\" prop.`\n        );\n    }\n\n    // Determine files for the action if action requires selection\n    const selectedFiles = selectSelectedFiles(state);\n    const selectedFilesForAction = action.fileFilter ? selectedFiles.filter(action.fileFilter) : selectedFiles;\n    if (action.requiresSelection && selectedFilesForAction.length === 0) {\n        Logger.warn(\n            `Internal components requested the \"${action.id}\" file ` +\n                `action, but the selection for this action was empty. This ` +\n                `might a bug in the code of the presentational components.`\n        );\n        return;\n    }\n\n    const contextMenuTriggerFile = selectContextMenuTriggerFile(state);\n    const actionState: FileActionState<{}> = {\n        instanceId,\n        selectedFiles,\n        selectedFilesForAction,\n        contextMenuTriggerFile,\n    };\n\n    // === Update sort state if necessary\n    const sortKeySelector = action.sortKeySelector;\n    if (sortKeySelector) dispatch(thunkActivateSortAction(action.id));\n\n    // === Update file view state if necessary\n    const fileViewConfig = action.fileViewConfig;\n    if (fileViewConfig) dispatch(reduxActions.setFileViewConfig(fileViewConfig));\n\n    // === Update option state if necessary\n    const option = action.option;\n    if (option) dispatch(reduxActions.toggleOption(option.id));\n\n    // === Apply selection transform if necessary\n    const selectionTransform = action.selectionTransform;\n    if (selectionTransform) dispatch(thunkApplySelectionTransform(action));\n\n    // Apply the effect\n    const effect = action.effect;\n    let maybeEffectPromise: MaybePromise<boolean | undefined> = undefined;\n    if (effect) {\n        try {\n            maybeEffectPromise = effect({\n                action,\n                payload,\n                state: actionState,\n                reduxDispatch: dispatch,\n                getReduxState: getState,\n            }) as MaybePromise<boolean | undefined>;\n        } catch (error) {\n            Logger.error(`User-defined effect function for action ${action.id} threw an ` + `error: ${error.message}`);\n        }\n    }\n\n    // Dispatch the action to user code. Deliberately call it after all other\n    // operations are over.\n    return Promise.resolve(maybeEffectPromise)\n        .then(effectResult => {\n            const data: FileActionData<Action> = {\n                id: action.id,\n                action,\n                payload,\n                state: actionState,\n            };\n            triggerDispatchAfterEffect(dispatch, data, effectResult);\n        })\n        .catch(error => {\n            Logger.error(\n                `User-defined effect function for action ${action.id} returned a ` +\n                    `promise that was rejected: ${error.message}`\n            );\n            const data: FileActionData<Action> = {\n                id: action.id,\n                action,\n                payload,\n                state: actionState,\n            };\n            triggerDispatchAfterEffect(dispatch, data, undefined);\n        });\n};\n\nexport const triggerDispatchAfterEffect = <Action extends FileAction>(\n    dispatch: ChonkyDispatch,\n    data: FileActionData<Action>,\n    effectResult: Undefinable<boolean>\n) => {\n    const preventDispatch = effectResult === true;\n    if (!preventDispatch) dispatch(thunkDispatchFileAction(data));\n};\n","export enum FileViewMode {\n    List = 'list',\n    Compact = 'compact',\n    Grid = 'grid',\n}\n\nexport type FileViewConfigList = {\n    mode: FileViewMode.List;\n    entryHeight: number;\n};\n\nexport type FileViewConfigGrid = {\n    mode: FileViewMode.Compact | FileViewMode.Grid;\n    entryWidth: number;\n    entryHeight: number;\n};\n\nexport type FileViewConfig = FileViewConfigList | FileViewConfigGrid;\n","import React from 'react';\n\nexport enum ChonkyIconName {\n    // Misc\n    loading = 'loading',\n    dropdown = 'dropdown',\n    placeholder = 'placeholder',\n\n    // File Actions: Drag & drop\n    dndDragging = 'dndDragging',\n    dndCanDrop = 'dndCanDrop',\n    dndCannotDrop = 'dndCannotDrop',\n\n    // File Actions: File operations\n    openFiles = 'openFiles',\n    openParentFolder = 'openParentFolder',\n    copy = 'copy',\n    paste = 'paste',\n    share = 'share',\n    search = 'search',\n    selectAllFiles = 'selectAllFiles',\n    clearSelection = 'clearSelection',\n\n    // File Actions: Sorting & options\n    sortAsc = 'sortAsc',\n    sortDesc = 'sortDesc',\n    toggleOn = 'toggleOn',\n    toggleOff = 'toggleOff',\n\n    // File Actions: File Views\n    list = 'list',\n    compact = 'compact',\n    smallThumbnail = 'smallThumbnail',\n    largeThumbnail = 'largeThumbnail',\n\n    // File Actions: Unsorted\n    folder = 'folder',\n    folderCreate = 'folderCreate',\n    folderOpen = 'folderOpen',\n    folderChainSeparator = 'folderChainSeparator',\n    download = 'download',\n    upload = 'upload',\n    trash = 'trash',\n    fallbackIcon = 'fallbackIcon',\n\n    // File modifiers\n    symlink = 'symlink',\n    hidden = 'hidden',\n\n    // Generic file types\n    file = 'file',\n    license = 'license',\n    code = 'code',\n    config = 'config',\n    model = 'model',\n    database = 'database',\n    text = 'text',\n    archive = 'archive',\n    image = 'image',\n    video = 'video',\n    info = 'info',\n    key = 'key',\n    lock = 'lock',\n    music = 'music',\n    terminal = 'terminal',\n    users = 'users',\n\n    // OS file types\n    linux = 'linux',\n    ubuntu = 'ubuntu',\n    windows = 'windows',\n\n    // Programming language file types\n    rust = 'rust',\n    python = 'python',\n    nodejs = 'nodejs',\n    php = 'php',\n\n    // Development tools file types\n    git = 'git',\n\n    // Brands file types\n    adobe = 'adobe',\n\n    // Other program file types\n    pdf = 'pdf',\n    excel = 'excel',\n    word = 'word',\n    flash = 'flash',\n}\n\nexport interface FileIconData {\n    icon: ChonkyIconName | string;\n    colorCode: number;\n}\n\nexport interface ChonkyIconProps {\n    icon: ChonkyIconName | string;\n    spin?: boolean;\n    className?: string;\n    fixedWidth?: boolean;\n    style?: React.CSSProperties;\n}\n","// Used in React hooks to indicate empty deps are intentional.\nimport { MaybePromise, Nullable, WritableProps } from 'tsdef';\n\nimport { FileAction, FileActionEffect } from '../types/action.types';\nimport { Logger } from './logger';\n\n// Used in contexts that need to provide some default value for a function.\n// eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars\nexport const NOOP_FUNCTION = (...args: any[]) => {\n    Logger.warn(\n        `The \"NOOP_FUNCTION\" from the constants module was called. ` +\n            `This can indicate a bug in one of the components. Supplied args:`,\n        args\n    );\n};\n\nexport const isPromise = <T>(value: MaybePromise<T> | any): value is Promise<T> => {\n    if (typeof value !== 'object' || !value) return false;\n    const then = (value as Promise<T>).then;\n    return then && typeof then === 'function';\n};\n\nexport const defineFileAction = <Action extends FileAction>(\n    action: Action,\n    effect?: FileActionEffect<FileAction>\n): WritableProps<Action> => {\n    if (action.__payloadType !== undefined && (action.hotkeys || action.button)) {\n        const errorMessage =\n            `Invalid definition was provided for file action \"${action.id}\". Actions ` +\n            `that specify hotkeys or buttons cannot define a payload type. If ` +\n            `your application requires this functionality, define two actions ` +\n            `and chain them using effects.`;\n        Logger.error(errorMessage);\n        throw new Error(errorMessage);\n    }\n\n    action.effect = effect;\n    return action;\n};\n\n/**\n * Recursively check the current element and the parent elements, going bottom-up.\n * Returns the first element to match the predicate, otherwise returns null if such\n * element is not found.\n */\nexport const findElementAmongAncestors = (\n    maybeElement: HTMLElement | any,\n    predicate: (maybeElement: HTMLElement | any) => boolean\n): Nullable<HTMLElement> => {\n    if (!maybeElement) return maybeElement;\n\n    if (predicate(maybeElement)) return maybeElement;\n\n    if (maybeElement.parentElement) {\n        return findElementAmongAncestors(maybeElement.parentElement, predicate);\n    }\n\n    return null;\n};\n\nexport const elementIsInsideButton = (buttonCandidate: HTMLElement | any): boolean => {\n    return !!findElementAmongAncestors(\n        buttonCandidate,\n        (element: any) => element.tagName && element.tagName.toLowerCase() === 'button'\n    );\n};\n\nexport const getValueOrFallback = <T extends any>(\n    value: T | undefined,\n    fallback: T,\n    desiredType?: 'boolean' | 'string' | 'number'\n): NonNullable<T> => {\n    if (desiredType) {\n        return (typeof value === desiredType ? value : fallback) as NonNullable<T>;\n    }\n    return (value !== undefined ? value : fallback) as NonNullable<T>;\n};\n","import { ChonkyThunk } from '../../types/redux.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { reduxActions } from '../reducers';\nimport { selectors } from '../selectors';\n\nexport const reduxThunks = {\n    selectRange: (params: {\n        rangeStart: number;\n        rangeEnd: number;\n        reset?: boolean;\n    }): ChonkyThunk => (dispatch, getState) => {\n        const state = getState();\n        if (state.disableSelection) return;\n        const displayFileIds = selectors.getDisplayFileIds(state);\n        const fileIdsToSelect = displayFileIds\n            .slice(params.rangeStart, params.rangeEnd + 1)\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id])) as string[];\n        dispatch(\n            reduxActions.selectFiles({\n                fileIds: fileIdsToSelect,\n                reset: !!params.reset,\n            })\n        );\n    },\n};\n","import { reduxActions } from '../redux/reducers';\nimport {\n    getFileData, getIsFileSelected, selectDisableSelection, selectors, selectParentFolder,\n    selectSelectionSize\n} from '../redux/selectors';\nimport { reduxThunks } from '../redux/thunks';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport {\n    ChangeSelectionPayload, EndDragNDropPayload, KeyboardClickFilePayload, MouseClickFilePayload,\n    MoveFilesPayload, OpenFileContextMenuPayload, OpenFilesPayload, StartDragNDropPayload\n} from '../types/action-payloads.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { Logger } from '../util/logger';\nimport { ChonkyActions } from './index';\n\nexport const EssentialActions = {\n    /**\n     * Action that is dispatched when the user clicks on a file entry using their mouse.\n     * Both single clicks and double clicks trigger this action.\n     */\n    MouseClickFile: defineFileAction(\n        {\n            id: 'mouse_click_file',\n            __payloadType: {} as MouseClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (payload.clickType === 'double') {\n                if (FileHelper.isOpenable(payload.file)) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n\n                            // To simulate Windows Explorer and Nautilus behaviour,\n                            // a double click on a file only opens that file even if\n                            // there is a selection.\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else {\n                // We're dealing with a single click\n\n                const disableSelection = selectDisableSelection(getReduxState());\n                if (FileHelper.isSelectable(payload.file) && !disableSelection) {\n                    if (payload.ctrlKey) {\n                        // Multiple selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: false,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex({\n                                index: payload.fileDisplayIndex,\n                                fileId: payload.file.id,\n                            })\n                        );\n                    } else if (payload.shiftKey) {\n                        // Range selection\n                        const lastClickIndex = selectors.getLastClickIndex(getReduxState());\n                        if (typeof lastClickIndex === 'number') {\n                            // We have the index of the previous click\n                            let rangeStart = lastClickIndex;\n                            let rangeEnd = payload.fileDisplayIndex;\n                            if (rangeStart > rangeEnd) {\n                                [rangeStart, rangeEnd] = [rangeEnd, rangeStart];\n                            }\n\n                            reduxDispatch(reduxThunks.selectRange({ rangeStart, rangeEnd }));\n                        } else {\n                            // Since we can't do a range selection, do a\n                            // multiple selection\n                            reduxDispatch(\n                                reduxActions.toggleSelection({\n                                    fileId: payload.file.id,\n                                    exclusive: false,\n                                })\n                            );\n                            reduxDispatch(\n                                reduxActions.setLastClickIndex({\n                                    index: payload.fileDisplayIndex,\n                                    fileId: payload.file.id,\n                                })\n                            );\n                        }\n                    } else {\n                        // Exclusive selection\n                        reduxDispatch(\n                            reduxActions.toggleSelection({\n                                fileId: payload.file.id,\n                                exclusive: true,\n                            })\n                        );\n                        reduxDispatch(\n                            reduxActions.setLastClickIndex({\n                                index: payload.fileDisplayIndex,\n                                fileId: payload.file.id,\n                            })\n                        );\n                    }\n                } else {\n                    if (!payload.ctrlKey && !disableSelection) {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                    reduxDispatch(\n                        reduxActions.setLastClickIndex({\n                            index: payload.fileDisplayIndex,\n                            fileId: payload.file.id,\n                        })\n                    );\n                }\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when the user \"clicks\" on a file using their keyboard.\n     * Using Space and Enter keys counts as clicking.\n     */\n    KeyboardClickFile: defineFileAction(\n        {\n            id: 'keyboard_click_file',\n            __payloadType: {} as KeyboardClickFilePayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            reduxDispatch(\n                reduxActions.setLastClickIndex({\n                    index: payload.fileDisplayIndex,\n                    fileId: payload.file.id,\n                })\n            );\n            if (payload.enterKey) {\n                // We only dispatch the Open Files action here when the selection is\n                // empty. Otherwise, `Enter` key presses are handled by the\n                // hotkey manager for the Open Files action.\n                if (selectSelectionSize(getReduxState()) === 0) {\n                    reduxDispatch(\n                        thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                            targetFile: payload.file,\n                            files: [payload.file],\n                        })\n                    );\n                }\n            } else if (payload.spaceKey && FileHelper.isSelectable(payload.file)) {\n                reduxDispatch(\n                    reduxActions.toggleSelection({\n                        fileId: payload.file.id,\n                        exclusive: payload.ctrlKey,\n                    })\n                );\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user starts dragging some file.\n     */\n    StartDragNDrop: defineFileAction(\n        {\n            id: 'start_drag_n_drop',\n            __payloadType: {} as StartDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            const file = payload.draggedFile;\n            if (!getIsFileSelected(getReduxState(), file)) {\n                if (FileHelper.isSelectable(file)) {\n                    reduxDispatch(\n                        reduxActions.selectFiles({\n                            fileIds: [file.id],\n                            reset: true,\n                        })\n                    );\n                }\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user either cancels the drag & drop interaction,\n     * or drops a file somewhere.\n     */\n    EndDragNDrop: defineFileAction(\n        {\n            id: 'end_drag_n_drop',\n            __payloadType: {} as EndDragNDropPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            if (getIsFileSelected(getReduxState(), payload.destination)) {\n                // Can't drop a selection into itself\n                return;\n            }\n\n            const { draggedFile, selectedFiles } = payload as EndDragNDropPayload;\n            const droppedFiles = selectedFiles.length > 0 ? selectedFiles : [draggedFile];\n            reduxDispatch(\n                thunkRequestFileAction(ChonkyActions.MoveFiles, {\n                    ...payload,\n                    files: droppedFiles,\n                })\n            );\n        }\n    ),\n    /**\n     * Action that is dispatched when user moves files from one folder to another,\n     * usually by dragging & dropping some files into the folder.\n     */\n    MoveFiles: defineFileAction({\n        id: 'move_files',\n        __payloadType: {} as MoveFilesPayload,\n    } as const),\n    /**\n     * Action that is dispatched when the selection changes for any reason.\n     */\n    ChangeSelection: defineFileAction({\n        id: 'change_selection',\n        __payloadType: {} as ChangeSelectionPayload,\n    } as const),\n    /**\n     * Action that is dispatched when user wants to open some files. This action is\n     * often triggered by other actions.\n     */\n    OpenFiles: defineFileAction({\n        id: 'open_files',\n        __payloadType: {} as OpenFilesPayload,\n    } as const),\n    /**\n     * Action that is triggered when user wants to go up a directory.\n     */\n    OpenParentFolder: defineFileAction(\n        {\n            id: 'open_parent_folder',\n            hotkeys: ['backspace'],\n            button: {\n                name: 'Go up a directory',\n                toolbar: true,\n                contextMenu: false,\n                icon: ChonkyIconName.openParentFolder,\n                iconOnly: true,\n            },\n        } as const,\n        ({ reduxDispatch, getReduxState }) => {\n            const parentFolder = selectParentFolder(getReduxState());\n            if (FileHelper.isOpenable(parentFolder)) {\n                reduxDispatch(\n                    thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                        targetFile: parentFolder,\n                        files: [parentFolder],\n                    })\n                );\n            } else {\n                Logger.warn(\n                    'Open parent folder effect was triggered  even though the parent folder' +\n                        ' is not openable. This indicates a bug in presentation components.'\n                );\n            }\n        }\n    ),\n    /**\n     * Action that is dispatched when user opens the context menu, either by right click\n     * on something or using the context menu button on their keyboard.\n     */\n    OpenFileContextMenu: defineFileAction(\n        {\n            id: 'open_file_context_menu',\n            __payloadType: {} as OpenFileContextMenuPayload,\n        } as const,\n        ({ payload, reduxDispatch, getReduxState }) => {\n            // TODO: Check if the context menu component is actually enabled. There is a\n            //  chance it doesn't matter if it is enabled or not - if it is not mounted,\n            //  the action will simply have no effect. It also allows users to provide\n            //  their own components - however, users could also flip the \"context menu\n            //  component mounted\" switch...\n            const triggerFile = getFileData(getReduxState(), payload.triggerFileId);\n            if (triggerFile) {\n                const fileSelected = getIsFileSelected(getReduxState(), triggerFile);\n                if (!fileSelected) {\n                    // If file is selected, we leave the selection as is. If it is not\n                    // selected, it means user right clicked the file with no selection.\n                    // We simulate the Windows Explorer/Nautilus behaviour of moving\n                    // selection to this file.\n                    if (FileHelper.isSelectable(triggerFile)) {\n                        reduxDispatch(\n                            reduxActions.selectFiles({\n                                fileIds: [payload.triggerFileId],\n                                reset: true,\n                            })\n                        );\n                    } else {\n                        reduxDispatch(reduxActions.clearSelection());\n                    }\n                }\n            }\n\n            reduxDispatch(\n                reduxActions.showContextMenu({\n                    triggerFileId: payload.triggerFileId,\n                    mouseX: payload.clientX - 2,\n                    mouseY: payload.clientY - 4,\n                })\n            );\n        }\n    ),\n};\n","import { Nullable } from 'tsdef';\n\nimport { selectFocusSearchInput } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileSelectionTransform } from '../types/action.types';\nimport { FileViewMode } from '../types/file-view.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { FileHelper } from '../util/file-helper';\nimport { defineFileAction } from '../util/helpers';\nimport { EssentialActions } from './essential';\nimport { OptionIds } from './option-ids';\n\nexport const DefaultActions = {\n    /**\n     * Action that can be used to open currently selected files.\n     */\n    OpenSelection: defineFileAction(\n        {\n            id: 'open_selection',\n            hotkeys: ['enter'],\n            requiresSelection: true,\n            fileFilter: FileHelper.isOpenable,\n            button: {\n                name: 'Open selection',\n                toolbar: true,\n                contextMenu: true,\n                group: 'Actions',\n                icon: ChonkyIconName.openFiles,\n            },\n        } as const,\n        ({ state, reduxDispatch }) => {\n            reduxDispatch(\n                thunkRequestFileAction(EssentialActions.OpenFiles, {\n                    files: state.selectedFilesForAction!,\n                })\n            );\n            return undefined;\n        }\n    ),\n    /**\n     * Action that selects all files.\n     */\n    SelectAllFiles: defineFileAction({\n        id: 'select_all_files',\n        hotkeys: ['ctrl+a'],\n        button: {\n            name: 'Select all files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.selectAllFiles,\n        },\n        selectionTransform: (({ fileIds, hiddenFileIds }) => {\n            const newSelection = new Set<string>();\n            fileIds.map(fileId => {\n                // We don't need to check if file is selectable because Chonky does\n                // it own checks internally.\n                if (!hiddenFileIds.has(fileId)) newSelection.add(fileId);\n            });\n            return newSelection;\n        }) as FileSelectionTransform,\n    } as const),\n    /**\n     * Action that clear the file selection.\n     */\n    ClearSelection: defineFileAction({\n        id: 'clear_selection',\n        hotkeys: ['escape'],\n        button: {\n            name: 'Clear selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.clearSelection,\n        },\n        selectionTransform: (({ prevSelection }) => {\n            if (prevSelection.size === 0) return null;\n            return new Set<string>();\n        }) as FileSelectionTransform,\n    } as const),\n    /**\n     * Action that enables List view.\n     */\n    EnableListView: defineFileAction({\n        id: 'enable_list_view',\n        fileViewConfig: {\n            mode: FileViewMode.List,\n            entryHeight: 30,\n        },\n        button: {\n            name: 'Switch to List view',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that enables Compact view. Note that compact view is still\n     * experimental and should not be used in production.\n     */\n    EnableCompactView: defineFileAction({\n        // TODO: Don't enable until compact view is fully supported\n        id: 'enable_compact_view',\n        fileViewConfig: {\n            mode: FileViewMode.Compact,\n            entryHeight: 40,\n            entryWidth: 220,\n        },\n        button: {\n            name: 'Switch to Compact view',\n            toolbar: true,\n            icon: ChonkyIconName.compact,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that enables Grid view.\n     */\n    EnableGridView: defineFileAction({\n        id: 'enable_grid_view',\n        fileViewConfig: { mode: FileViewMode.Grid, entryWidth: 165, entryHeight: 130 },\n        button: {\n            name: 'Switch to Grid view',\n            toolbar: true,\n            icon: ChonkyIconName.smallThumbnail,\n            iconOnly: true,\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.name`.\n     */\n    SortFilesByName: defineFileAction({\n        id: 'sort_files_by_name',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.name.toLowerCase() : undefined),\n        button: {\n            name: 'Sort by name',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.size`.\n     */\n    SortFilesBySize: defineFileAction({\n        id: 'sort_files_by_size',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.size : undefined),\n        button: {\n            name: 'Sort by size',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that sorts files by `file.modDate`.\n     */\n    SortFilesByDate: defineFileAction({\n        id: 'sort_files_by_date',\n        sortKeySelector: (file: Nullable<FileData>) => (file ? file.modDate : undefined),\n        button: {\n            name: 'Sort by date',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that toggles whether hidden files are shown to the user or not.\n     */\n    ToggleHiddenFiles: defineFileAction({\n        id: 'toggle_hidden_files',\n        hotkeys: ['ctrl+h'],\n        option: {\n            id: OptionIds.ShowHiddenFiles,\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show hidden files',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that toggles whether folders should appear before files regardless of\n     * current sort function.\n     */\n    ToggleShowFoldersFirst: defineFileAction({\n        id: 'toggle_show_folders_first',\n        option: {\n            id: OptionIds.ShowFoldersFirst,\n            defaultValue: true,\n        },\n        button: {\n            name: 'Show folders first',\n            toolbar: true,\n            group: 'Options',\n        },\n    } as const),\n    /**\n     * Action that focuses the search input when it is dispatched.\n     */\n    FocusSearchInput: defineFileAction(\n        {\n            id: 'focus_search_input',\n            hotkeys: ['ctrl+f'],\n        } as const,\n        ({ getReduxState }) => {\n            const focusSearchInput = selectFocusSearchInput(getReduxState());\n            if (focusSearchInput) focusSearchInput();\n        }\n    ),\n    /**\n     * Action that enables List view.\n     */\n    ToggleDarkMode: defineFileAction({\n        id: 'enable_dark_mode',\n        option: {\n            id: OptionIds.DarkMode,\n            defaultValue: false,\n        },\n        button: {\n            name: 'Enable dark mode',\n            toolbar: true,\n            icon: ChonkyIconName.list,\n            iconOnly: true,\n        },\n    } as const),\n};\n","import { ChonkyIconName } from '../types/icons.types';\nimport { defineFileAction } from '../util/helpers';\n\nexport const ExtraActions = {\n    /**\n     * Action that adds a button and shortcut to copy files.\n     */\n    CopyFiles: defineFileAction({\n        id: 'copy_files',\n        requiresSelection: true,\n        hotkeys: ['ctrl+c'],\n        button: {\n            name: 'Copy selection',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.copy,\n        },\n    } as const),\n    /**\n     * Action that adds a button to create a new folder.\n     */\n    CreateFolder: defineFileAction({\n        id: 'create_folder',\n        button: {\n            name: 'Create folder',\n            toolbar: true,\n            tooltip: 'Create a folder',\n            icon: ChonkyIconName.folderCreate,\n        },\n    } as const),\n    /**\n     * Action that adds a button to upload files.\n     */\n    UploadFiles: defineFileAction({\n        id: 'upload_files',\n        button: {\n            name: 'Upload files',\n            toolbar: true,\n            tooltip: 'Upload files',\n            icon: ChonkyIconName.upload,\n        },\n    } as const),\n    /**\n     * Action that adds a button to download files.\n     */\n    DownloadFiles: defineFileAction({\n        id: 'download_files',\n        requiresSelection: true,\n        button: {\n            name: 'Download files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.download,\n        },\n    } as const),\n    /**\n     * Action that adds a button and shortcut to delete files.\n     */\n    DeleteFiles: defineFileAction({\n        id: 'delete_files',\n        requiresSelection: true,\n        hotkeys: ['delete'],\n        button: {\n            name: 'Delete files',\n            toolbar: true,\n            contextMenu: true,\n            group: 'Actions',\n            icon: ChonkyIconName.trash,\n        },\n    } as const),\n};\n","import { DefaultActions } from './default';\nimport { EssentialActions } from './essential';\nimport { ExtraActions } from './extra';\n\nexport { OptionIds } from './option-ids';\n\nexport const ChonkyActions = {\n    ...EssentialActions,\n    ...DefaultActions,\n    ...ExtraActions,\n};\n\nexport const EssentialFileActions = [\n    ChonkyActions.MouseClickFile,\n    ChonkyActions.KeyboardClickFile,\n    ChonkyActions.StartDragNDrop,\n    ChonkyActions.EndDragNDrop,\n    ChonkyActions.MoveFiles,\n    ChonkyActions.ChangeSelection,\n    ChonkyActions.OpenFiles,\n    ChonkyActions.OpenParentFolder,\n    ChonkyActions.OpenFileContextMenu,\n];\n\nexport const DefaultFileActions = [\n    ChonkyActions.OpenSelection,\n    ChonkyActions.SelectAllFiles,\n    ChonkyActions.ClearSelection,\n    ChonkyActions.EnableListView,\n    // TODO: Don't enable until compact view is fully supported\n    // ChonkyActions.EnableCompactView,\n    ChonkyActions.EnableGridView,\n    ChonkyActions.SortFilesByName,\n    ChonkyActions.SortFilesBySize,\n    ChonkyActions.SortFilesByDate,\n    ChonkyActions.ToggleHiddenFiles,\n    ChonkyActions.ToggleShowFoldersFirst,\n    ChonkyActions.FocusSearchInput,\n];\n","import { ChonkyActions } from '../action-definitions/index';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\n\nexport const initialRootState: RootState = {\n    instanceId: 'CHONKY_INVALID_ID', // should be overwritten by preloaded state\n\n    externalFileActionHandler: null,\n\n    rawFileActions: [],\n    fileActionsErrorMessages: [],\n    fileActionMap: {},\n    fileActionIds: [],\n    toolbarItems: [],\n    contextMenuItems: [],\n\n    rawFolderChain: null,\n    folderChainErrorMessages: [],\n    folderChain: [],\n\n    rawFiles: [],\n    filesErrorMessages: [],\n    fileMap: {},\n    fileIds: [],\n    cleanFileIds: [],\n\n    sortedFileIds: [],\n    hiddenFileIdMap: {},\n\n    focusSearchInput: null,\n    searchString: '',\n    searchMode: 'currentFolder',\n\n    selectionMap: {},\n    disableSelection: false,\n\n    fileViewConfig: ChonkyActions.EnableGridView.fileViewConfig,\n\n    sortActionId: null,\n    sortOrder: SortOrder.ASC,\n\n    optionMap: {},\n\n    thumbnailGenerator: null,\n    doubleClickDelay: 300,\n    disableDragAndDrop: false,\n    clearSelectionOnOutsideClick: true,\n\n    lastClick: null,\n\n    contextMenuMounted: false,\n    contextMenuConfig: null,\n};\n","import { Nilable, Nullable } from 'tsdef';\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { GenericFileActionHandler } from '../types/action-handler.types';\nimport { FileActionMenuItem } from '../types/action-menus.types';\nimport { FileAction, FileActionMap } from '../types/action.types';\nimport { ContextMenuConfig } from '../types/context-menu.types';\nimport { FileViewConfig } from '../types/file-view.types';\nimport { FileArray, FileIdTrueMap, FileMap } from '../types/file.types';\nimport { OptionMap } from '../types/options.types';\nimport { RootState } from '../types/redux.types';\nimport { SortOrder } from '../types/sort.types';\nimport { ThumbnailGenerator } from '../types/thumbnails.types';\nimport { FileHelper } from '../util/file-helper';\nimport { sanitizeInputArray } from './files-transforms';\nimport { initialRootState } from './state';\n\nconst reducers = {\n    setExternalFileActionHandler(\n        state: RootState,\n        action: PayloadAction<Nilable<GenericFileActionHandler<FileAction>>>\n    ) {\n        state.externalFileActionHandler = action.payload ?? null;\n    },\n    setRawFileActions(state: RootState, action: PayloadAction<FileAction[] | any>) {\n        state.rawFileActions = action.payload;\n    },\n    setFileActionsErrorMessages(state: RootState, action: PayloadAction<string[]>) {\n        state.fileActionsErrorMessages = action.payload;\n    },\n    setFileActions(state: RootState, action: PayloadAction<FileAction[]>) {\n        const fileActionMap: FileActionMap = {};\n        action.payload.map(a => (fileActionMap[a.id] = a));\n        const fileIds = action.payload.map(a => a.id);\n\n        state.fileActionMap = fileActionMap as FileMap;\n        state.fileActionIds = fileIds;\n    },\n    updateFileActionMenuItems(state: RootState, action: PayloadAction<[FileActionMenuItem[], FileActionMenuItem[]]>) {\n        [state.toolbarItems, state.contextMenuItems] = action.payload;\n    },\n    setRawFolderChain(state: RootState, action: PayloadAction<FileArray | any>) {\n        const rawFolderChain = action.payload;\n        const { sanitizedArray: folderChain, errorMessages } = sanitizeInputArray('folderChain', rawFolderChain);\n        state.rawFolderChain = rawFolderChain;\n        state.folderChain = folderChain;\n        state.folderChainErrorMessages = errorMessages;\n    },\n    setRawFiles(state: RootState, action: PayloadAction<FileArray | any>) {\n        const rawFiles = action.payload;\n        const { sanitizedArray: files, errorMessages } = sanitizeInputArray('files', rawFiles);\n        state.rawFiles = rawFiles;\n        state.filesErrorMessages = errorMessages;\n\n        const fileMap: FileMap = {};\n        files.forEach(f => {\n            if (f) fileMap[f.id] = f;\n        });\n        const fileIds = files.map(f => (f ? f.id : null));\n        const cleanFileIds = fileIds.filter(f => !!f) as string[];\n\n        state.fileMap = fileMap;\n        state.fileIds = fileIds;\n        state.cleanFileIds = cleanFileIds;\n\n        // Cleanup selection\n        for (const selectedFileId of Object.keys(state.selectionMap)) {\n            if (!fileMap[selectedFileId]) {\n                delete state.selectionMap[selectedFileId];\n            }\n        }\n    },\n    setSortedFileIds(state: RootState, action: PayloadAction<Nullable<string>[]>) {\n        state.sortedFileIds = action.payload;\n    },\n    setHiddenFileIds(state: RootState, action: PayloadAction<FileIdTrueMap>) {\n        state.hiddenFileIdMap = action.payload;\n\n        // Cleanup selection\n        for (const selectedFileId of Object.keys(state.selectionMap)) {\n            if (state.hiddenFileIdMap[selectedFileId]) {\n                delete state.selectionMap[selectedFileId];\n            }\n        }\n    },\n    setFocusSearchInput(state: RootState, action: PayloadAction<Nullable<() => void>>) {\n        state.focusSearchInput = action.payload;\n    },\n    setSearchString(state: RootState, action: PayloadAction<string>) {\n        state.searchString = action.payload;\n    },\n    selectAllFiles(state: RootState) {\n        state.fileIds\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id]))\n            .map(id => (id ? (state.selectionMap[id] = true) : null));\n    },\n    selectFiles(state: RootState, action: PayloadAction<{ fileIds: string[]; reset: boolean }>) {\n        if (state.disableSelection) return;\n        if (action.payload.reset) state.selectionMap = {};\n        action.payload.fileIds\n            .filter(id => id && FileHelper.isSelectable(state.fileMap[id]))\n            .map(id => (state.selectionMap[id] = true));\n    },\n    toggleSelection(state: RootState, action: PayloadAction<{ fileId: string; exclusive: boolean }>) {\n        if (state.disableSelection) return;\n        const oldValue = !!state.selectionMap[action.payload.fileId];\n        if (action.payload.exclusive) state.selectionMap = {};\n        if (oldValue) delete state.selectionMap[action.payload.fileId];\n        else if (FileHelper.isSelectable(state.fileMap[action.payload.fileId])) {\n            state.selectionMap[action.payload.fileId] = true;\n        }\n    },\n    clearSelection(state: RootState) {\n        if (state.disableSelection) return;\n        if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n    },\n    setSelectionDisabled(state: RootState, action: PayloadAction<boolean>) {\n        state.disableSelection = action.payload;\n        if (Object.keys(state.selectionMap).length !== 0) state.selectionMap = {};\n    },\n    setFileViewConfig(state: RootState, action: PayloadAction<FileViewConfig>) {\n        state.fileViewConfig = action.payload;\n    },\n    setSort(state: RootState, action: PayloadAction<{ actionId: string; order: SortOrder }>) {\n        state.sortActionId = action.payload.actionId;\n        state.sortOrder = action.payload.order;\n    },\n    setOptionDefaults(state: RootState, action: PayloadAction<OptionMap>) {\n        for (const optionId of Object.keys(action.payload)) {\n            if (optionId in state.optionMap) continue;\n            state.optionMap[optionId] = action.payload[optionId];\n        }\n    },\n    toggleOption(state: RootState, action: PayloadAction<string>) {\n        state.optionMap[action.payload] = !state.optionMap[action.payload];\n    },\n    setThumbnailGenerator(state: RootState, action: PayloadAction<Nullable<ThumbnailGenerator>>) {\n        state.thumbnailGenerator = action.payload;\n    },\n    setDoubleClickDelay(state: RootState, action: PayloadAction<number>) {\n        state.doubleClickDelay = action.payload;\n    },\n    setDisableDragAndDrop(state: RootState, action: PayloadAction<boolean>) {\n        state.disableDragAndDrop = action.payload;\n    },\n    setClearSelectionOnOutsideClick(state: RootState, action: PayloadAction<boolean>) {\n        state.clearSelectionOnOutsideClick = action.payload;\n    },\n    setLastClickIndex(state: RootState, action: PayloadAction<Nullable<{ index: number; fileId: string }>>) {\n        state.lastClick = action.payload;\n    },\n    setContextMenuMounted(state: RootState, action: PayloadAction<boolean>) {\n        state.contextMenuMounted = action.payload;\n    },\n    showContextMenu(state: RootState, action: PayloadAction<ContextMenuConfig>) {\n        state.contextMenuConfig = action.payload;\n    },\n    hideContextMenu(state: RootState) {\n        if (!state.contextMenuConfig) return;\n        state.contextMenuConfig = null;\n    },\n};\n\nexport const { actions: reduxActions, reducer: rootReducer } = createSlice({\n    name: 'root',\n    initialState: initialRootState,\n    reducers,\n});\n","import { useEffect } from 'react';\nimport watch from 'redux-watch';\n\nimport { Store } from '@reduxjs/toolkit';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { RootState } from '../types/redux.types';\nimport { FileSelection } from '../types/selection.types';\nimport { selectSelectedFileIds, selectSelectionMap } from './selectors';\nimport { thunkRequestFileAction } from './thunks/dispatchers.thunks';\n\nexport const useStoreWatchers = (store: Store<RootState>) => {\n    useEffect(() => {\n        const selectionWatcher = watch(() => selectSelectionMap(store.getState()));\n        const onSelectionChange = (\n            newSelection: FileSelection,\n            oldSelection: FileSelection\n        ) => {\n            // We don't check for deep equality here as we expect the\n            // reducers to prevent all unnecessary updates.\n            if (newSelection === oldSelection) return;\n\n            // Notify users the selection has changed.\n            const selectedFilesIds = selectSelectedFileIds(store.getState());\n            const selection = new Set<string>(selectedFilesIds);\n            store.dispatch(\n                thunkRequestFileAction(ChonkyActions.ChangeSelection, {\n                    selection,\n                }) as any\n            );\n        };\n\n        const unsubscribeCallbacks = [\n            store.subscribe(selectionWatcher(onSelectionChange)),\n        ];\n        return () => {\n            for (const unsubscribe of unsubscribeCallbacks) unsubscribe();\n        };\n    }, [store]);\n};\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { RootState } from '../types/redux.types';\nimport { useStaticValue } from '../util/hooks-helpers';\nimport { rootReducer } from './reducers';\nimport { initialRootState } from './state';\nimport { useStoreWatchers } from './watchers';\n\nexport const useChonkyStore = (chonkyInstanceId: string) => {\n    const store = useStaticValue(() => {\n        const preloadedState: RootState = {\n            ...initialRootState,\n            instanceId: chonkyInstanceId,\n        };\n\n        return configureStore({\n            preloadedState: preloadedState as any,\n            reducer: rootReducer,\n            middleware: getDefaultMiddleware =>\n                getDefaultMiddleware({\n                    serializableCheck: false,\n                }),\n            devTools: { name: `chonky_${chonkyInstanceId}` },\n        });\n    });\n    useStoreWatchers(store);\n    return store;\n};\n\n/**\n * Hook that can be used with parametrized selectors.\n */\nexport const useParamSelector = <Args extends Array<any>, Value>(\n    parametrizedSelector: (...args: Args) => (state: RootState) => Value,\n    ...selectorParams: Args\n) => {\n    const selector = useCallback(\n        (state: RootState) => parametrizedSelector(...selectorParams)(state),\n        // eslint-disable-next-line\n        [parametrizedSelector, ...selectorParams]\n    );\n    return useSelector(selector);\n};\n\n/**\n * DTE - DispatchThunkEffect. This method is used to decrease code duplication in\n * main Chonky method.\n */\nexport const useDTE = <Args extends Array<any>>(actionCreator: (...args: Args) => any, ...selectorParams: Args) => {\n    const dispatch = useDispatch();\n    useEffect(\n        () => {\n            dispatch(actionCreator(...selectorParams));\n        },\n        // eslint-disable-next-line\n        [dispatch, actionCreator, ...selectorParams]\n    );\n};\n\nexport const usePropReduxUpdate = <Payload extends any>(actionCreator: (payload: Payload) => any, payload: Payload) => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(actionCreator(payload));\n    }, [dispatch, actionCreator, payload]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { ChonkyIconProps } from '../../types/icons.types';\n\nexport const ChonkyIconPlaceholder: React.FC<ChonkyIconProps> = () => {\n    // This component should not be rendered unless the user has misconfigured Chonky\n    const title =\n        'No icon component found. Please follow Chonky installation instructions to ' +\n        'provide a pre-made icon component (or a custom icon).';\n    return <span title={title}>⚠️</span>;\n};\n","import { ChonkyActions } from '../action-definitions/index';\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileBrowserProps } from '../types/file-browser.types';\n\nexport type ChonkyConfig = Pick<\n    FileBrowserProps,\n    | 'fileActions'\n    | 'onFileAction'\n    | 'thumbnailGenerator'\n    | 'doubleClickDelay'\n    | 'disableSelection'\n    | 'disableDefaultFileActions'\n    | 'disableDragAndDrop'\n    | 'disableDragAndDropProvider'\n    | 'defaultSortActionId'\n    | 'defaultFileViewActionId'\n    | 'clearSelectionOnOutsideClick'\n    | 'iconComponent'\n    | 'darkMode'\n    | 'i18n'\n>;\n\nexport const defaultConfig: ChonkyConfig = {\n    fileActions: null,\n    onFileAction: null,\n    thumbnailGenerator: null,\n    doubleClickDelay: 300,\n    disableSelection: false,\n    disableDefaultFileActions: false,\n    disableDragAndDrop: false,\n    disableDragAndDropProvider: false,\n    defaultSortActionId: ChonkyActions.SortFilesByName.id,\n    defaultFileViewActionId: ChonkyActions.EnableGridView.id,\n    clearSelectionOnOutsideClick: true,\n    iconComponent: ChonkyIconPlaceholder,\n    darkMode: false,\n    i18n: {},\n};\n\nexport const setChonkyDefaults = (config: Partial<ChonkyConfig>) => {\n    for (const key of Object.keys(defaultConfig)) {\n        if (key in config) {\n            defaultConfig[key as keyof ChonkyConfig] = config[\n                key as keyof ChonkyConfig\n            ] as any;\n        }\n    }\n};\n","import filesize from 'filesize';\nimport { createContext, useContext, useMemo } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { FileAction } from '../types/action.types';\nimport { FileData } from '../types/file.types';\nimport { ChonkyFormatters } from '../types/i18n.types';\nimport { FileHelper } from './file-helper';\n\nexport enum I18nNamespace {\n    Toolbar = 'toolbar',\n    FileList = 'fileList',\n    FileEntry = 'fileEntry',\n    FileContextMenu = 'contextMenu',\n\n    FileActions = 'actions',\n    FileActionGroups = 'actionGroups',\n}\n\nexport const getI18nId = (namespace: I18nNamespace, stringId: string): string =>\n    `chonky.${namespace}.${stringId}`;\n\nexport const getActionI18nId = (actionId: string, stringId: string): string =>\n    `chonky.${I18nNamespace.FileActions}.${actionId}.${stringId}`;\n\nexport const useLocalizedFileActionGroup = (groupName: string) => {\n    const intl = useIntl();\n    return useMemo(() => {\n        return intl.formatMessage({\n            id: getI18nId(I18nNamespace.FileActionGroups, groupName),\n            defaultMessage: groupName,\n        });\n    }, [groupName, intl]);\n};\n\nexport const useLocalizedFileActionStrings = (action: Nullable<FileAction>) => {\n    const intl = useIntl();\n    return useMemo(() => {\n        if (!action) {\n            return {\n                buttonName: '',\n                buttonTooltip: undefined,\n            };\n        }\n\n        const buttonName = intl.formatMessage({\n            id: getActionI18nId(action.id, 'button.name'),\n            defaultMessage: action.button?.name,\n        });\n\n        let buttonTooltip: Undefinable<string> = undefined;\n        if (action.button?.tooltip) {\n            // We only translate the tooltip if the original action has a tooltip.\n            buttonTooltip = intl.formatMessage({\n                id: getActionI18nId(action.id, 'button.tooltip'),\n                defaultMessage: action.button?.tooltip,\n            });\n        }\n\n        return {\n            buttonName,\n            buttonTooltip,\n        };\n    }, [action, intl]);\n};\n\nexport const useLocalizedFileEntryStrings = (file: Nullable<FileData>) => {\n    const intl = useIntl();\n    const formatters = useContext(ChonkyFormattersContext);\n    return useMemo(() => {\n        return {\n            fileModDateString: formatters.formatFileModDate(intl, file),\n            fileSizeString: formatters.formatFileSize(intl, file),\n        };\n    }, [file, formatters, intl]);\n};\n\nexport const defaultFormatters: ChonkyFormatters = {\n    formatFileModDate: (\n        intl: IntlShape,\n        file: Nullable<FileData>\n    ): Nullable<string> => {\n        const safeModDate = FileHelper.getModDate(file);\n        if (safeModDate) {\n            return intl.formatDate(safeModDate, {\n                dateStyle: 'medium',\n                timeStyle: 'short',\n            } as Intl.DateTimeFormatOptions);\n        } else {\n            return null;\n        }\n    },\n    formatFileSize: (_intl: IntlShape, file: Nullable<FileData>): Nullable<string> => {\n        if (!file || typeof file.size !== 'number') return null;\n\n        const size = file.size;\n        const sizeData = filesize(size, { bits: false, output: 'object' }) as any;\n        if (sizeData.symbol === 'B') {\n            return `${Math.round(sizeData.value / 10) / 100.0} KB`;\n        } else if (sizeData.symbol === 'KB') {\n            return `${Math.round(sizeData.value)} ${sizeData.symbol}`;\n        }\n        return `${sizeData.value} ${sizeData.symbol}`;\n    },\n};\n\nexport const ChonkyFormattersContext = createContext(defaultFormatters);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2019\n * @license MIT\n */\n\nimport { createContext, ElementType, useMemo } from 'react';\n\nimport ExactTrie from 'exact-trie';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyIconPlaceholder } from '../components/internal/ChonkyIconPlaceholder';\nimport { FileData } from '../types/file.types';\nimport { ChonkyIconName, ChonkyIconProps, FileIconData } from '../types/icons.types';\n\nexport const ChonkyIconContext = createContext<ElementType<ChonkyIconProps>>(ChonkyIconPlaceholder);\n\nexport const VideoExtensions: string[] = [\n    '3g2',\n    '3gp',\n    '3gpp',\n    'asf',\n    'asx',\n    'avi',\n    'dvb',\n    'f4v',\n    'fli',\n    'flv',\n    'fvt',\n    'h261',\n    'h263',\n    'h264',\n    'jpgm',\n    'jpgv',\n    'jpm',\n    'm1v',\n    'm2v',\n    'm4u',\n    'm4v',\n    'mj2',\n    'mjp2',\n    'mk3d',\n    'mks',\n    'mkv',\n    'mng',\n    'mov',\n    'movie',\n    'mp4',\n    'mp4v',\n    'mpe',\n    'mpeg',\n    'mpg',\n    'mpg4',\n    'mxu',\n    'ogv',\n    'pyv',\n    'qt',\n    'smv',\n    'ts',\n    'uvh',\n    'uvm',\n    'uvp',\n    'uvs',\n    'uvu',\n    'uvv',\n    'uvvh',\n    'uvvm',\n    'uvvp',\n    'uvvs',\n    'uvvu',\n    'uvvv',\n    'viv',\n    'vob',\n    'webm',\n    'wm',\n    'wmv',\n    'wmx',\n    'wvx',\n];\nexport const ImageExtensions: string[] = [\n    '3ds',\n    'apng',\n    'azv',\n    'bmp',\n    'bmp',\n    'btif',\n    'cgm',\n    'cmx',\n    'djv',\n    'djvu',\n    'drle',\n    'dwg',\n    'dxf',\n    'emf',\n    'exr',\n    'fbs',\n    'fh',\n    'fh4',\n    'fh5',\n    'fh7',\n    'fhc',\n    'fits',\n    'fpx',\n    'fst',\n    'g3',\n    'gif',\n    'heic',\n    'heics',\n    'heif',\n    'heifs',\n    'ico',\n    'ico',\n    'ief',\n    'jls',\n    'jng',\n    'jp2',\n    'jpe',\n    'jpeg',\n    'jpf',\n    'jpg',\n    'jpg2',\n    'jpm',\n    'jpx',\n    'jxr',\n    'ktx',\n    'mdi',\n    'mmr',\n    'npx',\n    'pbm',\n    'pct',\n    'pcx',\n    'pcx',\n    'pgm',\n    'pic',\n    'png',\n    'pnm',\n    'ppm',\n    'psd',\n    'pti',\n    'ras',\n    'rgb',\n    'rlc',\n    'sgi',\n    'sid',\n    'sub',\n    'svg',\n    'svgz',\n    't38',\n    'tap',\n    'tfx',\n    'tga',\n    'tif',\n    'tiff',\n    'uvg',\n    'uvi',\n    'uvvg',\n    'uvvi',\n    'vtf',\n    'wbmp',\n    'wdp',\n    'webp',\n    'wmf',\n    'xbm',\n    'xif',\n    'xpm',\n    'xwd',\n];\nexport const AudioExtensions: string[] = [\n    '3gpp',\n    'aac',\n    'adp',\n    'aif',\n    'aifc',\n    'aiff',\n    'au',\n    'caf',\n    'dra',\n    'dts',\n    'dtshd',\n    'ecelp4800',\n    'ecelp7470',\n    'ecelp9600',\n    'eol',\n    'flac',\n    'kar',\n    'lvp',\n    'm2a',\n    'm3a',\n    'm3u',\n    'm4a',\n    'm4a',\n    'mid',\n    'midi',\n    'mka',\n    'mp2',\n    'mp2a',\n    'mp3',\n    'mp3',\n    'mp4a',\n    'mpga',\n    'oga',\n    'ogg',\n    'pya',\n    'ra',\n    'ra',\n    'ram',\n    'rip',\n    'rmi',\n    'rmp',\n    's3m',\n    'sil',\n    'snd',\n    'spx',\n    'uva',\n    'uvva',\n    'wav',\n    'wav',\n    'wav',\n    'wax',\n    'weba',\n    'wma',\n    'xm',\n];\nexport const ColorsLight: string[] = [\n    '#bbbbbb',\n    '#d65c5c',\n    '#d6665c',\n    '#d6705c',\n    '#d67a5c',\n    '#d6855c',\n    '#d68f5c',\n    '#d6995c',\n    '#d6a35c',\n    '#d6ad5c',\n    '#d6b85c',\n    '#d6c25c',\n    '#d6cc5c',\n    '#d6d65c',\n    '#ccd65c',\n    '#c2d65c',\n    '#b8d65c',\n    '#add65c',\n    '#a3d65c',\n    '#99d65c',\n    '#8fd65c',\n    '#85d65c',\n    '#7ad65c',\n    '#70d65c',\n    '#66d65c',\n    '#5cd65c',\n    '#5cd666',\n    '#5cd670',\n    '#5cd67a',\n    '#5cd685',\n    '#5cd68f',\n    '#5cd699',\n    '#5cd6a3',\n    '#5cd6ad',\n    '#5cd6b8',\n    '#5cd6c2',\n    '#5cd6cc',\n    '#5cd6d6',\n    '#5cccd6',\n    '#5cc2d6',\n    '#5cb8d6',\n    '#5cadd6',\n    '#5ca3d6',\n    '#5c99d6',\n    '#5c8fd6',\n    '#5c85d6',\n    '#5c7ad6',\n    '#5c70d6',\n    '#5c66d6',\n    '#5c5cd6',\n    '#665cd6',\n    '#705cd6',\n    '#7a5cd6',\n    '#855cd6',\n    '#8f5cd6',\n    '#995cd6',\n    '#a35cd6',\n    '#ad5cd6',\n    '#b85cd6',\n    '#c25cd6',\n    '#cc5cd6',\n    '#d65cd6',\n    '#d65ccc',\n    '#d65cc2',\n    '#d65cb8',\n    '#d65cad',\n    '#d65ca3',\n    '#d65c99',\n    '#d65c8f',\n    '#d65c85',\n    '#d65c7a',\n    '#d65c70',\n    '#d65c66',\n];\nexport const ColorsDark: string[] = [\n    '#777',\n    '#8f3d3d',\n    '#8f443d',\n    '#8f4b3d',\n    '#8f523d',\n    '#8f583d',\n    '#8f5f3d',\n    '#8f663d',\n    '#8f6d3d',\n    '#8f743d',\n    '#8f7a3d',\n    '#8f813d',\n    '#8f883d',\n    '#8f8f3d',\n    '#888f3d',\n    '#818f3d',\n    '#7a8f3d',\n    '#748f3d',\n    '#6d8f3d',\n    '#668f3d',\n    '#5f8f3d',\n    '#588f3d',\n    '#528f3d',\n    '#4b8f3d',\n    '#448f3d',\n    '#3d8f3d',\n    '#3d8f44',\n    '#3d8f4b',\n    '#3d8f52',\n    '#3d8f58',\n    '#3d8f5f',\n    '#3d8f66',\n    '#3d8f6d',\n    '#3d8f74',\n    '#3d8f7a',\n    '#3d8f81',\n    '#3d8f88',\n    '#3d8f8f',\n    '#3d888f',\n    '#3d818f',\n    '#3d7a8f',\n    '#3d748f',\n    '#3d6d8f',\n    '#3d668f',\n    '#3d5f8f',\n    '#3d588f',\n    '#3d528f',\n    '#3d4b8f',\n    '#3d448f',\n    '#3d3d8f',\n    '#443d8f',\n    '#4b3d8f',\n    '#523d8f',\n    '#583d8f',\n    '#5f3d8f',\n    '#663d8f',\n    '#6d3d8f',\n    '#743d8f',\n    '#7a3d8f',\n    '#813d8f',\n    '#883d8f',\n    '#8f3d8f',\n    '#8f3d88',\n    '#8f3d81',\n    '#8f3d7a',\n    '#8f3d74',\n    '#8f3d6d',\n    '#8f3d66',\n    '#8f3d5f',\n    '#8f3d58',\n    '#8f3d52',\n    '#8f3d4b',\n    '#8f3d44',\n];\n\nconst getIconTrie = () => {\n    let colourIndex = 0;\n    const step = 5;\n\n    const IconsToExtensions = [\n        // Generic file types\n        [ChonkyIconName.license, ['license']],\n        [ChonkyIconName.config, ['sfk', 'ini', 'yml', 'toml', 'iml']],\n        [ChonkyIconName.model, ['3ds', 'obj', 'ply', 'fbx']],\n        [ChonkyIconName.database, ['csv', 'json', 'sql', 'sqlite', 'sqlite3', 'npy', 'npz', 'rec', 'idx', 'hdf5']],\n        [ChonkyIconName.text, ['txt', 'md', 'mdx']],\n        [ChonkyIconName.archive, ['zip', 'rar', 'tar', 'tar.gz', '7z']],\n        [ChonkyIconName.image, ImageExtensions],\n        [ChonkyIconName.video, VideoExtensions],\n        [ChonkyIconName.code, ['html', 'php', 'css', 'sass', 'scss', 'less', 'cpp', 'h', 'hpp', 'c', 'xml']],\n        [ChonkyIconName.info, ['bib', 'readme', 'nfo']],\n        [ChonkyIconName.key, ['pem', 'pub']],\n        [ChonkyIconName.lock, ['lock', 'lock.json', 'shrinkwrap.json']],\n        [ChonkyIconName.music, AudioExtensions],\n        [ChonkyIconName.terminal, ['run', 'sh']],\n        [ChonkyIconName.trash, ['.Trashes']],\n        [ChonkyIconName.users, ['authors', 'contributors']],\n\n        // OS file types\n        [ChonkyIconName.linux, ['AppImage']],\n        [ChonkyIconName.ubuntu, ['deb']],\n        [ChonkyIconName.windows, ['exe']],\n\n        // Programming language file types\n        [ChonkyIconName.rust, ['rs', 'rlib']],\n        [ChonkyIconName.python, ['py', 'ipynb']],\n        [ChonkyIconName.nodejs, ['js', 'jsx', 'ts', 'tsx', 'd.ts']],\n        [ChonkyIconName.php, ['php']],\n\n        // Development tools file types\n        [ChonkyIconName.git, ['.gitignore']],\n\n        // Brands file types\n        [ChonkyIconName.adobe, ['psd']],\n\n        // Other program file types\n        [ChonkyIconName.pdf, ['pdf']],\n        [ChonkyIconName.excel, ['xls', 'xlsx']],\n        [ChonkyIconName.word, ['doc', 'docx', 'odt']],\n        [ChonkyIconName.flash, ['swf']],\n    ] as const;\n\n    const exactTrie = new ExactTrie({ ignoreCase: true });\n    for (const pair of IconsToExtensions) {\n        const [icon, extensions] = pair;\n\n        for (let i = 0; i < extensions.length; ++i) {\n            colourIndex += step;\n            const colorCode = (colourIndex % (ColorsLight.length - 1)) + 1;\n            const iconData: FileIconData = {\n                icon,\n                colorCode,\n            };\n            exactTrie.put(extensions[i], iconData, true);\n        }\n    }\n\n    return exactTrie;\n};\n\nconst iconTrie = getIconTrie();\n\nexport const useIconData = (file: Nullable<FileData>): FileIconData => {\n    return useMemo(() => {\n        if (!file) return { icon: ChonkyIconName.loading, colorCode: 0 };\n        if (file.isDir === true) return { icon: ChonkyIconName.folder, colorCode: 0 };\n\n        const match = iconTrie.getWithCheckpoints(file.name, '.', true);\n        return match ? match : { icon: ChonkyIconName.file, colorCode: 32 };\n    }, [file]);\n};\n","import { Theme as MuiTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport { DeepPartial } from 'tsdef';\n\nexport const lightTheme = {\n    colors: {\n        debugRed: '#fabdbd',\n        debugBlue: '#bdd8fa',\n        debugGreen: '#d2fabd',\n        debugPurple: '#d2bdfa',\n        debugYellow: '#fae9bd',\n\n        textActive: '#09f',\n    },\n\n    fontSizes: {\n        rootPrimary: 15,\n    },\n\n    margins: {\n        rootLayoutMargin: 8,\n    },\n\n    toolbar: {\n        size: 30,\n        lineHeight: '30px', // `px` suffix is required for `line-height` fields to work\n        fontSize: 15,\n        buttonRadius: 4,\n    },\n\n    dnd: {\n        canDropColor: 'green',\n        cannotDropColor: 'red',\n        canDropMask: 'rgba(180, 235, 180, 0.75)',\n        cannotDropMask: 'rgba(235, 180, 180, 0.75)',\n        fileListCanDropMaskOne: 'rgba(180, 235, 180, 0.1)',\n        fileListCanDropMaskTwo: 'rgba(180, 235, 180, 0.2)',\n        fileListCannotDropMaskOne: 'rgba(235, 180, 180, 0.1)',\n        fileListCannotDropMaskTwo: 'rgba(235, 180, 180, 0.2)',\n    },\n\n    dragLayer: {\n        border: 'solid 2px #09f',\n        padding: '7px 10px',\n        borderRadius: 2,\n    },\n\n    fileList: {\n        desktopGridGutter: 8,\n        mobileGridGutter: 5,\n    },\n\n    gridFileEntry: {\n        childrenCountSize: '1.6em',\n        iconColorFocused: '#000',\n        iconSize: '2.4em',\n        iconColor: '#fff',\n        borderRadius: 5,\n        fontSize: 14,\n\n        fileColorTint: 'rgba(255, 255, 255, 0.4)',\n        folderBackColorTint: 'rgba(255, 255, 255, 0.1)',\n        folderFrontColorTint: 'rgba(255, 255, 255, 0.4)',\n    },\n\n    listFileEntry: {\n        propertyFontSize: 14,\n        iconFontSize: '1.1em',\n        iconBorderRadius: 5,\n        fontSize: 14,\n    },\n};\n\nexport type ChonkyTheme = typeof lightTheme;\n\nexport const darkThemeOverride: DeepPartial<ChonkyTheme> = {\n    gridFileEntry: {\n        fileColorTint: 'rgba(50, 50, 50, 0.4)',\n        folderBackColorTint: 'rgba(50, 50, 50, 0.4)',\n        folderFrontColorTint: 'rgba(50, 50, 50, 0.15)',\n    },\n};\n\nexport const mobileThemeOverride: DeepPartial<ChonkyTheme> = {\n    fontSizes: {\n        rootPrimary: 13,\n    },\n    margins: {\n        rootLayoutMargin: 4,\n    },\n    toolbar: {\n        size: 28,\n        lineHeight: '28px',\n        fontSize: 13,\n    },\n    gridFileEntry: {\n        fontSize: 13,\n    },\n    listFileEntry: {\n        propertyFontSize: 12,\n        iconFontSize: '1em',\n        fontSize: 13,\n    },\n};\n\nexport const useIsMobileBreakpoint = () => {\n    return useMediaQuery('(max-width:480px)');\n};\n\nexport const getStripeGradient = (colorOne: string, colorTwo: string) =>\n    'repeating-linear-gradient(' +\n    '45deg,' +\n    `${colorOne},` +\n    `${colorOne} 10px,` +\n    `${colorTwo} 0,` +\n    `${colorTwo} 20px` +\n    ')';\n\nexport const makeLocalChonkyStyles = <C extends string = string>(\n    styles: (theme: ChonkyTheme & MuiTheme) => any\n    // @ts-ignore\n): any => createUseStyles<ChonkyTheme, C>(styles);\n\nexport const makeGlobalChonkyStyles = <C extends string = string>(\n    makeStyles: (theme: ChonkyTheme & MuiTheme) => any\n) => {\n    const selectorMapping = {};\n    const makeGlobalStyles = (theme: ChonkyTheme) => {\n        const localStyles = makeStyles(theme as any);\n        const globalStyles = {};\n        const localSelectors = Object.keys(localStyles);\n        localSelectors.map(localSelector => {\n            const globalSelector = `chonky-${localSelector}`;\n            const jssSelector = `@global .${globalSelector}`;\n            // @ts-ignore\n            globalStyles[jssSelector] = localStyles[localSelector];\n            // @ts-ignore\n            selectorMapping[localSelector] = globalSelector;\n        });\n        return globalStyles;\n    };\n\n    // @ts-ignore\n    const useStyles = createUseStyles<ChonkyTheme, C>(makeGlobalStyles as any);\n    return (...args: any[]): any => {\n        const styles = useStyles(...args);\n        const classes = {};\n        Object.keys(selectorMapping).map(localSelector => {\n            // @ts-ignore\n            classes[localSelector] = selectorMapping[localSelector];\n        });\n        return { ...classes, ...styles };\n    };\n};\n\nexport const important = <T>(value: T) => [value, '!important'];\n\nexport const c = classnames;\n","import React, { useImperativeHandle } from 'react';\nimport { useDispatch, useStore } from 'react-redux';\n\nimport { reduxActions } from '../redux/reducers';\nimport { selectSelectionMap } from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { FileAction } from '../types/action.types';\nimport { FileBrowserHandle } from '../types/file-browser.types';\nimport { RootState } from '../types/redux.types';\n\nexport const useFileBrowserHandle = (ref: React.Ref<FileBrowserHandle>) => {\n    const store = useStore<RootState>();\n    const dispatch = useDispatch();\n\n    useImperativeHandle(\n        ref,\n        () => ({\n            getFileSelection(): Set<string> {\n                const selectionMap = selectSelectionMap(store.getState());\n                const selectionSet = new Set(Object.keys(selectionMap));\n                return selectionSet;\n            },\n            setFileSelection(selection, reset = true): void {\n                const fileIds = Array.from(selection);\n                dispatch(reduxActions.selectFiles({ fileIds, reset }));\n            },\n            requestFileAction<Action extends FileAction>(\n                action: Action,\n                payload: Action['__payloadType']\n            ): Promise<void> {\n                return Promise.resolve(\n                    dispatch(thunkRequestFileAction(action, payload))\n                ).then();\n            },\n        }),\n        [store, dispatch]\n    );\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { initialRootState } from '../../redux/state';\nimport { useDTE, usePropReduxUpdate } from '../../redux/store';\nimport {\n    thunkActivateSortAction, thunkUpdateDefaultFileViewActionId, thunkUpdateRawFileActions\n} from '../../redux/thunks/file-actions.thunks';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { useFileBrowserHandle } from '../../util/file-browser-handle';\nimport { getValueOrFallback } from '../../util/helpers';\n\nexport const ChonkyBusinessLogicInner = React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        // ==== Update Redux state\n        usePropReduxUpdate(reduxActions.setRawFiles, props.files ?? initialRootState.rawFiles);\n        usePropReduxUpdate(reduxActions.setRawFolderChain, props.folderChain);\n        useDTE(\n            thunkUpdateRawFileActions,\n            getValueOrFallback(props.fileActions, defaultConfig.fileActions),\n            getValueOrFallback(props.disableDefaultFileActions, defaultConfig.disableDefaultFileActions)\n        );\n        useDTE(\n            reduxActions.setExternalFileActionHandler,\n            getValueOrFallback(props.onFileAction, defaultConfig.onFileAction) as any\n        );\n        useDTE(\n            reduxActions.setSelectionDisabled,\n            getValueOrFallback(props.disableSelection, defaultConfig.disableSelection, 'boolean')\n        );\n        useDTE(\n            thunkActivateSortAction,\n            getValueOrFallback(props.defaultSortActionId, defaultConfig.defaultSortActionId)\n        );\n        useDTE(\n            thunkUpdateDefaultFileViewActionId,\n            getValueOrFallback(props.defaultFileViewActionId, defaultConfig.defaultFileViewActionId, 'string')\n        );\n\n        useDTE(\n            reduxActions.setThumbnailGenerator,\n            getValueOrFallback(props.thumbnailGenerator, defaultConfig.thumbnailGenerator)\n        );\n        useDTE(\n            reduxActions.setDoubleClickDelay,\n            getValueOrFallback(props.doubleClickDelay, defaultConfig.doubleClickDelay, 'number')\n        );\n        useDTE(\n            reduxActions.setDisableDragAndDrop,\n            getValueOrFallback(props.disableDragAndDrop, defaultConfig.disableDragAndDrop, 'boolean')\n        );\n        useDTE(\n            reduxActions.setClearSelectionOnOutsideClick,\n            getValueOrFallback(\n                props.clearSelectionOnOutsideClick,\n                defaultConfig.clearSelectionOnOutsideClick,\n                'boolean'\n            )\n        );\n\n        // ==== Setup the imperative handle for external use\n        useFileBrowserHandle(ref);\n\n        return null;\n    })\n);\nChonkyBusinessLogicInner.displayName = 'ChonkyBusinessLogicInner';\n\nexport const ChonkyBusinessLogic = React.memo(ChonkyBusinessLogicInner);\nChonkyBusinessLogic.displayName = 'ChonkyBusinessLogic';\n","import { useCallback, useContext } from 'react';\nimport { DndContext, useDrag, useDrop } from 'react-dnd';\n\nexport const useDndContextAvailable = () => {\n    const dndContext = useContext(DndContext);\n    const { dragDropManager } = dndContext;\n    return !!dragDropManager;\n};\n\nexport const useDragIfAvailable: typeof useDrag = (...args) => {\n    // This is an ugly hack to make `useDrag` not throw if a `DndContext` is not available.\n    // See: https://github.com/react-dnd/react-dnd/issues/2212\n    const dndContextAvailable = useDndContextAvailable();\n    const mockHook = useCallback(() => [{} as any, () => null, () => null], []);\n    // @ts-ignore\n    const useHook: typeof useDrag = dndContextAvailable ? useDrag : mockHook;\n    return useHook(...args);\n};\n\nexport const useDropIfAvailable: typeof useDrop = (...args) => {\n    const dndContextAvailable = useDndContextAvailable();\n    const mockHook = useCallback(() => [{} as any, () => null], []);\n    // @ts-ignore\n    const useHook: typeof useDrop = dndContextAvailable ? useDrop : mockHook;\n    return useHook(...args);\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuMounted } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { findElementAmongAncestors } from '../../util/helpers';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\n\nexport const findClosestChonkyFileId = (\n    element: HTMLElement | any\n): Nullable<string> => {\n    const fileEntryWrapperDiv = findElementAmongAncestors(\n        element,\n        (element: any) =>\n            element.tagName &&\n            element.tagName.toLowerCase() === 'div' &&\n            element.dataset &&\n            element.dataset.chonkyFileId\n    );\n    return fileEntryWrapperDiv ? fileEntryWrapperDiv.dataset.chonkyFileId! : null;\n};\n\nexport const useContextMenuTrigger = () => {\n    const dispatch = useDispatch();\n    const contextMenuMountedRef = useInstanceVariable(\n        useSelector(selectContextMenuMounted)\n    );\n    return useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            // Use default browser context menu when Chonky context menu component\n            // is not mounted.\n            if (!contextMenuMountedRef.current) return;\n            // Users can use Alt+Right Click to bring up browser's default\n            // context menu instead of Chonky's context menu.\n            if (event.altKey) return;\n\n            event.preventDefault();\n\n            const triggerFileId = findClosestChonkyFileId(event.target);\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.OpenFileContextMenu, {\n                    clientX: event.clientX,\n                    clientY: event.clientY,\n                    triggerFileId,\n                })\n            );\n        },\n        [contextMenuMountedRef, dispatch]\n    );\n};\n\nexport const useContextMenuDismisser = () => {\n    const dispatch = useDispatch();\n    return useCallback(() => dispatch(reduxActions.hideContextMenu()), [dispatch]);\n};\n","import { DragObjectWithType } from 'react-dnd';\nimport { Nilable } from 'tsdef';\n\nimport { StartDragNDropPayload } from './action-payloads.types';\nimport { FileData } from './file.types';\n\nexport interface ChonkyDndDropResult {\n    dropTarget: Nilable<FileData> | any;\n    dropEffect: 'move' | 'copy';\n}\n\nexport type ChonkyDndFileEntryItem = DragObjectWithType & {\n    payload: StartDragNDropPayload;\n};\nexport const ChonkyDndFileEntryType = 'dnd-chonky-file-entry';\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useDragLayer } from 'react-dnd';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyDndFileEntryItem, ChonkyDndFileEntryType } from '../../types/dnd.types';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileListDragLayerProps {}\n\nconst layerStyles: React.CSSProperties = {\n    position: 'fixed',\n    pointerEvents: 'none',\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n};\nconst getItemStyles = (\n    initialCursorOffset: Nullable<{ x: number; y: number }>,\n    initialFileOffset: Nullable<{ x: number; y: number }>,\n    currentFileOffset: Nullable<{ x: number; y: number }>\n) => {\n    if (!initialCursorOffset || !initialFileOffset || !currentFileOffset) {\n        return {\n            display: 'none',\n        };\n    }\n    const x = initialCursorOffset.x + (currentFileOffset.x - initialFileOffset.x);\n    const y = initialCursorOffset.y + (currentFileOffset.y - initialFileOffset.y);\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        transform,\n        WebkitTransform: transform,\n    };\n};\n\nexport const DnDFileListDragLayer: React.FC<DnDFileListDragLayerProps> = () => {\n    const classes = useStyles();\n\n    const {\n        itemType,\n        item,\n        initialCursorOffset,\n        initialFileOffset,\n        currentFileOffset,\n        isDragging,\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem() as ChonkyDndFileEntryItem,\n        itemType: monitor.getItemType(),\n        initialCursorOffset: monitor.getInitialClientOffset(),\n        initialFileOffset: monitor.getInitialSourceClientOffset(),\n        currentFileOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging(),\n    }));\n    if (!isDragging || itemType !== ChonkyDndFileEntryType || !item.payload) {\n        return null;\n    }\n\n    const selectionSize = item.payload.selectedFiles.length;\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialCursorOffset,\n                    initialFileOffset,\n                    currentFileOffset\n                )}\n            >\n                <div className={classes.fileDragPreview}>\n                    <b>{item.payload.draggedFile.name}</b>\n                    {selectionSize > 1 && (\n                        <>\n                            {' and '}\n                            <strong>\n                                {selectionSize - 1} other file\n                                {selectionSize - 1 !== 1 ? 's' : ''}\n                            </strong>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    fileDragPreview: {\n        boxShadow: `2px 2px 5px ${theme.palette.divider}`,\n        backgroundColor: theme.palette.background.default,\n        borderRadius: theme.dragLayer.borderRadius,\n        fontSize: theme.fontSizes.rootPrimary,\n        color: theme.palette.text.primary,\n        padding: theme.dragLayer.padding,\n        border: theme.dragLayer.border,\n        display: 'inline-block',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport hotkeys from 'hotkeys-js';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\n\nexport interface HotkeyListenerProps {\n    fileActionId: string;\n}\n\nexport const HotkeyListener: React.FC<HotkeyListenerProps> = React.memo(props => {\n    const { fileActionId } = props;\n\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n\n    useEffect(() => {\n        if (!fileAction || !fileAction.hotkeys || fileAction.hotkeys.length === 0) {\n            return;\n        }\n\n        const hotkeysStr = fileAction.hotkeys.join(',');\n        const hotkeyCallback = (event: KeyboardEvent) => {\n            event.preventDefault();\n            dispatch(thunkRequestFileAction(fileAction, undefined));\n        };\n        hotkeys(hotkeysStr, hotkeyCallback);\n        return () => hotkeys.unbind(hotkeysStr, hotkeyCallback);\n    }, [dispatch, fileAction]);\n\n    return null;\n});\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@material-ui/core/Box';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { reduxActions } from '../../redux/reducers';\nimport {\n    selectClearSelectionOnOutsideClick,\n    selectFileActionIds,\n    selectIsDnDDisabled,\n} from '../../redux/selectors';\nimport { useDndContextAvailable } from '../../util/dnd-fallback';\nimport { elementIsInsideButton } from '../../util/helpers';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuTrigger } from '../external/FileContextMenu-hooks';\nimport { DnDFileListDragLayer } from '../file-list/DnDFileListDragLayer';\nimport { HotkeyListener } from './HotkeyListener';\n\nexport interface ChonkyPresentationLayerProps {}\n\nexport const ChonkyPresentationLayer: React.FC<ChonkyPresentationLayerProps> = ({\n    children,\n}) => {\n    const dispatch = useDispatch();\n    const fileActionIds = useSelector(selectFileActionIds);\n    const dndDisabled = useSelector(selectIsDnDDisabled);\n    const clearSelectionOnOutsideClick = useSelector(\n        selectClearSelectionOnOutsideClick\n    );\n\n    // Deal with clicks outside of Chonky\n    const handleClickAway = useCallback(\n        (event: React.MouseEvent<Document>) => {\n            if (!clearSelectionOnOutsideClick || elementIsInsideButton(event.target)) {\n                // We only clear out the selection on outside click if the click target\n                // was not a button. We don't want to clear out the selection when a\n                // button is clicked because Chonky users might want to trigger some\n                // selection-related action on that button click.\n                return;\n            }\n            dispatch(reduxActions.clearSelection());\n        },\n        [dispatch, clearSelectionOnOutsideClick]\n    );\n\n    // Generate necessary components\n    const hotkeyListenerComponents = useMemo(\n        () =>\n            fileActionIds.map(actionId => (\n                <HotkeyListener\n                    key={`file-action-listener-${actionId}`}\n                    fileActionId={actionId}\n                />\n            )),\n        [fileActionIds]\n    );\n\n    const dndContextAvailable = useDndContextAvailable();\n    const showContextMenu = useContextMenuTrigger();\n\n    const classes = useStyles();\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <Box className={classes.chonkyRoot} onContextMenu={showContextMenu}>\n                {!dndDisabled && dndContextAvailable && <DnDFileListDragLayer />}\n                {hotkeyListenerComponents}\n                {children ? children : null}\n            </Box>\n        </ClickAwayListener>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    chonkyRoot: {\n        backgroundColor: theme.palette.background.paper,\n        border: `solid 1px ${theme.palette.divider}`,\n        padding: theme.margins.rootLayoutMargin,\n        fontSize: theme.fontSizes.rootPrimary,\n        color: theme.palette.text.primary,\n        touchAction: 'manipulation', // Disabling zoom on double tap\n        fontFamily: 'sans-serif',\n        flexDirection: 'column',\n        boxSizing: 'border-box',\n        textAlign: 'left',\n        borderRadius: 4,\n        display: 'flex',\n        height: '100%',\n\n        // Disabling select\n        webkitTouchCallout: 'none',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n}));\n","import {\n    createMuiTheme,\n    ThemeProvider as MuiThemeProvider,\n} from '@material-ui/core/styles';\nimport merge from 'deepmerge';\nimport React, { ReactNode, useMemo } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { IntlProvider } from 'react-intl';\nimport { ThemeProvider } from 'react-jss';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport shortid from 'shortid';\n\nimport { useChonkyStore } from '../../redux/store';\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { defaultConfig } from '../../util/default-config';\nimport { getValueOrFallback } from '../../util/helpers';\nimport { useStaticValue } from '../../util/hooks-helpers';\nimport { ChonkyFormattersContext, defaultFormatters } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport {\n    darkThemeOverride,\n    lightTheme,\n    mobileThemeOverride,\n    useIsMobileBreakpoint,\n} from '../../util/styles';\nimport { ChonkyBusinessLogic } from '../internal/ChonkyBusinessLogic';\nimport { ChonkyIconPlaceholder } from '../internal/ChonkyIconPlaceholder';\nimport { ChonkyPresentationLayer } from '../internal/ChonkyPresentationLayer';\n\n// if (process.env.NODE_ENV === 'development') {\n//     const whyDidYouRender = require('@welldone-software/why-did-you-render');\n//     whyDidYouRender(React, {\n//         trackAllPureComponents: true,\n//     });\n// }\n\nexport const FileBrowser = React.forwardRef<\n    FileBrowserHandle,\n    FileBrowserProps & { children?: ReactNode }\n>((props, ref) => {\n    const { instanceId, iconComponent, children } = props;\n    const disableDragAndDrop = getValueOrFallback(\n        props.disableDragAndDrop,\n        defaultConfig.disableDragAndDrop,\n        'boolean'\n    );\n    const disableDragAndDropProvider = getValueOrFallback(\n        props.disableDragAndDropProvider,\n        defaultConfig.disableDragAndDropProvider,\n        'boolean'\n    );\n    const darkMode = getValueOrFallback(\n        props.darkMode,\n        defaultConfig.darkMode,\n        'boolean'\n    );\n    const i18n = getValueOrFallback(props.i18n, defaultConfig.i18n);\n    const formatters = useMemo(() => ({ ...defaultFormatters, ...i18n?.formatters }), [\n        i18n,\n    ]);\n\n    const chonkyInstanceId = useStaticValue(() => instanceId ?? shortid.generate());\n    const store = useChonkyStore(chonkyInstanceId);\n\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n    const theme = useMemo(() => {\n        const muiTheme = createMuiTheme({\n            palette: { type: darkMode ? 'dark' : 'light' },\n        });\n        const combinedTheme = merge(\n            muiTheme,\n            merge(lightTheme, darkMode ? darkThemeOverride : {})\n        );\n        return isMobileBreakpoint\n            ? merge(combinedTheme, mobileThemeOverride)\n            : combinedTheme;\n    }, [darkMode, isMobileBreakpoint]);\n\n    const chonkyComps = (\n        <>\n            <ChonkyBusinessLogic ref={ref} {...props} />\n            <ChonkyPresentationLayer>{children}</ChonkyPresentationLayer>\n        </>\n    );\n\n    return (\n        <IntlProvider locale=\"en\" defaultLocale=\"en\" {...i18n}>\n            <ChonkyFormattersContext.Provider value={formatters}>\n                <ReduxProvider store={store}>\n                    <ThemeProvider theme={theme}>\n                        <MuiThemeProvider theme={theme}>\n                            <ChonkyIconContext.Provider\n                                value={\n                                    iconComponent ??\n                                    defaultConfig.iconComponent ??\n                                    ChonkyIconPlaceholder\n                                }\n                            >\n                                {disableDragAndDrop || disableDragAndDropProvider ? (\n                                    chonkyComps\n                                ) : (\n                                    <DndProvider backend={HTML5Backend}>\n                                        {chonkyComps}\n                                    </DndProvider>\n                                )}\n                            </ChonkyIconContext.Provider>\n                        </MuiThemeProvider>\n                    </ThemeProvider>\n                </ReduxProvider>\n            </ChonkyFormattersContext.Provider>\n        </IntlProvider>\n    );\n});\nFileBrowser.displayName = 'FileBrowser';\n","import { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectFolderChain } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { FileData } from '../../types/file.types';\nimport { FileHelper } from '../../util/file-helper';\n\nexport interface FolderChainItem {\n    file: Nullable<FileData>;\n    disabled: boolean;\n    onClick?: () => void;\n}\n\nexport const useFolderChainItems = (): FolderChainItem[] => {\n    const folderChain = useSelector(selectFolderChain);\n    const dispatch = useDispatch();\n\n    const folderChainItems = useMemo(() => {\n        const items: FolderChainItem[] = [];\n        if (!folderChain) return items;\n\n        for (let i = 0; i < folderChain.length; ++i) {\n            const file = folderChain[i];\n            items.push({\n                file,\n                disabled: !file,\n                onClick:\n                    !FileHelper.isOpenable(file) || i === folderChain.length - 1\n                        ? undefined\n                        : () =>\n                              dispatch(\n                                  thunkRequestFileAction(ChonkyActions.OpenFiles, {\n                                      targetFile: file,\n                                      files: [file],\n                                  })\n                              ),\n            });\n        }\n        return items;\n    }, [dispatch, folderChain]);\n    return folderChainItems;\n};\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { DragSourceMonitor, DropTargetMonitor } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { ExcludeKeys, Nullable } from 'tsdef';\n\nimport { EssentialActions } from '../action-definitions/essential';\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n    selectCurrentFolder,\n    selectFolderChain,\n    selectInstanceId,\n    selectSelectedFiles,\n} from '../redux/selectors';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { StartDragNDropPayload } from '../types/action-payloads.types';\nimport {\n    ChonkyDndDropResult,\n    ChonkyDndFileEntryItem,\n    ChonkyDndFileEntryType,\n} from '../types/dnd.types';\nimport { DndEntryState } from '../types/file-list.types';\nimport { FileData } from '../types/file.types';\nimport { useDragIfAvailable, useDropIfAvailable } from './dnd-fallback';\nimport { FileHelper } from './file-helper';\nimport { useInstanceVariable } from './hooks-helpers';\n\nexport const useFileDrag = (file: Nullable<FileData>) => {\n    // Prepare the dnd payload\n    const store = useStore();\n    const fileRef = useInstanceVariable(file);\n    const getDndStartPayload = useCallback<() => StartDragNDropPayload>(() => {\n        const reduxState = store.getState();\n        return {\n            sourceInstanceId: selectInstanceId(reduxState),\n            source: selectCurrentFolder(reduxState),\n            // We force non-null type below because by convention, if drag & drop for\n            // this file was possible, it must have been non-null.\n            draggedFile: fileRef.current!,\n            selectedFiles: selectSelectedFiles(reduxState),\n        };\n    }, [store, fileRef]);\n\n    // For drag source\n    const dispatch = useDispatch();\n    const canDrag = useCallback(() => FileHelper.isDraggable(fileRef.current), [\n        fileRef,\n    ]);\n    const onDragStart = useCallback((): ChonkyDndFileEntryItem => {\n        const item: ChonkyDndFileEntryItem = {\n            type: ChonkyDndFileEntryType,\n            payload: getDndStartPayload(),\n        };\n        dispatch(thunkRequestFileAction(ChonkyActions.StartDragNDrop, item.payload));\n        return item;\n    }, [dispatch, getDndStartPayload]);\n    const onDragEnd = useCallback(\n        (item: ChonkyDndFileEntryItem, monitor: DragSourceMonitor) => {\n            const dropResult = monitor.getDropResult() as ChonkyDndDropResult;\n            if (\n                !FileHelper.isDraggable(item.payload.draggedFile) ||\n                !dropResult ||\n                !dropResult.dropTarget\n            ) {\n                return;\n            }\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.EndDragNDrop, {\n                    ...item.payload,\n                    destination: dropResult.dropTarget,\n                    copy: dropResult.dropEffect === 'copy',\n                })\n            );\n        },\n        [dispatch]\n    );\n\n    // Create refs for react-dnd hooks\n    const item = useMemo<ChonkyDndFileEntryItem>(\n        () => ({\n            type: ChonkyDndFileEntryType,\n            // Payload is actually added in `onDragStart`\n            payload: {} as StartDragNDropPayload,\n        }),\n        []\n    );\n    const collect = useCallback(monitor => ({ isDragging: monitor.isDragging() }), []);\n    const [{ isDragging: dndIsDragging }, drag, preview] = useDragIfAvailable({\n        item,\n        canDrag,\n        begin: onDragStart,\n        // @ts-ignore\n        end: onDragEnd,\n        collect,\n    });\n\n    useEffect(() => {\n        // Set drag preview to an empty image because `DnDFileListDragLayer` will\n        // provide its own preview.\n        preview(getEmptyImage(), { captureDraggingState: true });\n    }, [preview]);\n\n    return { dndIsDragging, drag };\n};\n\ninterface UseFileDropParams {\n    file: Nullable<FileData>;\n    forceDisableDrop?: boolean;\n    includeChildrenDrops?: boolean;\n}\n\nexport const useFileDrop = ({\n    file,\n    forceDisableDrop,\n    includeChildrenDrops,\n}: UseFileDropParams) => {\n    const folderChainRef = useInstanceVariable(useSelector(selectFolderChain));\n    const onDrop = useCallback(\n        (_item: ChonkyDndFileEntryItem, monitor) => {\n            if (!monitor.canDrop()) return;\n            const customDropResult: ExcludeKeys<ChonkyDndDropResult, 'dropEffect'> = {\n                dropTarget: file,\n            };\n            return customDropResult;\n        },\n        [file]\n    );\n    const canDrop = useCallback(\n        (item: ChonkyDndFileEntryItem, monitor: DropTargetMonitor) => {\n            if (\n                forceDisableDrop ||\n                !FileHelper.isDroppable(file) ||\n                (!monitor.isOver({ shallow: true }) && !includeChildrenDrops)\n            ) {\n                return false;\n            }\n            const { source, draggedFile, selectedFiles } = item.payload;\n\n            // We prevent folders from being dropped into themselves. We also prevent\n            // any folder from current folder chain being moved - we can't move the\n            // folder that we are currently in.\n            const prohibitedFileIds = new Set<string>();\n            prohibitedFileIds.add(file.id);\n            folderChainRef.current.map(folder => {\n                if (folder) prohibitedFileIds.add(folder.id);\n            });\n            const movedFiles: FileData[] = [draggedFile, ...selectedFiles];\n            for (const currFile of movedFiles) {\n                if (prohibitedFileIds.has(currFile.id)) return false;\n            }\n\n            // Finally, prohibit files from being moved into their parent folder\n            // (which is a no-op).\n            return file.id !== source?.id;\n        },\n        [forceDisableDrop, file, includeChildrenDrops, folderChainRef]\n    );\n    const collect = useCallback(\n        monitor => ({\n            isOver: monitor.isOver(),\n            isOverCurrent: monitor.isOver({ shallow: true }),\n            canDrop: monitor.canDrop(),\n        }),\n        []\n    );\n    const [\n        { isOver: dndIsOver, isOverCurrent: dndIsOverCurrent, canDrop: dndCanDrop },\n        drop,\n    ] = useDropIfAvailable({\n        accept: ChonkyDndFileEntryType,\n        drop: onDrop,\n        canDrop,\n        collect,\n    });\n    return { dndIsOver, dndIsOverCurrent, dndCanDrop, drop };\n};\n\nexport const useFileEntryDnD = (file: Nullable<FileData>) => {\n    const { dndIsDragging, drag } = useFileDrag(file);\n    const { dndIsOver, dndCanDrop, drop } = useFileDrop({ file });\n    const dndState = useMemo<DndEntryState>(\n        () => ({\n            dndIsDragging,\n            dndIsOver,\n            dndCanDrop,\n        }),\n        [dndCanDrop, dndIsDragging, dndIsOver]\n    );\n    return {\n        drop,\n        drag,\n        dndState,\n    };\n};\n\nexport const useDndHoverOpen = (file: Nullable<FileData>, dndState: DndEntryState) => {\n    const dispatch = useDispatch();\n    const currentFolderRef = useInstanceVariable(useSelector(selectCurrentFolder));\n    useEffect(() => {\n        let timeout: Nullable<any> = null;\n        if (\n            dndState.dndIsOver &&\n            FileHelper.isDndOpenable(file) &&\n            file.id !== currentFolderRef.current?.id\n        ) {\n            timeout = setTimeout(\n                () =>\n                    dispatch(\n                        thunkRequestFileAction(EssentialActions.OpenFiles, {\n                            targetFile: file,\n                            files: [file],\n                        })\n                    ),\n                // TODO: Make this timeout configurable\n                1500\n            );\n        }\n        return () => {\n            if (timeout) clearTimeout(timeout);\n        };\n    }, [dispatch, file, dndState.dndIsOver, currentFolderRef]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface TextPlaceholderProps {\n    minLength: number;\n    maxLength: number;\n}\n\nconst getRandomInt = (min: number, max: number) => {\n    return min + Math.floor(Math.random() * Math.floor(max - min));\n};\nexport const TextPlaceholder: React.FC<TextPlaceholderProps> = React.memo(props => {\n    const { minLength, maxLength } = props;\n\n    const placeholderLength = getRandomInt(minLength, maxLength);\n    const whitespace = '&nbsp;'.repeat(placeholderLength);\n\n    const classes = useStyles();\n    return (\n        <span\n            className={classes.textPlaceholder}\n            dangerouslySetInnerHTML={{ __html: whitespace }}\n        />\n    );\n});\n\nconst useStyles = makeLocalChonkyStyles(() => ({\n    '@keyframes loading-placeholder': {\n        '0%': { opacity: 0.2 },\n        '50%': { opacity: 0.4 },\n        '100%': { opacity: 0.2 },\n    },\n    textPlaceholder: {\n        animationName: '$loading-placeholder',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n        animationDuration: '1.5s',\n        backgroundColor: '#ccc',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        borderRadius: 4,\n        maxWidth: '40%',\n        minWidth: 20,\n    },\n}));\n","import React, {\n    HTMLProps, useCallback, useContext, useEffect, useMemo, useRef, useState\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable, Undefinable } from 'tsdef';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectThumbnailGenerator } from '../../redux/selectors';\nimport { thunkRequestFileAction } from '../../redux/thunks/dispatchers.thunks';\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { ChonkyIconContext, ColorsDark, ColorsLight, useIconData } from '../../util/icon-helper';\nimport { Logger } from '../../util/logger';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { KeyboardClickEvent, MouseClickEvent } from '../internal/ClickableWrapper';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const useFileEntryHtmlProps = (file: Nullable<FileData>): HTMLProps<HTMLDivElement> => {\n    return useMemo(() => {\n        const dataProps: { [prop: string]: Undefinable<string> } = {\n            'data-test-id': 'file-entry',\n            'data-chonky-file-id': file ? file.id : undefined,\n        };\n\n        return {\n            role: 'listitem',\n            ...dataProps,\n        };\n    }, [file]);\n};\n\nexport const useFileEntryState = (file: Nullable<FileData>, selected: boolean, focused: boolean) => {\n    const iconData = useIconData(file);\n    const { thumbnailUrl, thumbnailLoading } = useThumbnailUrl(file);\n\n    return useMemo<FileEntryState>(() => {\n        const fileColor = thumbnailUrl ? ColorsDark[iconData.colorCode] : ColorsLight[iconData.colorCode];\n        const iconSpin = thumbnailLoading || !file;\n        const icon = thumbnailLoading ? ChonkyIconName.loading : iconData.icon;\n\n        return {\n            childrenCount: FileHelper.getChildrenCount(file),\n            icon: file && file.icon !== undefined ? file.icon : icon,\n            iconSpin: iconSpin,\n            thumbnailUrl: thumbnailUrl,\n            color: file && file.color !== undefined ? file.color : fileColor,\n            selected: selected,\n            focused: !!focused,\n        };\n    }, [file, focused, iconData, selected, thumbnailLoading, thumbnailUrl]);\n};\n\nexport const useDndIcon = (dndState: DndEntryState) => {\n    let dndIconName: Nullable<ChonkyIconName> = null;\n    if (dndState.dndIsOver) {\n        const showDropIcon = dndState.dndCanDrop;\n        dndIconName = showDropIcon ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop;\n    } else if (dndState.dndIsDragging) {\n        dndIconName = ChonkyIconName.dndDragging;\n    }\n\n    return dndIconName;\n};\n\nexport const useModifierIconComponents = (file: Nullable<FileData>) => {\n    const modifierIcons: ChonkyIconName[] = useMemo(() => {\n        const modifierIcons: ChonkyIconName[] = [];\n        if (FileHelper.isHidden(file)) modifierIcons.push(ChonkyIconName.hidden);\n        if (FileHelper.isSymlink(file)) modifierIcons.push(ChonkyIconName.symlink);\n        if (FileHelper.isEncrypted(file)) modifierIcons.push(ChonkyIconName.lock);\n        return modifierIcons;\n    }, [file]);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const modifierIconComponents = useMemo(\n        () => modifierIcons.map((icon, index) => <ChonkyIcon key={`file-modifier-${index}`} icon={icon} />),\n        // For some reason ESLint marks `ChonkyIcon` as an unnecessary dependency,\n        // but we expect it can change at runtime so we disable the check.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [ChonkyIcon, modifierIcons]\n    );\n    return modifierIconComponents;\n};\n\nconst _extname = (fileName: string) => {\n    const parts = fileName.split('.');\n    if (parts.length) {\n        return `.${parts[parts.length - 1]}`;\n    }\n    return '';\n};\n\nexport const useFileNameComponent = (file: Nullable<FileData>) => {\n    return useMemo(() => {\n        if (!file) return <TextPlaceholder minLength={15} maxLength={20} />;\n\n        let name;\n        let extension = null;\n\n        const isDir = FileHelper.isDirectory(file);\n        if (isDir) {\n            name = file.name;\n        } else {\n            extension = file.ext ?? _extname(file.name);\n            name = file.name.substr(0, file.name.length - extension.length);\n        }\n\n        return (\n            <>\n                {name}\n                {extension && <span className=\"chonky-file-entry-description-title-extension\">{extension}</span>}\n            </>\n        );\n    }, [file]);\n};\n\nexport const useThumbnailUrl = (file: Nullable<FileData>) => {\n    const thumbnailGenerator = useSelector(selectThumbnailGenerator);\n    const [thumbnailUrl, setThumbnailUrl] = useState<Nullable<string>>(null);\n    const [thumbnailLoading, setThumbnailLoading] = useState<boolean>(false);\n    const loadingAttempts = useRef(0);\n\n    useEffect(() => {\n        let loadingCancelled = false;\n\n        if (file) {\n            if (thumbnailGenerator) {\n                if (loadingAttempts.current === 0) {\n                    setThumbnailLoading(true);\n                }\n                loadingAttempts.current++;\n                Promise.resolve()\n                    .then(() => thumbnailGenerator(file))\n                    .then((thumbnailUrl: any) => {\n                        if (loadingCancelled) return;\n                        setThumbnailLoading(false);\n\n                        if (thumbnailUrl && typeof thumbnailUrl === 'string') {\n                            setThumbnailUrl(thumbnailUrl);\n                        }\n                    })\n                    .catch(error => {\n                        if (!loadingCancelled) setThumbnailLoading(false);\n                        Logger.error(`User-defined \"thumbnailGenerator\" handler threw an error: ${error.message}`);\n                    });\n            } else if (file.thumbnailUrl) {\n                setThumbnailUrl(file.thumbnailUrl);\n            }\n        }\n\n        return () => {\n            loadingCancelled = true;\n        };\n    }, [file, setThumbnailUrl, setThumbnailLoading, thumbnailGenerator]);\n\n    return { thumbnailUrl, thumbnailLoading };\n};\n\nexport const useFileClickHandlers = (file: Nullable<FileData>, displayIndex: number) => {\n    const dispatch = useDispatch();\n\n    // Prepare base handlers\n    const onMouseClick = useCallback(\n        (event: MouseClickEvent, clickType: 'single' | 'double') => {\n            if (!file) return;\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.MouseClickFile, {\n                    clickType,\n                    file,\n                    fileDisplayIndex: displayIndex,\n                    altKey: event.altKey,\n                    ctrlKey: event.ctrlKey,\n                    shiftKey: event.shiftKey,\n                })\n            );\n        },\n        [dispatch, file, displayIndex]\n    );\n    const onKeyboardClick = useCallback(\n        (event: KeyboardClickEvent) => {\n            if (!file) return;\n\n            dispatch(\n                thunkRequestFileAction(ChonkyActions.KeyboardClickFile, {\n                    file,\n                    fileDisplayIndex: displayIndex,\n                    enterKey: event.enterKey,\n                    spaceKey: event.spaceKey,\n                    altKey: event.altKey,\n                    ctrlKey: event.ctrlKey,\n                    shiftKey: event.shiftKey,\n                })\n            );\n        },\n        [dispatch, file, displayIndex]\n    );\n\n    // Prepare single/double click handlers\n    const onSingleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'single'), [onMouseClick]);\n    const onDoubleClick = useCallback((event: MouseClickEvent) => onMouseClick(event, 'double'), [onMouseClick]);\n\n    return {\n        onSingleClick,\n        onDoubleClick,\n        onKeyboardClick,\n    };\n};\n","import { MaybePromise, Nullable } from 'tsdef';\n\nimport { FileActionState } from './action-handler.types';\nimport { FileViewConfig } from './file-view.types';\nimport { FileFilter, FileMap } from './file.types';\nimport { ChonkyIconName } from './icons.types';\nimport { ChonkyDispatch, RootState } from './redux.types';\nimport { FileSortKeySelector } from './sort.types';\n\nexport interface FileAction {\n    /**\n     * Unique file action ID. If you set the action ID to one of the built-in Chonky\n     * action action IDs, you custom action definition will override the built-in\n     * definition.\n     */\n    id: string;\n    /**\n     * When set to `true`, the action will only be active (dispatchable) when user\n     * selects one or more files. If `fileFilter` is defined, it will be applied to\n     * selection before checking if its empty.\n     */\n    requiresSelection?: boolean; // Requires selection of 1+ files\n    /**\n     * A predicate that determines whether a file should be included in the selection\n     * for this action.\n     */\n    fileFilter?: FileFilter;\n    /**\n     * List of hotkeys that should trigger this action, defined using `hotkey-js`\n     * notation.\n     * @see https://www.npmjs.com/package/hotkeys-js\n     */\n    hotkeys?: string[] | readonly string[];\n    /**\n     * When button is defined and `toolbar` or `contextMenu` is set to `true`, a\n     * button will be added to the relevant UI component. Clicking on this button\n     * will active this action. The appearance of the button will change based on\n     * the action definition and the current Chonky state.\n     */\n    button?: FileActionButton;\n    /**\n     * When `sortKeySelector` is specified, the action becomes a sorting toggle. When\n     * this action is activated, it will sort files using the key selector, toggling\n     * between Ascending and Descending orders.\n     */\n    sortKeySelector?: FileSortKeySelector;\n    /**\n     * When `fileViewConfig` is specified, triggering this action will apply the\n     * provided config to Chonky's file view.\n     */\n    fileViewConfig?: FileViewConfig;\n    /**\n     * When `option` is specified, the action becomes an option toggle. When the action\n     * is activated, the boolean value of the option will be toggled.\n     */\n    option?: FileActionOption;\n    /**\n     * When selection transform is defined, activating this action will update the file\n     * selection. If the transform function returns `null`, selection will be left\n     * untouched.\n     */\n    selectionTransform?: FileSelectionTransform;\n    /**\n     * When effect is defined, it will be called right before dispatching the action to\n     * the user defined action handler. If the effect function returns a promise, Chonky\n     * will wait for the promise to resolve or fail before dispatching the action to the\n     * handler. If this function returns `true`, the file action will NOT be dispatched\n     * the the handler.\n     */\n    effect?: FileActionEffect;\n    /**\n     * When customVisibility is defined, it will change the display state of the file action\n     * The function must return the visibility as one of the CustomVisibilityState values:\n     *  - Hidden\n     *  - Disabled\n     *  - Default\n     *  - Active\n     */\n    customVisibility?: () => CustomVisibilityState;\n    /**\n     * Field used to infer the type of action payload. It is used solely for Typescript\n     * type inference and action validation.\n     */\n    __payloadType?: any;\n    /**\n     * Field used to infer the type of extra state for this action. It is used solely\n     * for Typescript type inference and action validation.\n     */\n    __extraStateType?: any;\n}\n\nexport interface FileActionButton {\n    name: string; // Button name\n    toolbar?: boolean; // Whether to show the button in the toolbar\n    contextMenu?: boolean; // Whether to show the button in the context menu\n    group?: string; // Button group (dropdown in toolbar or section in context menu)\n    tooltip?: string; // Help tooltip text\n    icon?: ChonkyIconName | string | any; // Icon name\n    iconOnly?: boolean; // Whether to only display the icon\n}\n\nexport interface FileActionOption {\n    id: string; // Unique option ID\n    defaultValue: boolean; // Whether the option is enabled by default (required)\n}\n\nexport type FileSelectionTransform = (data: {\n    prevSelection: Set<string>;\n    fileIds: ReadonlyArray<string>;\n    fileMap: Readonly<FileMap>;\n    hiddenFileIds: Set<string>;\n}) => Nullable<Set<string>>;\n\nexport type FileActionEffect<Action extends FileAction = any> = (data: {\n    action: Action;\n    payload: Action['__payloadType'];\n    state: FileActionState<{}>; // extra state is empty on purpose\n    reduxDispatch: ChonkyDispatch;\n    getReduxState: () => RootState;\n}) => MaybePromise<undefined | boolean | void>;\n\nexport type FileActionMap = { [actonId: string]: FileAction };\n\nexport enum CustomVisibilityState {\n    Hidden, \n    Disabled, \n    Default,\n    Active\n};\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { ChonkyActions } from '../action-definitions/index';\nimport {\n    selectFileActionData,\n    selectFileViewConfig,\n    selectOptionValue,\n    selectParentFolder,\n    selectSelectedFilesForActionCount,\n    selectSortActionId,\n    selectSortOrder,\n} from '../redux/selectors';\nimport { useParamSelector } from '../redux/store';\nimport { thunkRequestFileAction } from '../redux/thunks/dispatchers.thunks';\nimport { ChonkyIconName } from '../types/icons.types';\nimport { CustomVisibilityState } from '../types/action.types';\nimport { SortOrder } from '../types/sort.types';\nimport { FileHelper } from './file-helper';\n\nexport const useFileActionTrigger = (fileActionId: string) => {\n    const dispatch = useDispatch();\n    const fileAction = useParamSelector(selectFileActionData, fileActionId);\n    return useCallback(() => dispatch(thunkRequestFileAction(fileAction, undefined)), [\n        dispatch,\n        fileAction,\n    ]);\n};\n\nexport const useFileActionProps = (\n    fileActionId: string\n): { icon: Nullable<ChonkyIconName | string>; active: boolean; disabled: boolean } => {\n    const parentFolder = useSelector(selectParentFolder);\n    const fileViewConfig = useSelector(selectFileViewConfig);\n\n    const sortActionId = useSelector(selectSortActionId);\n    const sortOrder = useSelector(selectSortOrder);\n\n    const action = useParamSelector(selectFileActionData, fileActionId);\n    // @ts-ignore\n    const optionValue = useParamSelector(selectOptionValue, action?.option?.id);\n\n    const actionSelectionSize = useParamSelector(\n        selectSelectedFilesForActionCount,\n        fileActionId\n    );\n\n    const actionSelectionEmpty = actionSelectionSize === 0;\n\n    return useMemo(() => {\n        if (!action) return { icon: null, active: false, disabled: true };\n\n        let icon = action.button?.icon ?? null;\n        if (action.sortKeySelector) {\n            if (sortActionId === action.id) {\n                if (sortOrder === SortOrder.ASC) {\n                    icon = ChonkyIconName.sortAsc;\n                } else {\n                    icon = ChonkyIconName.sortDesc;\n                }\n            } else {\n                icon = ChonkyIconName.placeholder;\n            }\n        } else if (action.option) {\n            if (optionValue) {\n                icon = ChonkyIconName.toggleOn;\n            } else {\n                icon = ChonkyIconName.toggleOff;\n            }\n        }\n\n        const isSortButtonAndCurrentSort = action.id === sortActionId;\n        const isFileViewButtonAndCurrentView = action.fileViewConfig === fileViewConfig;\n        const isOptionAndEnabled = action.option ? !!optionValue : false;\n\n        let customDisabled = false;\n        let customActive = false;\n        if (action.customVisibility !== undefined) {\n            customDisabled = action.customVisibility() === CustomVisibilityState.Disabled;\n            customActive = action.customVisibility() === CustomVisibilityState.Active;\n        }\n        const active =\n            isSortButtonAndCurrentSort ||\n            isFileViewButtonAndCurrentView ||\n            isOptionAndEnabled ||\n            customActive;\n        \n        let disabled: boolean = (!!action.requiresSelection && actionSelectionEmpty) || customDisabled;\n\n        if (action.id === ChonkyActions.OpenParentFolder.id) {\n            // We treat `open_parent_folder` file action as a special case as it\n            // requires the parent folder to be present to work...\n            disabled = disabled || !FileHelper.isOpenable(parentFolder);\n        }\n\n        return { icon, active, disabled };\n    }, [\n        parentFolder,\n        fileViewConfig,\n        sortActionId,\n        sortOrder,\n        action,\n        optionValue,\n        actionSelectionEmpty,\n    ]);\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Button from '@material-ui/core/Button';\nimport React, { useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarButtonProps {\n    className?: string;\n    text: string;\n    tooltip?: string;\n    active?: boolean;\n    icon?: Nullable<ChonkyIconName | string>;\n    iconOnly?: boolean;\n    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n    disabled?: boolean;\n    dropdown?: boolean;\n}\n\nexport const ToolbarButton: React.FC<ToolbarButtonProps> = React.memo(props => {\n    const {\n        className: externalClassName,\n        text,\n        tooltip,\n        active,\n        icon,\n        iconOnly,\n        onClick,\n        disabled,\n        dropdown,\n    } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const iconComponent =\n        icon || iconOnly ? (\n            <div className={iconOnly ? '' : classes.iconWithText}>\n                <ChonkyIcon\n                    icon={icon ? icon : ChonkyIconName.fallbackIcon}\n                    fixedWidth={true}\n                />\n            </div>\n        ) : null;\n\n    const className = c({\n        [externalClassName ?? '']: true,\n        [classes.baseButton]: true,\n        [classes.iconOnlyButton]: iconOnly,\n        [classes.activeButton]: !!active,\n    });\n    return (\n        <Button\n            className={className}\n            onClick={onClick}\n            title={tooltip ? tooltip : text}\n            disabled={disabled || !onClick}\n        >\n            {iconComponent}\n            {text && !iconOnly && <span>{text}</span>}\n            {dropdown && (\n                <div className={classes.iconDropdown}>\n                    <ChonkyIcon\n                        icon={icon ? icon : ChonkyIconName.dropdown}\n                        fixedWidth={true}\n                    />\n                </div>\n            )}\n        </Button>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    baseButton: {\n        fontSize: important(theme.toolbar.fontSize),\n        textTransform: important('none'),\n        letterSpacing: important(0),\n        minWidth: important('auto'),\n        lineHeight: theme.toolbar.lineHeight,\n        height: theme.toolbar.size,\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n    iconWithText: {\n        marginRight: 8,\n    },\n    iconOnlyButton: {\n        width: theme.toolbar.size,\n        textAlign: 'center',\n    },\n    iconDropdown: {\n        fontSize: '0.7em',\n        marginLeft: 2,\n        marginTop: 1,\n    },\n    activeButton: {\n        color: important(theme.colors.textActive),\n    },\n}));\n\nexport interface SmartToolbarButtonProps {\n    fileActionId: string;\n}\n\nexport const SmartToolbarButton: React.FC<SmartToolbarButtonProps> = React.memo(\n    props => {\n        const { fileActionId } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n        const { buttonName, buttonTooltip } = useLocalizedFileActionStrings(action);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n        if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n        return (\n            <ToolbarButton\n                text={buttonName}\n                tooltip={buttonTooltip}\n                icon={icon}\n                iconOnly={button.iconOnly}\n                active={active}\n                onClick={triggerAction}\n                disabled={disabled}\n            />\n        );\n    }\n);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDndHoverOpen, useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from '../file-list/FileEntry-hooks';\nimport { FolderChainItem } from './FileNavbar-hooks';\nimport { ToolbarButton } from './ToolbarButton';\n\nexport interface FolderChainButtonProps {\n    first: boolean;\n    current: boolean;\n    item: FolderChainItem;\n}\n\nexport const FolderChainButton: React.FC<FolderChainButtonProps> = React.memo(\n    ({ first, current, item }) => {\n        const { file, disabled, onClick } = item;\n        const { dndIsOver, dndCanDrop, drop } = useFileDrop({\n            file,\n            forceDisableDrop: !file || current,\n        });\n        const dndState = useMemo<DndEntryState>(\n            () => ({\n                dndIsOver,\n                dndCanDrop,\n                dndIsDragging: false,\n            }),\n            [dndCanDrop, dndIsOver]\n        );\n        useDndHoverOpen(file, dndState);\n        const dndIconName = useDndIcon(dndState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const classes = useStyles(dndState);\n        const className = c({\n            [classes.baseBreadcrumb]: true,\n            [classes.disabledBreadcrumb]: disabled,\n            [classes.currentBreadcrumb]: current,\n        });\n        const text = file ? file.name : 'Loading...';\n        const icon =\n            first && file?.folderChainIcon === undefined\n                ? ChonkyIconName.folder\n                : file?.folderChainIcon;\n\n        return (\n            <div className={classes.buttonContainer} ref={file ? drop : null}>\n                {file && dndIconName && (\n                    <div className={classes.dndIndicator}>\n                        <ChonkyIcon icon={dndIconName} fixedWidth={true} />\n                    </div>\n                )}\n                <ToolbarButton\n                    icon={icon}\n                    className={className}\n                    text={text}\n                    disabled={disabled}\n                    onClick={onClick}\n                />\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    buttonContainer: {\n        position: 'relative',\n    },\n    baseBreadcrumb: {\n        color: (dndState: DndEntryState) => {\n            let color = theme.palette.text.primary;\n            if (dndState.dndIsOver) {\n                color = dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor;\n            }\n            return important(color);\n        },\n    },\n    disabledBreadcrumb: {\n        // Constant function here is on purpose. Without the function, the color here\n        // does not override the `baseBreadcrumb` color from above.\n        color: () => important(theme.palette.text.disabled),\n    },\n    currentBreadcrumb: {\n        textDecoration: important('underline'),\n    },\n    dndIndicator: {\n        color: (dndState: DndEntryState) =>\n            dndState.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor,\n        backgroundColor: (dndState: DndEntryState) =>\n            dndState.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask,\n        lineHeight: `calc(${theme.toolbar.lineHeight} - 6px)`,\n        transform: 'translateX(-50%) translateY(-50%)',\n        borderRadius: theme.toolbar.buttonRadius,\n        height: theme.toolbar.size - 6,\n        width: theme.toolbar.size - 6,\n        boxSizing: 'border-box',\n        position: 'absolute',\n        textAlign: 'center',\n        left: '50%',\n        top: '50%',\n        zIndex: 5,\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Box from '@material-ui/core/Box';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport React, { ReactElement, useMemo } from 'react';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useFolderChainItems } from './FileNavbar-hooks';\nimport { FolderChainButton } from './FolderChainButton';\nimport { SmartToolbarButton } from './ToolbarButton';\n\nexport interface FileNavbarProps {}\n\nexport const FileNavbar: React.FC<FileNavbarProps> = React.memo(() => {\n    const classes = useStyles();\n    const folderChainItems = useFolderChainItems();\n\n    const folderChainComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < folderChainItems.length; ++i) {\n            const key = `folder-chain-${i}`;\n            const component = (\n                <FolderChainButton\n                    key={key}\n                    first={i === 0}\n                    current={i === folderChainItems.length - 1}\n                    item={folderChainItems[i]}\n                />\n            );\n            components.push(component);\n        }\n        return components;\n    }, [folderChainItems]);\n\n    return (\n        <Box className={classes.navbarWrapper}>\n            <Box className={classes.navbarContainer}>\n                <SmartToolbarButton fileActionId={ChonkyActions.OpenParentFolder.id} />\n                <Breadcrumbs\n                    className={classes.navbarBreadcrumbs}\n                    classes={{ separator: classes.separator }}\n                >\n                    {folderChainComponents}\n                </Breadcrumbs>\n            </Box>\n        </Box>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    navbarWrapper: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n    },\n    navbarContainer: {\n        display: 'flex',\n    },\n    upDirectoryButton: {\n        fontSize: important(theme.toolbar.fontSize),\n        height: theme.toolbar.size,\n        width: theme.toolbar.size,\n        padding: '0px !important',\n    },\n    navbarBreadcrumbs: {\n        fontSize: important(theme.toolbar.fontSize),\n        flexGrow: 100,\n    },\n    separator: {\n        marginRight: important(4),\n        marginLeft: important(4),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport React, { useCallback, useContext } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileActionData } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { CustomVisibilityState } from '../../types/action.types';\nimport { useFileActionProps, useFileActionTrigger } from '../../util/file-actions';\nimport { useLocalizedFileActionStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarDropdownButtonProps {\n    text: string;\n    active?: boolean;\n    icon?: Nullable<ChonkyIconName | string>;\n    onClick?: () => void;\n    disabled?: boolean;\n}\n\nexport const ToolbarDropdownButton = React.forwardRef(\n    (props: ToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { text, active, icon, onClick, disabled } = props;\n        const classes = useStyles();\n        const ChonkyIcon = useContext(ChonkyIconContext);\n\n        const className = c({\n            [classes.baseButton]: true,\n            [classes.activeButton]: active,\n        });\n        return (\n            <MenuItem\n                ref={ref}\n                className={className}\n                onClick={onClick}\n                disabled={disabled}\n            >\n                {icon && (\n                    <ListItemIcon className={classes.icon}>\n                        <ChonkyIcon icon={icon} fixedWidth={true} />\n                    </ListItemIcon>\n                )}\n                <ListItemText primaryTypographyProps={{ className: classes.text }}>\n                    {text}\n                </ListItemText>\n            </MenuItem>\n        );\n    }\n);\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    baseButton: {\n        lineHeight: important(theme.toolbar.lineHeight),\n        height: important(theme.toolbar.size),\n        minHeight: important('auto'),\n        minWidth: important('auto'),\n        padding: important(20),\n    },\n    icon: {\n        fontSize: important(theme.toolbar.fontSize),\n        minWidth: important('auto'),\n        color: important('inherit'),\n        marginRight: 8,\n    },\n    text: {\n        fontSize: important(theme.toolbar.fontSize),\n    },\n    activeButton: {\n        color: important(theme.colors.textActive),\n    },\n}));\n\nexport interface SmartToolbarDropdownButtonProps {\n    fileActionId: string;\n    onClickFollowUp?: () => void;\n}\n\nexport const SmartToolbarDropdownButton = React.forwardRef(\n    (props: SmartToolbarDropdownButtonProps, ref: React.Ref<HTMLLIElement>) => {\n        const { fileActionId, onClickFollowUp } = props;\n\n        const action = useParamSelector(selectFileActionData, fileActionId);\n        const triggerAction = useFileActionTrigger(fileActionId);\n        const { icon, active, disabled } = useFileActionProps(fileActionId);\n        const { buttonName } = useLocalizedFileActionStrings(action);\n\n        // Combine external click handler with internal one\n        const handleClick = useCallback(() => {\n            triggerAction();\n            if (onClickFollowUp) onClickFollowUp();\n        }, [onClickFollowUp, triggerAction]);\n\n        if (!action) return null;\n        const { button } = action;\n        if (!button) return null;\n        if (action.customVisibility !== undefined && action.customVisibility() === CustomVisibilityState.Hidden) return null;\n\n        return (\n            <ToolbarDropdownButton\n                ref={ref}\n                text={buttonName}\n                icon={icon}\n                onClick={handleClick}\n                active={active}\n                disabled={disabled}\n            />\n        );\n    }\n);\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport Menu from '@material-ui/core/Menu';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { FileActionGroup } from '../../types/action-menus.types';\nimport { useLocalizedFileActionGroup } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { ToolbarButton } from './ToolbarButton';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport type ToolbarDropdownProps = FileActionGroup;\n\nexport const ToolbarDropdown: React.FC<ToolbarDropdownProps> = React.memo(props => {\n    const { name, fileActionIds } = props;\n    const [anchor, setAnchor] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = useCallback(\n        (event: React.MouseEvent<HTMLButtonElement>) => setAnchor(event.currentTarget),\n        [setAnchor]\n    );\n    const handleClose = useCallback(() => setAnchor(null), [setAnchor]);\n\n    const menuItemComponents = useMemo(\n        () =>\n            fileActionIds.map(id => (\n                <SmartToolbarDropdownButton\n                    key={`menu-item-${id}`}\n                    fileActionId={id}\n                    onClickFollowUp={handleClose}\n                />\n            )),\n        [fileActionIds, handleClose]\n    );\n\n    const localizedName = useLocalizedFileActionGroup(name);\n    const classes = useStyles();\n    return (\n        <>\n            <ToolbarButton text={localizedName} onClick={handleClick} dropdown={true} />\n            <Menu\n                autoFocus\n                keepMounted\n                elevation={2}\n                anchorEl={anchor}\n                onClose={handleClose}\n                open={Boolean(anchor)}\n                transitionDuration={150}\n                classes={{ list: classes.dropdownList }}\n            >\n                {menuItemComponents}\n            </Menu>\n        </>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    dropdownList: {\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { selectHiddenFileCount, selectors, selectSelectionSize } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarInfoProps {}\n\nexport const ToolbarInfo: React.FC<ToolbarInfoProps> = React.memo(() => {\n    const classes = useStyles();\n\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const selectionSize = useSelector(selectSelectionSize);\n    const hiddenCount = useSelector(selectHiddenFileCount);\n\n    const intl = useIntl();\n    const fileCountString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'visibleFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {# items}\n                one {# item}\n                other {# items}\n            }`,\n        },\n        { fileCount: displayFileIds.length }\n    );\n    const selectedString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'selectedFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# selected}\n            }`,\n        },\n        { fileCount: selectionSize }\n    );\n    const hiddenString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.Toolbar, 'hiddenFileCount'),\n            defaultMessage: `{fileCount, plural,\n                =0 {}\n                other {# hidden}\n            }`,\n        },\n        { fileCount: hiddenCount }\n    );\n\n    return (\n        <div className={classes.infoContainer}>\n            <Typography className={classes.infoText} variant=\"body1\">\n                {fileCountString}\n                {(selectedString || hiddenString) && (\n                    <span className={classes.extraInfoSpan}>\n                        (\n                        <span className={classes.selectionSizeText}>\n                            {selectedString}\n                        </span>\n                        {selectedString && hiddenString && ', '}\n                        <span className={classes.hiddenCountText}>{hiddenString}</span>)\n                    </span>\n                )}\n            </Typography>\n        </div>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    infoContainer: {\n        height: theme.toolbar.size,\n        display: 'flex',\n    },\n    infoText: {\n        lineHeight: important(theme.toolbar.lineHeight),\n        fontSize: important(theme.toolbar.fontSize),\n        marginLeft: important(12),\n        height: theme.toolbar.size,\n    },\n    extraInfoSpan: {\n        marginRight: important(8),\n        marginLeft: important(8),\n        opacity: 0.8,\n    },\n    selectionSizeText: {\n        color: theme.colors.textActive,\n    },\n    hiddenCountText: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectSearchString } from '../../redux/selectors';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useDebounce } from '../../util/hooks-helpers';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface ToolbarSearchProps {}\n\nexport const ToolbarSearch: React.FC<ToolbarSearchProps> = React.memo(() => {\n    const intl = useIntl();\n    const searchPlaceholderString = intl.formatMessage({\n        id: getI18nId(I18nNamespace.Toolbar, 'searchPlaceholder'),\n        defaultMessage: 'Search',\n    });\n\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n\n    const searchInputRef = useRef<HTMLInputElement>();\n\n    const dispatch = useDispatch();\n    const reduxSearchString = useSelector(selectSearchString);\n\n    const [localSearchString, setLocalSearchString] = useState(reduxSearchString);\n    const [debouncedLocalSearchString] = useDebounce(localSearchString, 300);\n    const [showLoadingIndicator, setShowLoadingIndicator] = useState(false);\n\n    useEffect(() => {\n        dispatch(\n            reduxActions.setFocusSearchInput(() => {\n                if (searchInputRef.current) searchInputRef.current.focus();\n            })\n        );\n        return () => {\n            dispatch(reduxActions.setFocusSearchInput(null));\n        };\n    }, [dispatch]);\n\n    useEffect(() => {\n        setShowLoadingIndicator(false);\n        dispatch(reduxActions.setSearchString(debouncedLocalSearchString));\n    }, [debouncedLocalSearchString, dispatch]);\n\n    const handleChange = useCallback((event: React.FormEvent<HTMLInputElement>) => {\n        setShowLoadingIndicator(true);\n        setLocalSearchString(event.currentTarget.value);\n    }, []);\n    const handleKeyUp = useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            // Remove focus from the search input field when user presses escape.\n            // Note: We use KeyUp instead of KeyPress because some browser plugins can\n            //       intercept KeyPress events with Escape key.\n            //       @see https://stackoverflow.com/a/37461974\n            if (event.key === 'Escape') {\n                setLocalSearchString('');\n                dispatch(reduxActions.setSearchString(''));\n                if (searchInputRef.current) searchInputRef.current.blur();\n            }\n        },\n        [dispatch]\n    );\n\n    return (\n        <TextField\n            className={classes.searchFieldContainer}\n            size=\"small\"\n            variant=\"outlined\"\n            value={localSearchString}\n            placeholder={searchPlaceholderString}\n            onChange={handleChange as any}\n            inputRef={searchInputRef}\n            InputProps={{\n                onKeyUp: handleKeyUp,\n                startAdornment: (\n                    <InputAdornment className={classes.searchIcon} position=\"start\">\n                        <ChonkyIcon\n                            icon={showLoadingIndicator ? ChonkyIconName.loading : ChonkyIconName.search}\n                            spin={showLoadingIndicator}\n                        />\n                    </InputAdornment>\n                ),\n                className: classes.searchFieldInput,\n            }}\n            inputProps={{ className: classes.searchFieldInputInner }}\n        />\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    searchFieldContainer: {\n        height: theme.toolbar.size,\n        width: 150,\n    },\n    searchIcon: {\n        fontSize: '0.9em',\n        opacity: 0.75,\n    },\n    searchFieldInput: {\n        lineHeight: important(0),\n        padding: important(0),\n        margin: important(0),\n        fontSize: important(theme.toolbar.fontSize),\n        borderRadius: theme.toolbar.buttonRadius,\n        height: theme.toolbar.size - 4,\n        paddingLeft: important(8),\n        marginTop: 2,\n    },\n    searchFieldInputInner: {\n        lineHeight: important(`${theme.toolbar.size - 4}px`),\n        fontSize: important(theme.toolbar.fontSize),\n        height: important(theme.toolbar.size - 4),\n        padding: important([0, 8, 0, 0]),\n        margin: important(0),\n        '-webkit-appearance': 'none',\n    },\n}));\n","import React, { ReactElement, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectToolbarItems } from '../../redux/selectors';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { SmartToolbarButton } from './ToolbarButton';\nimport { ToolbarDropdown } from './ToolbarDropdown';\nimport { ToolbarInfo } from './ToolbarInfo';\nimport { ToolbarSearch } from './ToolbarSearch';\n\nexport interface FileToolbarProps {}\n\nexport const FileToolbar: React.FC<FileToolbarProps> = React.memo(() => {\n    const classes = useStyles();\n    const toolbarItems = useSelector(selectToolbarItems);\n\n    const toolbarItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < toolbarItems.length; ++i) {\n            const item = toolbarItems[i];\n\n            const key = `toolbar-item-${typeof item === 'string' ? item : item.name}`;\n            const component =\n                typeof item === 'string' ? (\n                    <SmartToolbarButton key={key} fileActionId={item} />\n                ) : (\n                    <ToolbarDropdown\n                        key={key}\n                        name={item.name}\n                        fileActionIds={item.fileActionIds}\n                    />\n                );\n            components.push(component);\n        }\n        return components;\n    }, [toolbarItems]);\n\n    return (\n        <div className={classes.toolbarWrapper}>\n            <div className={classes.toolbarContainer}>\n                <div className={classes.toolbarLeft}>\n                    <ToolbarSearch />\n                    <ToolbarInfo />\n                </div>\n                <div className={classes.toolbarRight}>{toolbarItemComponents}</div>\n            </div>\n        </div>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    toolbarWrapper: {},\n    toolbarContainer: {\n        flexWrap: 'wrap-reverse',\n        display: 'flex',\n    },\n    toolbarLeft: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n        flexWrap: 'nowrap',\n        flexGrow: 10000,\n        display: 'flex',\n    },\n    toolbarLeftFiller: {\n        flexGrow: 10000,\n    },\n    toolbarRight: {\n        paddingBottom: theme.margins.rootLayoutMargin,\n        flexWrap: 'nowrap',\n        display: 'flex',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useContext } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileListEmptyProps {\n    width: number;\n    height: number;\n}\n\nexport const FileListEmpty: React.FC<FileListEmptyProps> = props => {\n    const { width, height } = props;\n    const classes = useStyles();\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const style: CSSProperties = {\n        width,\n        height,\n    };\n\n    const intl = useIntl();\n    const emptyString = intl.formatMessage({\n        id: getI18nId(I18nNamespace.FileList, 'nothingToShow'),\n        defaultMessage: 'Nothing to show',\n    });\n\n    return (\n        <div className={classes.fileListEmpty} style={style}>\n            <div className={classes.fileListEmptyContent}>\n                <ChonkyIcon icon={ChonkyIconName.folderOpen} />\n                &nbsp; {emptyString}\n            </div>\n        </div>\n    );\n};\n\nconst useStyles = makeGlobalChonkyStyles(theme => ({\n    fileListEmpty: {\n        color: theme.palette.text.disabled,\n        position: 'relative',\n        textAlign: 'center',\n        fontSize: '1.2em',\n    },\n    fileListEmptyContent: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nilable, Nullable } from 'tsdef';\n\nimport { selectDoubleClickDelay } from '../../redux/selectors';\nimport {\n    KeyboardClickEvent,\n    KeyboardClickEventHandler,\n    MouseClickEvent,\n    MouseClickEventHandler,\n} from './ClickableWrapper';\n\nexport const useClickHandler = (\n    onSingleClick: Nilable<MouseClickEventHandler>,\n    onDoubleClick: Nilable<MouseClickEventHandler>\n) => {\n    const doubleClickDelay = useSelector(selectDoubleClickDelay);\n\n    const counter = useRef({\n        clickCount: 0,\n        clickTimeout: null as Nullable<number>,\n    });\n\n    return useCallback(\n        (event: React.MouseEvent) => {\n            const mouseClickEvent: MouseClickEvent = {\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey || event.metaKey,\n                shiftKey: event.shiftKey,\n\n            };\n\n            counter.current.clickCount++;\n            if (counter.current.clickCount === 1) {\n                if (onSingleClick) {\n                    event.preventDefault();\n                    onSingleClick(mouseClickEvent);\n                }\n                counter.current.clickCount = 1;\n                // @ts-ignore\n                counter.current.clickTimeout = setTimeout(\n                    () => (counter.current.clickCount = 0),\n                    doubleClickDelay\n                );\n            } else if (counter.current.clickCount === 2) {\n                if (onDoubleClick) {\n                    event.preventDefault();\n                    onDoubleClick(mouseClickEvent);\n                }\n                if (typeof counter.current.clickTimeout === 'number') {\n                    clearTimeout(counter.current.clickTimeout);\n                    counter.current.clickTimeout = null;\n                    counter.current.clickCount = 0;\n                }\n            }\n        },\n        [doubleClickDelay, onSingleClick, onDoubleClick, counter]\n    );\n};\n\nexport const useKeyDownHandler = (onKeyboardClick?: KeyboardClickEventHandler) => {\n    return useCallback(\n        (event: React.KeyboardEvent) => {\n            if (!onKeyboardClick) return;\n\n            const keyboardClickEvent: KeyboardClickEvent = {\n                enterKey: event.nativeEvent.code === 'Enter',\n                spaceKey: event.nativeEvent.code === 'Space',\n                altKey: event.altKey,\n                ctrlKey: event.ctrlKey,\n                shiftKey: event.shiftKey,\n            };\n\n            if (keyboardClickEvent.spaceKey || keyboardClickEvent.enterKey) {\n                event.preventDefault();\n                event.stopPropagation();\n                onKeyboardClick(keyboardClickEvent);\n            }\n        },\n        [onKeyboardClick]\n    );\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useCallback } from 'react';\nimport { AnyObjectWithStringKeys } from 'tsdef';\n\nimport { useClickHandler, useKeyDownHandler } from './ClickableWrapper-hooks';\n\nexport interface MouseClickEvent {\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n}\nexport type MouseClickEventHandler = (event: MouseClickEvent) => void;\n\nexport interface KeyboardClickEvent {\n    enterKey: boolean;\n    spaceKey: boolean;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n}\nexport type KeyboardClickEventHandler = (event: KeyboardClickEvent) => void;\n\nexport interface ClickableWrapperProps {\n    wrapperTag: any;\n    passthroughProps?: any;\n\n    onSingleClick?: MouseClickEventHandler;\n    onDoubleClick?: MouseClickEventHandler;\n    onKeyboardClick?: KeyboardClickEventHandler;\n    setFocused?: (focused: boolean) => void;\n}\n\nexport const ClickableWrapper: React.FC<ClickableWrapperProps> = props => {\n    const {\n        children,\n        wrapperTag: WrapperTag,\n        passthroughProps,\n        onSingleClick,\n        onDoubleClick,\n        onKeyboardClick,\n        setFocused,\n    } = props;\n\n    const handleClick = useClickHandler(onSingleClick, onDoubleClick);\n    const handleKeyDown = useKeyDownHandler(onKeyboardClick);\n\n    const compProps: AnyObjectWithStringKeys = {\n        onFocus: useCallback(() => setFocused && setFocused(true), [setFocused]),\n        onBlur: useCallback(() => setFocused && setFocused(false), [setFocused]),\n    };\n\n    if (onSingleClick || onDoubleClick || onKeyboardClick) {\n        compProps.onClick = handleClick;\n        compProps.onKeyDown = handleKeyDown;\n        compProps.tabIndex = 0;\n    }\n\n    const mergedProps = { ...compProps, ...passthroughProps };\n    return <WrapperTag {...mergedProps}>{children}</WrapperTag>;\n};\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { FileData } from '../../types/file.types';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileNameComponent, useModifierIconComponents } from './FileEntry-hooks';\n\nexport interface FileEntryNameProps {\n    file: Nullable<FileData>;\n    className?: string;\n}\n\nexport const FileEntryName: React.FC<FileEntryNameProps> = React.memo(({ file, className }) => {\n    const modifierIconComponents = useModifierIconComponents(file);\n    const fileNameComponent = useFileNameComponent(file);\n\n    const classes = useStyles();\n    return (\n        <span className={className} title={file ? file.name : undefined}>\n            {modifierIconComponents.length > 0 && (\n                <span className={classes.modifierIcons}>{modifierIconComponents}</span>\n            )}\n            {fileNameComponent}\n        </span>\n    );\n});\nFileEntryName.displayName = 'FileEntryName';\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    modifierIcons: {\n        color: theme.palette.text.hint,\n        position: 'relative',\n        fontSize: '0.775em',\n        paddingRight: 5,\n    },\n}));\n","import React, { useContext } from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState } from './GridEntryPreview';\n\nexport const CompactEntry: React.FC<FileEntryProps> = React.memo(\n    // @ts-ignore\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n\n        const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(\n            file\n        );\n\n        const classes = useStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={entryState.icon}\n                        spin={entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div className={classes.listFileEntryDescription}>\n                    <div\n                        className={classes.listFileEntryName}\n                        title={file ? file.name : undefined}\n                    >\n                        <FileEntryName file={file} />\n                    </div>\n                    <div className={classes.listFileEntryProperties}>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileModDateString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={5} maxLength={15} />\n                            )}\n                        </div>\n                        <div className={classes.listFileEntryProperty}>\n                            {file ? (\n                                fileSizeString ?? <span>—</span>\n                            ) : (\n                                <TextPlaceholder minLength={10} maxLength={20} />\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"chonky-file-entry-outline\"></div>\n                <div className=\"chonky-file-entry-selection\"></div>\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listFileEntry: {\n        fontSize: theme.listFileEntry.fontSize,\n        alignItems: 'center',\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n    },\n    listFileEntryIcon: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: 'inset rgba(255, 255, 255, 0.5) 0 0 0 999px',\n        borderRadius: theme.listFileEntry.iconBorderRadius,\n        fontSize: theme.listFileEntry.iconFontSize,\n        color: '#fff',\n        padding: 8,\n    },\n    listFileEntryDescription: {\n        flexDirection: 'column',\n        display: 'flex',\n        flexGrow: 1,\n    },\n    listFileEntryName: {\n        padding: [0, 8, 4, 8],\n    },\n    listFileEntryProperties: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        flexDirection: 'row',\n        display: 'flex',\n    },\n    listFileEntryProperty: {\n        padding: [0, 8],\n        opacity: 0.4,\n    },\n}));\n","import React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { FileData } from '../../types/file.types';\nimport { useDndHoverOpen, useFileEntryDnD } from '../../util/dnd';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeLocalChonkyStyles } from '../../util/styles';\n\nexport interface DnDFileEntryProps {\n    file: Nullable<FileData>;\n    children: (dndState: DndEntryState) => React.ReactElement;\n}\n\nexport const DnDFileEntry = React.memo(({ file, children }: DnDFileEntryProps) => {\n    const { drop, drag, dndState } = useFileEntryDnD(file);\n\n    useDndHoverOpen(file, dndState);\n    const classes = useStyles();\n    return (\n        <div ref={drop} className={classes.fillParent}>\n            <div\n                ref={FileHelper.isDraggable(file) ? drag : null}\n                className={classes.fillParent}\n            >\n                {children(dndState)}\n            </div>\n        </div>\n    );\n});\n\nexport const useStyles = makeLocalChonkyStyles(() => ({\n    fillParent: {\n        height: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport c from 'classnames';\nimport React from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { makeGlobalChonkyStyles } from '../../util/styles';\n\nexport interface FileThumbnailProps {\n    className: string;\n    thumbnailUrl: Nullable<string>;\n}\n\nexport const FileThumbnail: React.FC<FileThumbnailProps> = React.memo(props => {\n    const { className, thumbnailUrl } = props;\n\n    const thumbnailStyle: React.CSSProperties = thumbnailUrl ? { backgroundImage: `url('${thumbnailUrl}')` } : {};\n\n    const classes = useStyles();\n    return <div className={c([className, classes.fileThumbnail])} style={thumbnailStyle} />;\n});\nFileThumbnail.displayName = 'FileThumbnail';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileThumbnail: {\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'contain',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext } from 'react';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useDndIcon } from './FileEntry-hooks';\n\nexport interface DnDIndicatorProps {\n    className: string;\n    dndState: DndEntryState;\n}\n\nexport const GridEntryDndIndicator: React.FC<DnDIndicatorProps> = React.memo(props => {\n    const { className: externalClassName, dndState } = props;\n    const dndIconName = useDndIcon(dndState);\n    const classes = useStyles(dndState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    if (!dndIconName) return null;\n    const className = c({\n        [classes.dndIndicator]: true,\n        [externalClassName]: true,\n    });\n    return (\n        <div className={className}>\n            <ChonkyIcon icon={dndIconName} />\n        </div>\n    );\n});\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    dndIndicator: {\n        color: (dndState: DndEntryState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : '#000',\n        boxSizing: 'border-box',\n        position: 'absolute',\n        fontSize: '1.2em',\n        opacity: 0.6,\n        padding: 6,\n        '&:before': {\n            borderBottom: '50px solid transparent',\n            borderLeft: '50px solid #fff',\n            position: 'absolute',\n            content: '\"\"',\n            zIndex: -1,\n            left: 0,\n            top: 0,\n        },\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { useContext, useEffect } from 'react';\nimport { Nullable } from 'tsdef';\n\nimport { DndEntryState } from '../../types/file-list.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, important, makeLocalChonkyStyles } from '../../util/styles';\nimport { FileThumbnail } from './FileThumbnail';\nimport { GridEntryDndIndicator } from './GridEntryDndIndicator';\n\nexport type FileEntryState = {\n    childrenCount: Nullable<number>;\n    color: string;\n    icon: ChonkyIconName | string;\n    thumbnailUrl: Nullable<string>;\n    iconSpin: boolean;\n    selected: boolean;\n    focused: boolean;\n};\n\nexport interface FileEntryPreviewProps {\n    className?: string;\n    entryState: FileEntryState;\n    dndState: DndEntryState;\n}\n\nexport const GridEntryPreviewFolder: React.FC<FileEntryPreviewProps> = React.memo(props => {\n    const { className: externalClassName, entryState, dndState } = props;\n\n    const folderClasses = useFolderStyles(entryState);\n    const fileClasses = useFileStyles(entryState);\n    const commonClasses = useCommonEntryStyles(entryState);\n    const className = c({\n        [folderClasses.previewFile]: true,\n        [externalClassName || '']: !!externalClassName,\n    });\n    return (\n        <div className={className}>\n            <div className={folderClasses.folderBackSideMid}>\n                <div className={folderClasses.folderBackSideTop} />\n                <div className={folderClasses.folderFrontSide}>\n                    <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n                    <div className={c([fileClasses.fileIcon, folderClasses.fileIcon])}>{entryState.childrenCount}</div>\n                    <div className={commonClasses.selectionIndicator}></div>\n                    <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n                </div>\n            </div>\n        </div>\n    );\n});\nGridEntryPreviewFolder.displayName = 'GridEntryPreviewFolder';\n\nconst useFolderStyles = makeLocalChonkyStyles(theme => ({\n    previewFile: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    folderBackSideTop: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = theme.gridFileEntry.folderBackColorTint;\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopLeftRadius: theme.gridFileEntry.borderRadius,\n        borderTopRightRadius: 10,\n        position: 'absolute',\n        right: '60%',\n        height: 13,\n        top: -10,\n        left: 0,\n        '&:after': {\n            borderRightColor: theme.palette.background.paper,\n            borderTopColor: theme.palette.background.paper,\n            borderBottomColor: 'transparent',\n            borderLeftColor: 'transparent',\n            borderWidth: [0, 15, 10, 0],\n            borderStyle: 'solid',\n            position: 'absolute',\n            display: 'block',\n            content: '\"\"',\n            right: 0,\n            top: 0,\n        },\n    },\n    folderBackSideMid: {\n        backgroundColor: (state: FileEntryState) => state.color,\n        boxShadow: (state: FileEntryState) => {\n            let color = theme.gridFileEntry.folderBackColorTint;\n            if (state.focused) color = 'rgba(0, 0, 0, 0.3)';\n            else if (state.selected) color = 'rgba(0, 153, 255, .4)';\n            return `inset ${color} 0 0 0 999px`;\n        },\n        borderTopRightRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    folderFrontSide: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            if (state.selected) shadows.push('inset rgba(0, 153, 255, .65) 0 0 0 3px');\n            shadows.push(`inset ${theme.gridFileEntry.folderFrontColorTint} 0 0 0 999px`);\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        overflow: 'hidden',\n        bottom: 0,\n        right: 0,\n        left: 0,\n        top: 10,\n    },\n    fileIcon: {\n        fontSize: important(theme.gridFileEntry.childrenCountSize),\n    },\n}));\n\nexport const GridEntryPreviewFile: React.FC<FileEntryPreviewProps> = React.memo(props => {\n    const { className: externalClassName, entryState, dndState } = props;\n\n    const fileClasses = useFileStyles(entryState);\n    const commonClasses = useCommonEntryStyles(entryState);\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    const className = c({\n        [fileClasses.previewFile]: true,\n        [externalClassName || '']: !!externalClassName,\n    });\n    return (\n        <div className={className}>\n            <GridEntryDndIndicator className={fileClasses.dndIndicator} dndState={dndState} />\n            <div className={fileClasses.fileIcon}>\n                <ChonkyIcon icon={entryState.icon} spin={entryState.iconSpin} />\n            </div>\n            <div className={commonClasses.selectionIndicator}></div>\n            <FileThumbnail className={fileClasses.thumbnail} thumbnailUrl={entryState.thumbnailUrl} />\n        </div>\n    );\n});\nGridEntryPreviewFile.displayName = 'GridEntryPreviewFile';\n\nconst useFileStyles = makeLocalChonkyStyles(theme => ({\n    previewFile: {\n        boxShadow: (state: FileEntryState) => {\n            const shadows: string[] = [];\n            if (state.selected) shadows.push('inset rgba(0,153,255, .65) 0 0 0 3px');\n            if (state.focused) shadows.push('inset rgba(0, 0, 0, 1) 0 0 0 3px');\n            shadows.push(`inset ${theme.gridFileEntry.fileColorTint} 0 0 0 999px`);\n            return shadows.join(', ');\n        },\n        backgroundColor: (state: FileEntryState) => state.color,\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'relative',\n        overflow: 'hidden',\n    },\n    dndIndicator: {\n        zIndex: 14,\n    },\n    fileIcon: {\n        transform: 'translateX(-50%) translateY(-50%)',\n        fontSize: theme.gridFileEntry.iconSize,\n        opacity: (state: FileEntryState) => (state.thumbnailUrl && !state.focused ? 0 : 1),\n        color: (state: FileEntryState) =>\n            state.focused ? theme.gridFileEntry.iconColorFocused : theme.gridFileEntry.iconColor,\n        position: 'absolute',\n        left: '50%',\n        zIndex: 12,\n        top: '50%',\n    },\n    thumbnail: {\n        borderRadius: theme.gridFileEntry.borderRadius,\n        position: 'absolute',\n        zIndex: 6,\n        bottom: 5,\n        right: 5,\n        left: 5,\n        top: 5,\n    },\n}));\n\nexport const useCommonEntryStyles = makeLocalChonkyStyles(() => ({\n    selectionIndicator: {\n        display: (state: FileEntryState) => (state.selected ? 'block' : 'none'),\n        background:\n            'repeating-linear-gradient(' +\n            '45deg,' +\n            'rgba(0,153,255,.14),' +\n            'rgba(0,153,255,.14) 10px,' +\n            'rgba(0,153,255,.25) 0,' +\n            'rgba(0,153,255,.25) 20px' +\n            ')',\n        backgroundColor: 'rgba(0, 153, 255, .14)',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 10,\n    },\n    focusIndicator: {\n        display: (state: FileEntryState) => (state.focused ? 'block' : 'none'),\n        boxShadow: 'inset rgba(0, 0, 0, 1) 0 0 0 2px',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 11,\n    },\n}));\n","import React from 'react';\n\nimport { FileEntryProps } from '../../types/file-list.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { useFileEntryHtmlProps, useFileEntryState } from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, GridEntryPreviewFile, GridEntryPreviewFolder } from './GridEntryPreview';\n\nexport const GridEntry: React.FC<FileEntryProps> = React.memo(({ file, selected, focused, dndState }) => {\n    const isDirectory = FileHelper.isDirectory(file);\n    const entryState = useFileEntryState(file, selected, focused);\n\n    const classes = useFileEntryStyles(entryState);\n    const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n    const entryClassName = c({\n        [classes.gridFileEntry]: true,\n    });\n    return (\n        <div className={entryClassName} {...fileEntryHtmlProps}>\n            {isDirectory ? (\n                <GridEntryPreviewFolder\n                    className={classes.gridFileEntryPreview}\n                    entryState={entryState}\n                    dndState={dndState}\n                />\n            ) : (\n                <GridEntryPreviewFile\n                    className={classes.gridFileEntryPreview}\n                    entryState={entryState}\n                    dndState={dndState}\n                />\n            )}\n            <div className={classes.gridFileEntryNameContainer}>\n                <FileEntryName className={classes.gridFileEntryName} file={file} />\n            </div>\n        </div>\n    );\n});\nGridEntry.displayName = 'GridEntry';\n\nconst useFileEntryStyles = makeLocalChonkyStyles(theme => ({\n    gridFileEntry: {\n        flexDirection: 'column',\n        display: 'flex',\n        height: '100%',\n    },\n    gridFileEntryPreview: {\n        flexGrow: 1,\n    },\n    gridFileEntryNameContainer: {\n        fontSize: theme.gridFileEntry.fontSize,\n        wordBreak: 'break-word',\n        textAlign: 'center',\n        paddingTop: 5,\n    },\n    gridFileEntryName: {\n        backgroundColor: (state: FileEntryState) => (state.selected ? 'rgba(0,153,255, .25)' : 'transparent'),\n        textDecoration: (state: FileEntryState) => (state.focused ? 'underline' : 'none'),\n        borderRadius: 3,\n        padding: [2, 4],\n    },\n}));\n","import React, { useContext, useMemo } from 'react';\n\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { useLocalizedFileEntryStrings } from '../../util/i18n';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport { c, makeLocalChonkyStyles } from '../../util/styles';\nimport { TextPlaceholder } from '../external/TextPlaceholder';\nimport {\n    useDndIcon,\n    useFileEntryHtmlProps,\n    useFileEntryState,\n} from './FileEntry-hooks';\nimport { FileEntryName } from './FileEntryName';\nimport { FileEntryState, useCommonEntryStyles } from './GridEntryPreview';\n\ninterface StyleState {\n    entryState: FileEntryState;\n    dndState: DndEntryState;\n}\n\nexport const ListEntry: React.FC<FileEntryProps> = React.memo(\n    ({ file, selected, focused, dndState }) => {\n        const entryState: FileEntryState = useFileEntryState(file, selected, focused);\n        const dndIconName = useDndIcon(dndState);\n\n        const { fileModDateString, fileSizeString } = useLocalizedFileEntryStrings(\n            file\n        );\n        const styleState = useMemo<StyleState>(\n            () => ({\n                entryState,\n                dndState,\n            }),\n            [dndState, entryState]\n        );\n        const classes = useStyles(styleState);\n        const commonClasses = useCommonEntryStyles(entryState);\n        const ChonkyIcon = useContext(ChonkyIconContext);\n        const fileEntryHtmlProps = useFileEntryHtmlProps(file);\n        return (\n            <div className={classes.listFileEntry} {...fileEntryHtmlProps}>\n                <div className={commonClasses.focusIndicator}></div>\n                <div\n                    className={c([\n                        commonClasses.selectionIndicator,\n                        classes.listFileEntrySelection,\n                    ])}\n                ></div>\n                <div className={classes.listFileEntryIcon}>\n                    <ChonkyIcon\n                        icon={dndIconName ?? entryState.icon}\n                        spin={dndIconName ? false : entryState.iconSpin}\n                        fixedWidth={true}\n                    />\n                </div>\n                <div\n                    className={classes.listFileEntryName}\n                    title={file ? file.name : undefined}\n                >\n                    <FileEntryName file={file} />\n                </div>\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileModDateString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={5} maxLength={15} />\n                    )}\n                </div>\n                <div className={classes.listFileEntryProperty}>\n                    {file ? (\n                        fileSizeString ?? <span>—</span>\n                    ) : (\n                        <TextPlaceholder minLength={10} maxLength={20} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n);\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listFileEntry: {\n        boxShadow: `inset ${theme.palette.divider} 0 -1px 0`,\n        fontSize: theme.listFileEntry.fontSize,\n        color: ({ dndState }: StyleState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : 'inherit',\n        alignItems: 'center',\n        position: 'relative',\n        display: 'flex',\n        height: '100%',\n    },\n    listFileEntrySelection: {\n        opacity: 0.6,\n    },\n    listFileEntryIcon: {\n        color: ({ entryState, dndState }: StyleState) =>\n            dndState.dndIsOver\n                ? dndState.dndCanDrop\n                    ? theme.dnd.canDropColor\n                    : theme.dnd.cannotDropColor\n                : entryState.color,\n        fontSize: theme.listFileEntry.iconFontSize,\n        boxSizing: 'border-box',\n        padding: [2, 4],\n        zIndex: 20,\n    },\n    listFileEntryName: {\n        textOverflow: 'ellipsis',\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '1 1 300px',\n        paddingLeft: 8,\n        zIndex: 20,\n    },\n    listFileEntryProperty: {\n        fontSize: theme.listFileEntry.propertyFontSize,\n        boxSizing: 'border-box',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        flex: '0 1 150px',\n        padding: [2, 8],\n        zIndex: 20,\n    },\n}));\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Nullable } from 'tsdef';\n\nimport { selectFileData, selectIsDnDDisabled, selectIsFileSelected } from '../../redux/selectors';\nimport { useParamSelector } from '../../redux/store';\nimport { DndEntryState, FileEntryProps } from '../../types/file-list.types';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { FileHelper } from '../../util/file-helper';\nimport { makeGlobalChonkyStyles } from '../../util/styles';\nimport { ClickableWrapper, ClickableWrapperProps } from '../internal/ClickableWrapper';\nimport { CompactEntry } from './CompactEntry';\nimport { DnDFileEntry } from './DnDFileEntry';\nimport { useFileClickHandlers } from './FileEntry-hooks';\nimport { GridEntry } from './GridEntry';\nimport { ListEntry } from './ListEntry';\n\nexport interface SmartFileEntryProps {\n    fileId: Nullable<string>;\n    displayIndex: number;\n    fileViewMode: FileViewMode;\n}\n\nconst disabledDndState: DndEntryState = {\n    dndIsDragging: false,\n    dndIsOver: false,\n    dndCanDrop: false,\n};\n\nexport const SmartFileEntry: React.FC<SmartFileEntryProps> = React.memo(({ fileId, displayIndex, fileViewMode }) => {\n    const classes = useStyles();\n\n    // Basic properties\n    const file = useParamSelector(selectFileData, fileId);\n    const selected = useParamSelector(selectIsFileSelected, fileId);\n    const dndDisabled = useSelector(selectIsDnDDisabled);\n\n    // Clickable wrapper properties\n    const fileClickHandlers = useFileClickHandlers(file, displayIndex);\n    const [focused, setFocused] = useState(false);\n    const clickableWrapperProps: ClickableWrapperProps = {\n        wrapperTag: 'div',\n        passthroughProps: { className: classes.fileEntryClickableWrapper },\n        ...(FileHelper.isClickable(file) ? fileClickHandlers : undefined),\n        setFocused,\n    };\n\n    // File entry properties\n    const fileEntryProps: Omit<FileEntryProps, 'dndState'> = {\n        file,\n        selected,\n        focused,\n    };\n\n    let EntryComponent: React.FC<FileEntryProps>;\n    if (fileViewMode === FileViewMode.List) EntryComponent = ListEntry;\n    else if (fileViewMode === FileViewMode.Compact) EntryComponent = CompactEntry;\n    else EntryComponent = GridEntry;\n\n    return dndDisabled ? (\n        <ClickableWrapper {...clickableWrapperProps}>\n            <EntryComponent {...fileEntryProps} dndState={disabledDndState} />\n        </ClickableWrapper>\n    ) : (\n        <DnDFileEntry file={file}>\n            {dndState => (\n                <ClickableWrapper {...clickableWrapperProps}>\n                    <EntryComponent {...fileEntryProps} dndState={dndState} />\n                </ClickableWrapper>\n            )}\n        </DnDFileEntry>\n    );\n});\nSmartFileEntry.displayName = 'SmartFileEntry';\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileEntryClickableWrapper: {\n        // We disable default browser outline because Chonky provides its own outline\n        // (which doesn't compromise accessibility, hopefully)\n        outline: 'none !important',\n        position: 'relative',\n        height: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { VariableSizeGrid } from 'react-window';\n\nimport { ChonkyActions } from '../../action-definitions';\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewConfigGrid } from '../../types/file-view.types';\nimport { RootState } from '../../types/redux.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeGlobalChonkyStyles, useIsMobileBreakpoint } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListGridProps {\n    width: number;\n    height: number;\n}\n\ninterface GridConfig {\n    rowCount: number;\n    columnCount: number;\n    gutter: number;\n    rowHeight: number;\n    columnWidth: number;\n}\n\nexport const isMobileDevice = () => {\n    // noinspection JSDeprecatedSymbols\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n};\n\nexport const getGridConfig = (\n    width: number,\n    fileCount: number,\n    viewConfig: FileViewConfigGrid,\n    isMobileBreakpoint: boolean\n): GridConfig => {\n    const gutter = isMobileBreakpoint ? 5 : 8;\n    const scrollbar = isMobileDevice() ? 0 : 18;\n\n    let columnCount: number;\n    let columnWidth: number;\n    if (isMobileBreakpoint) {\n        columnCount = 2;\n        columnWidth = (width - gutter - scrollbar) / columnCount;\n    } else {\n        columnWidth = viewConfig.entryWidth;\n        columnCount = Math.max(1, Math.floor((width - scrollbar) / (columnWidth + gutter)));\n    }\n\n    const rowCount = Math.ceil(fileCount / columnCount);\n\n    return {\n        rowCount,\n        columnCount,\n        gutter,\n        rowHeight: viewConfig.entryHeight,\n        columnWidth,\n    };\n};\n\nexport const GridContainer: React.FC<FileListGridProps> = React.memo(props => {\n    const { width, height } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig) as FileViewConfigGrid;\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const fileCount = useMemo(() => displayFileIds.length, [displayFileIds]);\n\n    const gridRef = useRef<VariableSizeGrid>();\n    const isMobileBreakpoint = useIsMobileBreakpoint();\n\n    // Whenever the grid config changes at runtime, we call a method on the\n    // `VariableSizeGrid` handle to reset column width/row height cache.\n    // !!! Note that we deliberately update the `gridRef` firsts and update the React\n    //     state AFTER that. This is needed to avoid file entries jumping up/down.\n    const [gridConfig, setGridConfig] = useState(getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint));\n    const gridConfigRef = useRef(gridConfig);\n    useEffect(() => {\n        const oldConf = gridConfigRef.current;\n        const newConf = getGridConfig(width, fileCount, viewConfig, isMobileBreakpoint);\n\n        gridConfigRef.current = newConf;\n        if (gridRef.current) {\n            if (oldConf.rowCount !== newConf.rowCount) {\n                gridRef.current.resetAfterRowIndex(Math.min(oldConf.rowCount, newConf.rowCount) - 1);\n            }\n            if (oldConf.columnCount !== newConf.columnCount) {\n                gridRef.current.resetAfterColumnIndex(Math.min(oldConf.columnCount, newConf.rowCount) - 1);\n            }\n            if (oldConf.columnWidth !== newConf.columnWidth) {\n                gridRef.current.resetAfterIndices({ columnIndex: 0, rowIndex: 0 });\n            }\n        }\n\n        setGridConfig(newConf);\n    }, [setGridConfig, gridConfigRef, isMobileBreakpoint, width, viewConfig, fileCount]);\n\n    const sizers = useMemo(() => {\n        const gc = gridConfigRef;\n        return {\n            getColumnWidth: (index: number) =>\n                gc.current.columnWidth! + (index === gc.current.columnCount - 1 ? 0 : gc.current.gutter),\n            getRowHeight: (index: number) =>\n                gc.current.rowHeight + (index === gc.current.rowCount - 1 ? 0 : gc.current.gutter),\n        };\n    }, [gridConfigRef]);\n\n    const displayFileIdsRef = useInstanceVariable(useSelector(selectors.getDisplayFileIds));\n    const getItemKey = useCallback(\n        (data: { columnIndex: number; rowIndex: number; data: any }) => {\n            const index = data.rowIndex * gridConfigRef.current.columnCount + data.columnIndex;\n\n            return displayFileIdsRef.current[index] ?? `loading-file-${index}`;\n        },\n        [gridConfigRef, displayFileIdsRef]\n    );\n\n    const cellRenderer = useCallback(\n        (data: { rowIndex: number; columnIndex: number; style: CSSProperties }) => {\n            const gc = gridConfigRef;\n            const index = data.rowIndex * gc.current.columnCount + data.columnIndex;\n            const fileId = displayFileIds[index];\n            if (displayFileIds[index] === undefined) return null;\n\n            const styleWithGutter: CSSProperties = {\n                ...data.style,\n                paddingRight: data.columnIndex === gc.current.columnCount - 1 ? 0 : gc.current.gutter,\n                paddingBottom: data.rowIndex === gc.current.rowCount - 1 ? 0 : gc.current.gutter,\n                boxSizing: 'border-box',\n            };\n\n            return (\n                <div style={styleWithGutter}>\n                    <SmartFileEntry fileId={fileId ?? null} displayIndex={index} fileViewMode={viewConfig.mode} />\n                </div>\n            );\n        },\n        [displayFileIds, viewConfig.mode]\n    );\n\n    const classes = useStyles();\n    const gridComponent = useMemo(() => {\n        return (\n            <VariableSizeGrid\n                ref={gridRef as any}\n                className={classes.gridContainer}\n                estimatedRowHeight={gridConfig.rowHeight + gridConfig.gutter}\n                rowHeight={sizers.getRowHeight}\n                estimatedColumnWidth={gridConfig.columnWidth + gridConfig.gutter}\n                columnWidth={sizers.getColumnWidth}\n                columnCount={gridConfig.columnCount}\n                height={height}\n                rowCount={gridConfig.rowCount}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {cellRenderer}\n            </VariableSizeGrid>\n        );\n    }, [\n        classes.gridContainer,\n        gridConfig.rowHeight,\n        gridConfig.gutter,\n        gridConfig.columnWidth,\n        gridConfig.columnCount,\n        gridConfig.rowCount,\n        sizers.getRowHeight,\n        sizers.getColumnWidth,\n        height,\n        width,\n        getItemKey,\n        cellRenderer,\n    ]);\n\n    return gridComponent;\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    gridContainer: {},\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { CSSProperties, useCallback, useMemo, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FixedSizeList } from 'react-window';\n\nimport { selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { useInstanceVariable } from '../../util/hooks-helpers';\nimport { makeLocalChonkyStyles } from '../../util/styles';\nimport { SmartFileEntry } from './FileEntry';\n\nexport interface FileListListProps {\n    width: number;\n    height: number;\n}\n\nexport const ListContainer: React.FC<FileListListProps> = React.memo(props => {\n    const { width, height } = props;\n\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const listRef = useRef<FixedSizeList>();\n\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const displayFileIdsRef = useInstanceVariable(displayFileIds);\n    const getItemKey = useCallback(\n        (index: number) => displayFileIdsRef.current[index] ?? `loading-file-${index}`,\n        [displayFileIdsRef]\n    );\n\n    const classes = useStyles();\n    const listComponent = useMemo(() => {\n        // When entry size is null, we use List view\n        const rowRenderer = (data: { index: number; style: CSSProperties }) => {\n            return (\n                <div style={data.style}>\n                    <SmartFileEntry\n                        fileId={displayFileIds[data.index] ?? null}\n                        displayIndex={data.index}\n                        fileViewMode={FileViewMode.List}\n                    />\n                </div>\n            );\n        };\n\n        return (\n            <FixedSizeList\n                ref={listRef as any}\n                className={classes.listContainer}\n                itemSize={viewConfig.entryHeight}\n                height={height}\n                itemCount={displayFileIds.length}\n                width={width}\n                itemKey={getItemKey}\n            >\n                {rowRenderer}\n            </FixedSizeList>\n        );\n    }, [\n        classes.listContainer,\n        viewConfig.entryHeight,\n        height,\n        displayFileIds,\n        width,\n        getItemKey,\n    ]);\n\n    return listComponent;\n});\n\nconst useStyles = makeLocalChonkyStyles(theme => ({\n    listContainer: {\n        borderTop: `solid 1px ${theme.palette.divider}`,\n    },\n}));\n","import React, { UIEvent, useCallback, useContext, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { ChonkyActions } from '../../action-definitions/index';\nimport { selectCurrentFolder, selectFileViewConfig, selectors } from '../../redux/selectors';\nimport { FileViewMode } from '../../types/file-view.types';\nimport { ChonkyIconName } from '../../types/icons.types';\nimport { useFileDrop } from '../../util/dnd';\nimport { ChonkyIconContext } from '../../util/icon-helper';\nimport {\n    c, getStripeGradient, makeGlobalChonkyStyles, makeLocalChonkyStyles\n} from '../../util/styles';\nimport { FileListEmpty } from './FileListEmpty';\nimport { GridContainer } from './GridContainer';\nimport { ListContainer } from './ListContainer';\n\nexport interface FileListProps {\n    onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n}\n\ninterface StyleState {\n    dndCanDrop: boolean;\n    dndIsOverCurrent: boolean;\n}\n\nexport const FileList: React.FC<FileListProps> = React.memo((props: FileListProps) => {\n    const displayFileIds = useSelector(selectors.getDisplayFileIds);\n    const viewConfig = useSelector(selectFileViewConfig);\n\n    const currentFolder = useSelector(selectCurrentFolder);\n    const { drop, dndCanDrop, dndIsOverCurrent } = useFileDrop({ file: currentFolder });\n    const styleState = useMemo<StyleState>(() => ({ dndCanDrop, dndIsOverCurrent }), [dndCanDrop, dndIsOverCurrent]);\n\n    const localClasses = useLocalStyles(styleState);\n    const classes = useStyles(viewConfig);\n    const { onScroll } = props;\n\n    // In Chonky v0.x, this field was user-configurable. In Chonky v1.x+, we hardcode\n    // this to `true` to simplify configuration. Users can just wrap Chonky in their\n    // own `div` if they want to have finer control over the height.\n    const fillParentContainer = true;\n\n    const listRenderer = useCallback(\n        ({ width, height }: { width: number; height: number }) => {\n            if (displayFileIds.length === 0) {\n                return <FileListEmpty width={width} height={viewConfig.entryHeight} />;\n            } else if (viewConfig.mode === FileViewMode.List) {\n                return <ListContainer width={width} height={height} />;\n            } else {\n                return <GridContainer width={width} height={height} />;\n            }\n        },\n        [displayFileIds, viewConfig]\n    );\n\n    const ChonkyIcon = useContext(ChonkyIconContext);\n    return (\n        <div onScroll={onScroll} ref={drop} className={c([classes.fileListWrapper, localClasses.fileListWrapper])} role=\"list\">\n            <div className={localClasses.dndDropZone}>\n                <div className={localClasses.dndDropZoneIcon}>\n                    <ChonkyIcon icon={dndCanDrop ? ChonkyIconName.dndCanDrop : ChonkyIconName.dndCannotDrop} />\n                </div>\n            </div>\n            <AutoSizer disableHeight={!fillParentContainer}>{listRenderer}</AutoSizer>\n        </div>\n    );\n});\nFileList.displayName = 'FileList';\n\nconst useLocalStyles = makeLocalChonkyStyles(theme => ({\n    fileListWrapper: {\n        minHeight: ChonkyActions.EnableGridView.fileViewConfig.entryHeight + 2,\n        background: (state: StyleState) =>\n            state.dndIsOverCurrent && state.dndCanDrop\n                ? state.dndCanDrop\n                    ? getStripeGradient(theme.dnd.fileListCanDropMaskOne, theme.dnd.fileListCanDropMaskTwo)\n                    : getStripeGradient(theme.dnd.fileListCannotDropMaskOne, theme.dnd.fileListCannotDropMaskTwo)\n                : 'none',\n    },\n    dndDropZone: {\n        display: (state: StyleState) =>\n            // When we cannot drop, we don't show an indicator at all\n            state.dndIsOverCurrent && state.dndCanDrop ? 'block' : 'none',\n        borderRadius: theme.gridFileEntry.borderRadius,\n        pointerEvents: 'none',\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: 2,\n    },\n    dndDropZoneIcon: {\n        backgroundColor: (state: StyleState) => (state.dndCanDrop ? theme.dnd.canDropMask : theme.dnd.cannotDropMask),\n        color: (state: StyleState) => (state.dndCanDrop ? theme.dnd.canDropColor : theme.dnd.cannotDropColor),\n        borderRadius: theme.gridFileEntry.borderRadius,\n        transform: 'translateX(-50%) translateY(-50%)',\n        position: 'absolute',\n        textAlign: 'center',\n        lineHeight: '60px',\n        fontSize: '2em',\n        left: '50%',\n        height: 60,\n        top: '50%',\n        width: 60,\n    },\n}));\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    fileListWrapper: {\n        height: '100%',\n        maxHeight: '100%',\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React, { ReactElement, useEffect, useMemo } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Menu from '@material-ui/core/Menu';\n\nimport { reduxActions } from '../../redux/reducers';\nimport { selectContextMenuConfig, selectContextMenuItems } from '../../redux/selectors';\nimport { getI18nId, I18nNamespace } from '../../util/i18n';\nimport { important, makeGlobalChonkyStyles } from '../../util/styles';\nimport { useContextMenuDismisser } from './FileContextMenu-hooks';\nimport { SmartToolbarDropdownButton } from './ToolbarDropdownButton';\n\nexport interface FileContextMenuProps {}\n\nexport const FileContextMenu: React.FC<FileContextMenuProps> = React.memo(() => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(reduxActions.setContextMenuMounted(true));\n        return () => {\n            dispatch(reduxActions.setContextMenuMounted(false));\n        };\n    }, [dispatch]);\n\n    const intl = useIntl();\n    const browserMenuShortcutString = intl.formatMessage(\n        {\n            id: getI18nId(I18nNamespace.FileContextMenu, 'browserMenuShortcut'),\n            defaultMessage: 'Browser menu: {shortcut}',\n        },\n        { shortcut: <strong>Alt + Right Click</strong> }\n    );\n\n    const contextMenuConfig = useSelector(selectContextMenuConfig);\n    const contextMenuItems = useSelector(selectContextMenuItems);\n\n    const hideContextMenu = useContextMenuDismisser();\n    const contextMenuItemComponents = useMemo(() => {\n        const components: ReactElement[] = [];\n        for (let i = 0; i < contextMenuItems.length; ++i) {\n            const item = contextMenuItems[i];\n\n            if (typeof item === 'string') {\n                components.push(\n                    <SmartToolbarDropdownButton\n                        key={`context-menu-item-${item}`}\n                        fileActionId={item}\n                        onClickFollowUp={hideContextMenu}\n                    />\n                );\n            } else {\n                item.fileActionIds.map(id =>\n                    components.push(\n                        <SmartToolbarDropdownButton\n                            key={`context-menu-item-${item.name}-${id}`}\n                            fileActionId={id}\n                            onClickFollowUp={hideContextMenu}\n                        />\n                    )\n                );\n            }\n        }\n        return components;\n    }, [contextMenuItems, hideContextMenu]);\n\n    const anchorPosition = useMemo(\n        () => (contextMenuConfig ? { top: contextMenuConfig.mouseY, left: contextMenuConfig.mouseX } : undefined),\n        [contextMenuConfig]\n    );\n\n    const classes = useStyles();\n    return (\n        <Menu\n            elevation={2}\n            disablePortal\n            onClose={hideContextMenu}\n            transitionDuration={150}\n            open={!!contextMenuConfig}\n            anchorPosition={anchorPosition}\n            anchorReference=\"anchorPosition\"\n            classes={{ list: classes.contextMenuList }}\n        >\n            {contextMenuItemComponents}\n            <ListSubheader component=\"div\" className={classes.browserMenuTooltip}>\n                {browserMenuShortcutString}\n            </ListSubheader>\n        </Menu>\n    );\n});\n\nconst useStyles = makeGlobalChonkyStyles(() => ({\n    contextMenuList: {\n        paddingBottom: important(0),\n        paddingTop: important(0),\n    },\n    browserMenuTooltip: {\n        lineHeight: important('30px'),\n        fontSize: important('0.7em'),\n    },\n}));\n","/**\n * @author Timur Kuzhagaliyev <tim.kuzh@gmail.com>\n * @copyright 2020\n * @license MIT\n */\n\nimport React from 'react';\n\nimport { FileBrowserHandle, FileBrowserProps } from '../../types/file-browser.types';\nimport { FileList } from '../file-list/FileList';\nimport { FileBrowser } from './FileBrowser';\nimport { FileContextMenu } from './FileContextMenu';\nimport { FileNavbar } from './FileNavbar';\nimport { FileToolbar } from './FileToolbar';\n\nexport const FullFileBrowser = React.memo(\n    React.forwardRef<FileBrowserHandle, FileBrowserProps>((props, ref) => {\n        const { onScroll } = props\n        return (\n            <FileBrowser ref={ref} {...props}>\n                <FileNavbar />\n                <FileToolbar />\n                <FileList onScroll={onScroll}/>\n                <FileContextMenu/>\n            </FileBrowser>\n        );\n    })\n);\nFullFileBrowser.displayName = 'FullFileBrowser';\n","/**\n *\n */\n\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { ChonkyActions } from '../action-definitions';\nimport { FileActionData } from '../types/action-handler.types';\nimport { FileAction } from '../types/action.types';\nimport { FileArray, FileData } from '../types/file.types';\nimport { FileHelper } from '../util/file-helper';\n\nexport interface CustomFileData extends FileData {\n    parentId?: string;\n    childrenIds?: string[];\n}\nexport interface CustomFileMap<FT extends CustomFileData> {\n    [fileId: string]: FT;\n}\nexport interface FileMapParams<FT extends CustomFileData> {\n    baseFileMap: CustomFileMap<FT>;\n    initialFolderId: string;\n}\n\nexport const useFolderChain = <FT extends CustomFileData>(\n    fileMap: CustomFileMap<FT>,\n    currentFolderId: string\n): FileArray<FT> => {\n    return useMemo(() => {\n        const currentFolder = fileMap[currentFolderId];\n\n        const folderChain = [currentFolder];\n\n        let parentId = currentFolder.parentId;\n        while (parentId) {\n            const parentFile = fileMap[parentId];\n            if (parentFile) {\n                folderChain.unshift(parentFile);\n                parentId = parentFile.parentId;\n            } else {\n                break;\n            }\n        }\n\n        return folderChain;\n    }, [currentFolderId, fileMap]);\n};\n\nexport const useFiles = <FT extends CustomFileData>(\n    fileMap: CustomFileMap<FT>,\n    currentFolderId: string\n): FileArray<FT> => {\n    return useMemo(() => {\n        const currentFolder = fileMap[currentFolderId];\n        const childrenIds = currentFolder.childrenIds!;\n        const files = childrenIds.map((fileId: string) => fileMap[fileId]);\n        return files;\n    }, [currentFolderId, fileMap]);\n};\n\nexport const useFileMapMethods = <FT extends CustomFileData>(\n    baseFileMap: CustomFileMap<FT>,\n    initialFolderId: string\n) => {\n    const [fileMap, setFileMap] = useState(baseFileMap);\n    const [currentFolderId, setCurrentFolderId] = useState(initialFolderId);\n    const resetFileMap = useCallback(() => {\n        setFileMap(baseFileMap);\n        setCurrentFolderId(initialFolderId);\n    }, [baseFileMap, initialFolderId]);\n    const moveFiles = useCallback(\n        (files: FT[], source: FT, destination: FT) =>\n            setFileMap(currentFileMap => {\n                const newFileMap = { ...currentFileMap };\n                const moveFileIds = new Set(files.map(f => f.id));\n\n                // Delete files from their source folder.\n                const newSourceChildrenIds = source.childrenIds!.filter(id => !moveFileIds.has(id));\n                newFileMap[source.id] = {\n                    ...source,\n                    childrenIds: newSourceChildrenIds,\n                    childrenCount: newSourceChildrenIds.length,\n                };\n\n                // Add the files to their destination folder.\n                const newDestinationChildrenIds = [...destination.childrenIds!, ...files.map(f => f.id)];\n                newFileMap[destination.id] = {\n                    ...destination,\n                    childrenIds: newDestinationChildrenIds,\n                    childrenCount: newDestinationChildrenIds.length,\n                };\n\n                // Finally, update the parent folder ID on the files from source folder\n                // ID to the destination folder ID.\n                files.forEach(file => {\n                    newFileMap[file.id] = {\n                        ...file,\n                        parentId: destination.id,\n                    };\n                });\n\n                return newFileMap;\n            }),\n        []\n    );\n\n    const methods = useMemo(\n        () => ({\n            setFileMap,\n            setCurrentFolderId,\n            resetFileMap,\n            moveFiles,\n        }),\n        [setFileMap, setCurrentFolderId, resetFileMap, moveFiles]\n    );\n    return {\n        fileMap,\n        currentFolderId,\n        methods,\n    };\n};\nexport type FileMethods = ReturnType<typeof useFileMapMethods>['methods'];\n\nexport const useFileActionHandler = (methods: FileMethods) => {\n    return useCallback(\n        (data: FileActionData<FileAction>) => {\n            if (data.id === ChonkyActions.OpenFiles.id) {\n                const { targetFile, files } = data.payload;\n                const fileToOpen = targetFile ?? files[0];\n                if (fileToOpen && FileHelper.isDirectory(fileToOpen)) {\n                    methods.setCurrentFolderId(fileToOpen.id);\n                }\n            } else if (data.id === ChonkyActions.MoveFiles.id) {\n                methods.moveFiles(data.payload.files, data.payload.source!, data.payload.destination);\n            }\n        },\n        [methods]\n    );\n};\n\nexport const useFileMap = <FT extends CustomFileData = CustomFileData>({\n    baseFileMap,\n    initialFolderId,\n}: FileMapParams<FT>) => {\n    const { fileMap, currentFolderId, methods } = useFileMapMethods(baseFileMap, initialFolderId);\n    const folderChain = useFolderChain(fileMap, currentFolderId);\n    const files = useFiles(fileMap, currentFolderId);\n    const fileActionHandler = useFileActionHandler(methods as FileMethods);\n\n    const data = {\n        fileMap,\n        currentFolderId,\n        folderChain,\n        files,\n    };\n    return { data, methods, fileActionHandler };\n};\n"],"names":["useDebounce","value","delay","_useState","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","UNINITIALIZED_SENTINEL","useStaticValue","factory","valueRef","useRef","current","useInstanceVariable","ref","Logger","error","args","Array","_len","_key","arguments","_console","console","apply","concat","warn","_len2","_key2","_console2","debug","_len3","_key3","_console3","formatBullets","bullets","join","FileHelper","isDirectory","file","isDir","isHidden","isSymlink","isEncrypted","isClickable","isOpenable","openable","isSelectable","selectable","isDraggable","draggable","isDroppable","droppable","isDndOpenable","dndOpenable","getModDate","modDate","undefined","parseDate","maybeDate","Date","message","isNaN","getTime","getChildrenCount","childrenCount","sanitizeInputArray","mode","rawArray","sanitizedFiles","errorMessages","isArray","push","nonObjectFileCount","missingFieldFileCount","seenIds","Set","duplicateIds","i","length","item","id","name","has","add","size","repeatedIdsString","from","errorMessageString","arrayString","itemString","sanitizedArray","OptionIds","ShowHiddenFiles","ShowFoldersFirst","DarkMode","SortOrder","selectInstanceId","state","instanceId","selectExternalFileActionHandler","externalFileActionHandler","selectFileActionMap","fileActionMap","selectFileActionIds","fileActionIds","selectFileActionData","fileActionId","selectToolbarItems","toolbarItems","selectContextMenuItems","contextMenuItems","selectFolderChain","folderChain","selectCurrentFolder","currentFolder","selectParentFolder","parentFolder","selectRawFiles","rawFiles","selectFileMap","fileMap","selectCleanFileIds","cleanFileIds","selectFileData","fileId","selectHiddenFileIdMap","hiddenFileIdMap","selectHiddenFileCount","Object","keys","selectFocusSearchInput","focusSearchInput","selectSearchString","searchString","selectSelectionMap","selectionMap","selectSelectedFileIds","selectSelectionSize","selectIsFileSelected","selectSelectedFiles","map","selectSelectedFilesForAction","action","requiresSelection","getSelectedFiles","fileFilter","selectSelectedFilesForActionCount","_getSelectedFilesForA","getSelectedFilesForAction","selectDisableSelection","disableSelection","selectFileViewConfig","fileViewConfig","selectSortActionId","sortActionId","selectSortOrder","sortOrder","selectOptionMap","optionMap","selectOptionValue","optionId","selectThumbnailGenerator","thumbnailGenerator","selectDoubleClickDelay","doubleClickDelay","selectIsDnDDisabled","disableDragAndDrop","selectClearSelectionOnOutsideClick","clearSelectionOnOutsideClick","selectContextMenuMounted","contextMenuMounted","selectContextMenuConfig","contextMenuConfig","selectContextMenuTriggerFile","config","triggerFileId","_fileMap$config$trigg","getFileActionMap","getOptionMap","getFileMap","getFileIds","fileIds","getCleanFileIds","getSortActionId","getSortOrder","getSearchString","_getLastClick","lastClick","makeGetAction","fileActionSelector","createSelector","makeGetOptionValue","defaultValue","makeGetFiles","fileIdsSelector","getSortedFileIds","files","sortAction","showFolderFirst","prepareSortKeySelector","selector","sortFunctions","desc","sortKeySelector","_sortFunctions$push","configKeyName","ASC","sortedFileIds","sort","by","getSearcher","cleanFiles","FuzzySearch","caseSensitive","getSearchFilteredFileIds","searcher","search","f","getHiddenFileIdMap","searchFilteredFileIds","showHiddenFiles","searchFilteredFileIdsSet","forEach","getDisplayFileIds","filter","getLastClickIndex","displayFileIds","index","selectors","getFileData","getIsFileSelected","selectedFiles","filters","filteredSelectedFiles","reduce","prevFiles","mergeFileActionsArrays","seenActionIds","addToSeen","a","wasNotSeen","fileActionArrays","duplicateFreeArrays","arr","duplicateFreeArray","_Array","thunkUpdateRawFileActions","rawFileActions","disableDefaultFileActions","dispatch","_sanitizeInputArray","defaultActionsToAdd","disabledActionIds","DefaultFileActions","fileActions","EssentialFileActions","optionDefaults","option","reduxActions","setRawFileActions","setFileActionsErrorMessages","setFileActions","setOptionDefaults","thunkUpdateToolbarNContextMenuItems","excludedToolbarFileActionIds","ChonkyActions","OpenParentFolder","seenToolbarGroups","seenContextMenuGroups","getGroup","itemArray","seenMap","groupName","group","_iterator","_createForOfIteratorHelperLoose","_step","done","button","toolbar","contextMenu","updateFileActionMenuItems","thunkUpdateDefaultFileViewActionId","getState","_getState","setFileViewConfig","thunkActivateSortAction","_getState2","oldActionId","oldOrder","order","DESC","setSort","actionId","thunkApplySelectionTransform","selectionTransform","prevSelection","hiddenFileIds","newSelection","clearSelection","selectFiles","reset","thunkDispatchFileAction","data","_dispatch","Promise","resolve","thunkRequestFileAction","payload","selectedFilesForAction","contextMenuTriggerFile","actionState","toggleOption","effect","maybeEffectPromise","reduxDispatch","getReduxState","then","effectResult","triggerDispatchAfterEffect","preventDispatch","FileViewMode","ChonkyIconName","defineFileAction","__payloadType","hotkeys","errorMessage","Error","findElementAmongAncestors","maybeElement","predicate","parentElement","elementIsInsideButton","buttonCandidate","element","tagName","toLowerCase","getValueOrFallback","fallback","desiredType","reduxThunks","selectRange","params","fileIdsToSelect","slice","rangeStart","rangeEnd","EssentialActions","MouseClickFile","_ref","clickType","OpenFiles","targetFile","ctrlKey","toggleSelection","exclusive","setLastClickIndex","fileDisplayIndex","shiftKey","lastClickIndex","_ref2","KeyboardClickFile","_ref3","enterKey","spaceKey","StartDragNDrop","_ref4","draggedFile","EndDragNDrop","_ref5","destination","droppedFiles","MoveFiles","_extends","ChangeSelection","icon","openParentFolder","iconOnly","_ref6","OpenFileContextMenu","_ref7","triggerFile","fileSelected","showContextMenu","mouseX","clientX","mouseY","clientY","DefaultActions","OpenSelection","openFiles","SelectAllFiles","selectAllFiles","ClearSelection","EnableListView","List","entryHeight","list","EnableCompactView","Compact","entryWidth","compact","EnableGridView","Grid","smallThumbnail","SortFilesByName","SortFilesBySize","SortFilesByDate","ToggleHiddenFiles","ToggleShowFoldersFirst","FocusSearchInput","ToggleDarkMode","ExtraActions","CopyFiles","copy","CreateFolder","tooltip","folderCreate","UploadFiles","upload","DownloadFiles","download","DeleteFiles","trash","initialRootState","fileActionsErrorMessages","rawFolderChain","folderChainErrorMessages","filesErrorMessages","searchMode","reducers","setExternalFileActionHandler","_action$payload","_action$payload2","setRawFolderChain","setRawFiles","_sanitizeInputArray2","_i","_Object$keys","selectedFileId","setSortedFileIds","setHiddenFileIds","_i2","_Object$keys2","setFocusSearchInput","setSearchString","oldValue","setSelectionDisabled","_i3","_Object$keys3","setThumbnailGenerator","setDoubleClickDelay","setDisableDragAndDrop","setClearSelectionOnOutsideClick","setContextMenuMounted","hideContextMenu","_createSlice","createSlice","initialState","actions","rootReducer","reducer","useStoreWatchers","store","selectionWatcher","watch","onSelectionChange","oldSelection","selectedFilesIds","selection","unsubscribeCallbacks","subscribe","_unsubscribeCallbacks","unsubscribe","useChonkyStore","chonkyInstanceId","preloadedState","configureStore","middleware","getDefaultMiddleware","serializableCheck","devTools","useParamSelector","parametrizedSelector","selectorParams","useCallback","useSelector","useDTE","actionCreator","useDispatch","usePropReduxUpdate","ChonkyIconPlaceholder","title","React","defaultConfig","onFileAction","disableDragAndDropProvider","defaultSortActionId","defaultFileViewActionId","iconComponent","darkMode","i18n","setChonkyDefaults","key","I18nNamespace","getI18nId","namespace","stringId","getActionI18nId","FileActions","useLocalizedFileActionGroup","intl","useIntl","useMemo","formatMessage","FileActionGroups","defaultMessage","useLocalizedFileActionStrings","buttonName","buttonTooltip","_action$button","_action$button2","_action$button3","useLocalizedFileEntryStrings","formatters","useContext","ChonkyFormattersContext","fileModDateString","formatFileModDate","fileSizeString","formatFileSize","defaultFormatters","safeModDate","formatDate","dateStyle","timeStyle","_intl","sizeData","filesize","bits","output","symbol","Math","round","createContext","ChonkyIconContext","VideoExtensions","ImageExtensions","AudioExtensions","ColorsLight","ColorsDark","getIconTrie","colourIndex","step","IconsToExtensions","license","model","database","text","archive","image","video","code","info","lock","music","terminal","users","linux","ubuntu","windows","rust","python","nodejs","php","git","adobe","pdf","excel","word","flash","exactTrie","ExactTrie","ignoreCase","_IconsToExtensions","pair","extensions","colorCode","iconData","put","iconTrie","useIconData","loading","folder","match","getWithCheckpoints","lightTheme","colors","debugRed","debugBlue","debugGreen","debugPurple","debugYellow","textActive","fontSizes","rootPrimary","margins","rootLayoutMargin","lineHeight","fontSize","buttonRadius","dnd","canDropColor","cannotDropColor","canDropMask","cannotDropMask","fileListCanDropMaskOne","fileListCanDropMaskTwo","fileListCannotDropMaskOne","fileListCannotDropMaskTwo","dragLayer","border","padding","borderRadius","fileList","desktopGridGutter","mobileGridGutter","gridFileEntry","childrenCountSize","iconColorFocused","iconSize","iconColor","fileColorTint","folderBackColorTint","folderFrontColorTint","listFileEntry","propertyFontSize","iconFontSize","iconBorderRadius","darkThemeOverride","mobileThemeOverride","useIsMobileBreakpoint","useMediaQuery","getStripeGradient","colorOne","colorTwo","makeLocalChonkyStyles","styles","createUseStyles","makeGlobalChonkyStyles","makeStyles","selectorMapping","makeGlobalStyles","theme","localStyles","globalStyles","localSelectors","localSelector","globalSelector","jssSelector","useStyles","classes","important","c","classnames","useFileBrowserHandle","useStore","useImperativeHandle","getFileSelection","selectionSet","setFileSelection","requestFileAction","ChonkyBusinessLogicInner","memo","forwardRef","props","_props$files","displayName","ChonkyBusinessLogic","useDndContextAvailable","dndContext","DndContext","dragDropManager","useDragIfAvailable","dndContextAvailable","mockHook","useHook","useDrag","useDropIfAvailable","useDrop","findClosestChonkyFileId","fileEntryWrapperDiv","dataset","chonkyFileId","useContextMenuTrigger","contextMenuMountedRef","event","altKey","preventDefault","target","useContextMenuDismisser","ChonkyDndFileEntryType","layerStyles","position","pointerEvents","zIndex","left","top","width","height","getItemStyles","initialCursorOffset","initialFileOffset","currentFileOffset","display","x","y","transform","WebkitTransform","DnDFileListDragLayer","_useDragLayer","useDragLayer","monitor","getItem","itemType","getItemType","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","isDragging","selectionSize","style","className","fileDragPreview","boxShadow","palette","divider","backgroundColor","background","color","primary","HotkeyListener","fileAction","hotkeysStr","hotkeyCallback","unbind","ChonkyPresentationLayer","children","dndDisabled","handleClickAway","hotkeyListenerComponents","ClickAwayListener","onClickAway","Box","chonkyRoot","onContextMenu","paper","touchAction","fontFamily","flexDirection","boxSizing","textAlign","webkitTouchCallout","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","FileBrowser","shortid","generate","isMobileBreakpoint","muiTheme","createMuiTheme","type","combinedTheme","merge","chonkyComps","IntlProvider","locale","defaultLocale","Provider","ReduxProvider","ThemeProvider","MuiThemeProvider","DndProvider","backend","HTML5Backend","useFolderChainItems","folderChainItems","items","_loop","disabled","onClick","useFileDrag","fileRef","getDndStartPayload","reduxState","sourceInstanceId","source","canDrag","onDragStart","onDragEnd","dropResult","getDropResult","dropTarget","dropEffect","collect","_useDragIfAvailable","begin","end","dndIsDragging","drag","preview","getEmptyImage","captureDraggingState","useFileDrop","forceDisableDrop","includeChildrenDrops","folderChainRef","onDrop","_item","canDrop","customDropResult","isOver","shallow","_item$payload","prohibitedFileIds","movedFiles","currFile","isOverCurrent","_useDropIfAvailable","accept","drop","_useDropIfAvailable$","dndIsOver","dndIsOverCurrent","dndCanDrop","useFileEntryDnD","_useFileDrag","_useFileDrop","dndState","useDndHoverOpen","currentFolderRef","timeout","_currentFolderRef$cur","getRandomInt","min","max","floor","random","TextPlaceholder","minLength","maxLength","placeholderLength","whitespace","repeat","textPlaceholder","dangerouslySetInnerHTML","__html","opacity","animationName","animationIterationCount","animationTimingFunction","animationDuration","whiteSpace","overflow","maxWidth","minWidth","useFileEntryHtmlProps","dataProps","role","useFileEntryState","selected","focused","_useThumbnailUrl","useThumbnailUrl","thumbnailUrl","thumbnailLoading","fileColor","iconSpin","useDndIcon","dndIconName","showDropIcon","dndCannotDrop","dndDragging","useModifierIconComponents","modifierIcons","hidden","symlink","ChonkyIcon","modifierIconComponents","_extname","fileName","parts","split","useFileNameComponent","extension","_file$ext","ext","substr","setThumbnailUrl","_useState2","setThumbnailLoading","loadingAttempts","loadingCancelled","useFileClickHandlers","displayIndex","onMouseClick","onKeyboardClick","onSingleClick","onDoubleClick","CustomVisibilityState","useFileActionTrigger","useFileActionProps","optionValue","_action$option","actionSelectionSize","actionSelectionEmpty","active","_action$button$icon","sortAsc","sortDesc","placeholder","toggleOn","toggleOff","isSortButtonAndCurrentSort","isFileViewButtonAndCurrentView","isOptionAndEnabled","customDisabled","customActive","customVisibility","Disabled","Active","ToolbarButton","externalClassName","dropdown","iconWithText","fallbackIcon","fixedWidth","_c","baseButton","iconOnlyButton","activeButton","Button","iconDropdown","textTransform","letterSpacing","paddingBottom","paddingTop","marginRight","marginLeft","marginTop","SmartToolbarButton","triggerAction","_useFileActionProps","_useLocalizedFileActi","Hidden","FolderChainButton","first","baseBreadcrumb","disabledBreadcrumb","currentBreadcrumb","folderChainIcon","buttonContainer","dndIndicator","textDecoration","FileNavbar","folderChainComponents","components","component","navbarWrapper","navbarContainer","Breadcrumbs","navbarBreadcrumbs","separator","upDirectoryButton","flexGrow","ToolbarDropdownButton","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","minHeight","SmartToolbarDropdownButton","onClickFollowUp","handleClick","ToolbarDropdown","_React$useState","anchor","setAnchor","currentTarget","handleClose","menuItemComponents","localizedName","Menu","autoFocus","keepMounted","elevation","anchorEl","onClose","open","Boolean","transitionDuration","dropdownList","ToolbarInfo","hiddenCount","fileCountString","Toolbar","fileCount","selectedString","hiddenString","infoContainer","Typography","infoText","variant","extraInfoSpan","selectionSizeText","hiddenCountText","ToolbarSearch","searchPlaceholderString","searchInputRef","reduxSearchString","localSearchString","setLocalSearchString","_useDebounce","debouncedLocalSearchString","showLoadingIndicator","setShowLoadingIndicator","focus","handleChange","handleKeyUp","blur","TextField","searchFieldContainer","onChange","inputRef","InputProps","onKeyUp","startAdornment","InputAdornment","searchIcon","spin","searchFieldInput","inputProps","searchFieldInputInner","margin","paddingLeft","FileToolbar","toolbarItemComponents","toolbarWrapper","toolbarContainer","toolbarLeft","toolbarRight","flexWrap","toolbarLeftFiller","FileListEmpty","emptyString","FileList","fileListEmpty","fileListEmptyContent","folderOpen","useClickHandler","counter","clickCount","clickTimeout","mouseClickEvent","metaKey","useKeyDownHandler","keyboardClickEvent","nativeEvent","stopPropagation","ClickableWrapper","WrapperTag","wrapperTag","passthroughProps","setFocused","handleKeyDown","compProps","onFocus","onBlur","onKeyDown","tabIndex","mergedProps","FileEntryName","fileNameComponent","hint","paddingRight","CompactEntry","entryState","_useLocalizedFileEntr","fileEntryHtmlProps","listFileEntryIcon","listFileEntryDescription","listFileEntryName","listFileEntryProperties","listFileEntryProperty","alignItems","DnDFileEntry","_useFileEntryDnD","fillParent","FileThumbnail","thumbnailStyle","backgroundImage","fileThumbnail","backgroundRepeat","backgroundPosition","backgroundSize","GridEntryDndIndicator","borderBottom","borderLeft","content","GridEntryPreviewFolder","folderClasses","useFolderStyles","fileClasses","useFileStyles","commonClasses","useCommonEntryStyles","previewFile","folderBackSideMid","folderBackSideTop","folderFrontSide","fileIcon","selectionIndicator","thumbnail","borderTopLeftRadius","borderTopRightRadius","right","borderRightColor","borderTopColor","borderBottomColor","borderLeftColor","borderWidth","borderStyle","bottom","shadows","GridEntryPreviewFile","_c2","focusIndicator","GridEntry","useFileEntryStyles","entryClassName","gridFileEntryPreview","gridFileEntryNameContainer","gridFileEntryName","wordBreak","ListEntry","styleState","listFileEntrySelection","textOverflow","flex","disabledDndState","SmartFileEntry","fileViewMode","fileClickHandlers","clickableWrapperProps","fileEntryClickableWrapper","fileEntryProps","EntryComponent","outline","isMobileDevice","window","orientation","navigator","userAgent","indexOf","getGridConfig","viewConfig","gutter","scrollbar","columnCount","columnWidth","rowCount","ceil","rowHeight","GridContainer","gridRef","gridConfig","setGridConfig","gridConfigRef","oldConf","newConf","resetAfterRowIndex","resetAfterColumnIndex","resetAfterIndices","columnIndex","rowIndex","sizers","gc","getColumnWidth","getRowHeight","displayFileIdsRef","getItemKey","_displayFileIdsRef$cu","cellRenderer","styleWithGutter","gridComponent","VariableSizeGrid","gridContainer","estimatedRowHeight","estimatedColumnWidth","itemKey","ListContainer","listRef","listComponent","rowRenderer","_displayFileIds$data$","FixedSizeList","listContainer","itemSize","itemCount","borderTop","localClasses","useLocalStyles","onScroll","fillParentContainer","listRenderer","fileListWrapper","dndDropZone","dndDropZoneIcon","AutoSizer","disableHeight","maxHeight","FileContextMenu","browserMenuShortcutString","shortcut","contextMenuItemComponents","anchorPosition","disablePortal","anchorReference","contextMenuList","ListSubheader","browserMenuTooltip","FullFileBrowser","useFolderChain","currentFolderId","parentId","parentFile","unshift","useFiles","childrenIds","useFileMapMethods","baseFileMap","initialFolderId","setFileMap","setCurrentFolderId","resetFileMap","moveFiles","currentFileMap","newFileMap","moveFileIds","newSourceChildrenIds","newDestinationChildrenIds","methods","useFileActionHandler","_data$payload","fileToOpen","useFileMap","_useFileMapMethods","fileActionHandler"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,WAAW,GAAG,SAAdA,WAAWA,CACpBC,KAAQ,EACRC,KAAa;EAEb,IAAAC,SAAA,GAA4CC,QAAQ,CAACH,KAAK,CAAC;IAApDI,cAAc,GAAAF,SAAA;IAAEG,iBAAiB,GAAAH,SAAA;EAExCI,SAAS,CAAC;IACN,IAAMC,OAAO,GAAGC,UAAU,CAAC;MACvBH,iBAAiB,CAACL,KAAK,CAAC;KAC3B,EAAEC,KAAK,CAAC;IAET,OAAO;MACHQ,YAAY,CAACF,OAAO,CAAC;KACxB;GACJ,EAAE,CAACP,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,OAAO,CAACG,cAAc,EAAEC,iBAAiB,CAAC;AAC9C,CAAC;AAED,IAAMK,sBAAsB,GAAG,EAAE;AAC1B,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAOC,OAAgB;EAC9C,IAAMC,QAAQ,GAAGC,MAAM,CAAIJ,sBAA2B,CAAC;EACvD,IAAIG,QAAQ,CAACE,OAAO,KAAKL,sBAAsB,EAAEG,QAAQ,CAACE,OAAO,GAAGH,OAAO,EAAE;EAC7E,OAAOC,QAAQ,CAACE,OAAO;AAC3B,CAAC;AAEM,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAOhB,KAAQ;EAC3C,IAAMiB,GAAG,GAAGH,MAAM,CAACd,KAAK,CAAC;EACzBM,SAAS,CAAC;IACNW,GAAG,CAACF,OAAO,GAAGf,KAAK;GACtB,EAAE,CAACiB,GAAG,EAAEjB,KAAK,CAAC,CAAC;EAChB,OAAOiB,GAAG;AACd,CAAC;;IClCYC,MAAM;EAAA,SAAAA;EAAAA,MAAA,CACDC,KAAK,GAAZ,SAAAA;;sCAAgBC,IAAW,OAAAC,KAAA,CAAAC,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;MAAXH,IAAW,CAAAG,IAAA,IAAAC,SAAA,CAAAD,IAAA;;;IAE9B,CAAAE,QAAA,GAAAC,OAAO,EAACP,KAAK,CAAAQ,KAAA,CAAAF,QAAA,GAAC,wBAAwB,EAAAG,MAAA,CAAKR,IAAI,EAAC;GACnD;EAAAF,MAAA,CAEaW,IAAI,GAAX,SAAAA;;uCAAeT,IAAW,OAAAC,KAAA,CAAAS,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAXX,IAAW,CAAAW,KAAA,IAAAP,SAAA,CAAAO,KAAA;;;IAE7B,CAAAC,SAAA,GAAAN,OAAO,EAACG,IAAI,CAAAF,KAAA,CAAAK,SAAA,GAAC,0BAA0B,EAAAJ,MAAA,CAAKR,IAAI,EAAC;GACpD;EAAAF,MAAA,CAEae,KAAK,GAAZ,SAAAA;;uCAAgBb,IAAW,OAAAC,KAAA,CAAAa,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAXf,IAAW,CAAAe,KAAA,IAAAX,SAAA,CAAAW,KAAA;;;IAE9B,CAAAC,SAAA,GAAAV,OAAO,EAACO,KAAK,CAAAN,KAAA,CAAAS,SAAA,GAAC,wBAAwB,EAAAR,MAAA,CAAKR,IAAI,EAAC;GACnD;EAAAF,MAAA,CAEamB,aAAa,GAApB,SAAAA,cAAqBC,OAAiB;IACzC,gBAAcA,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;GACrC;EAAA,OAAArB,MAAA;AAAA;;ICbQsB,UAAU;EAAA,SAAAA;EAAAA,UAAA,CACLC,WAAW,GAAlB,SAAAA,YAAmBC,IAAwB;;IAE9C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAK,IAAI;GACvC;EAAAH,UAAA,CAEaI,QAAQ,GAAf,SAAAA,SAAgBF,IAAwB;;IAE3C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACE,QAAQ,KAAK,IAAI;GAC1C;EAAAJ,UAAA,CAEaK,SAAS,GAAhB,SAAAA,UAAiBH,IAAwB;;IAE5C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACG,SAAS,KAAK,IAAI;GAC3C;EAAAL,UAAA,CAEaM,WAAW,GAAlB,SAAAA,YAAmBJ,IAAwB;;IAE9C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACI,WAAW,KAAK,IAAI;GAC7C;EAAAN,UAAA,CAEaO,WAAW,GAAlB,SAAAA,YAAmBL,IAAwB;;IAE9C,OAAO,CAAC,CAACA,IAAI;GAChB;EAAAF,UAAA,CAEaQ,UAAU,GAAjB,SAAAA,WAAkBN,IAAwB;;IAE7C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACO,QAAQ,KAAK,KAAK;GAC3C;EAAAT,UAAA,CAEaU,YAAY,GAAnB,SAAAA,aAAoBR,IAAwB;;IAE/C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACS,UAAU,KAAK,KAAK;GAC7C;EAAAX,UAAA,CAEaY,WAAW,GAAlB,SAAAA,YAAmBV,IAAwB;;IAE9C,OAAO,CAAC,CAACA,IAAI,IAAIA,IAAI,CAACW,SAAS,KAAK,KAAK;GAC5C;EAAAb,UAAA,CAEac,WAAW,GAAlB,SAAAA,YAAmBZ,IAAwB;;IAE9C,IAAI,CAACA,IAAI,EAAE,OAAO,KAAK;IACvB,IAAIA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACa,SAAS,KAAK,KAAK,EAAE,OAAO,IAAI;IACvD,OAAOb,IAAI,CAACa,SAAS,KAAK,IAAI;GACjC;EAAAf,UAAA,CAEagB,aAAa,GAApB,SAAAA,cAAqBd,IAAwB;;IAEhD,IAAI,CAACF,UAAU,CAACQ,UAAU,CAACN,IAAI,CAAC,EAAE,OAAO,KAAK;IAC9C,IAAIA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACe,WAAW,KAAK,KAAK,EAAE,OAAO,IAAI;IACzD,OAAOf,IAAI,CAACe,WAAW,KAAK,IAAI;GACnC;EAAAjB,UAAA,CAEakB,UAAU,GAAjB,SAAAA,WAAkBhB,IAAwB;IAC7C,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACiB,OAAO,KAAK,IAAI,IAAIjB,IAAI,CAACiB,OAAO,KAAKC,SAAS,EAAE,OAAO,IAAI;IAC7E,OAAOpB,UAAU,CAACqB,SAAS,CAACnB,IAAI,CAACiB,OAAO,CAAC;GAC5C;EAAAnB,UAAA,CAEaqB,SAAS,GAAhB,SAAAA,UAAiBC,SAA8B;IAClD,IAAI,OAAOA,SAAS,KAAK,QAAQ,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;;MAEhE,IAAI;QACA,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC;OAC7B,CAAC,OAAO3C,KAAK,EAAE;QACZD,MAAM,CAACC,KAAK,4DACiDA,KAAK,CAAC6C,OAAO,QACtE,gBAAgB,EAChBF,SAAS,CACZ;;;IAGT,IAAIA,SAAS,YAAYC,IAAI,IAAI,CAACE,KAAK,CAACH,SAAS,CAACI,OAAO,EAAE,CAAC,EAAE;;MAE1D,OAAOJ,SAAS;;;IAIpB5C,MAAM,CAACW,IAAI,CAAC,kCAAkC,EAAEiC,SAAS,CAAC;IAC1D,OAAO,IAAI;GACd;EAAAtB,UAAA,CAEa2B,gBAAgB,GAAvB,SAAAA,iBAAwBzB,IAAwB;IACnD,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,CAAC0B,aAAa,KAAK,QAAQ,EAAE,OAAO,IAAI;IAEhE,OAAO1B,IAAI,CAAC0B,aAAa;GAC5B;EAAA,OAAA5B,UAAA;AAAA;;ACvEE,IAAM6B,kBAAkB,GAAkB,SAApCA,kBAAkBA,CAAmBC,IAAY,EAAEC,QAAe;EAC3E,IAAMC,cAAc,GAAG,EAAE;EACzB,IAAMC,aAAa,GAAa,EAAE;EAElC,IAAI,CAACH,IAAI,KAAK,aAAa,IAAIA,IAAI,KAAK,aAAa,KAAK,CAACC,QAAQ,EAAE,CAEpE,MAAM,IAAI,CAAClD,KAAK,CAACqD,OAAO,CAACH,QAAQ,CAAC,EAAE;IACjCE,aAAa,CAACE,IAAI,iBACDL,IAAI,sCAA+B,OAAOC,QAAQ,gBAAY,CAC9E;GACJ,MAAM;IACH,IAAIK,kBAAkB,GAAG,CAAC;IAC1B,IAAIC,qBAAqB,GAAG,CAAC;IAC7B,IAAMC,OAAO,GAAG,IAAIC,GAAG,EAAU;IACjC,IAAMC,YAAY,GAAG,IAAID,GAAG,EAAU;IAEtC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,QAAQ,CAACW,MAAM,EAAE,EAAED,CAAC,EAAE;MACtC,IAAME,IAAI,GAAGZ,QAAQ,CAACU,CAAC,CAAC;MACxB,IAAI,CAACE,IAAI,EAAE;QACP,IAAIb,IAAI,KAAK,aAAa,EAAEM,kBAAkB,EAAE,CAAC,KAC5CJ,cAAc,CAACG,IAAI,CAAC,IAAI,CAAC;OACjC,MAAM,IAAI,OAAOQ,IAAI,KAAK,QAAQ,EAAE;QACjCP,kBAAkB,EAAE;OACvB,MAAM;QACH,IAAI,CAACO,IAAI,CAACC,EAAE,IAAKd,IAAI,KAAK,aAAa,IAAI,CAACa,IAAI,CAACE,IAAK,EAAE;UACpDR,qBAAqB,EAAE;SAC1B,MAAM,IAAIC,OAAO,CAACQ,GAAG,CAACH,IAAI,CAACC,EAAE,CAAC,EAAE;UAC7BJ,YAAY,CAACO,GAAG,CAACJ,IAAI,CAACC,EAAE,CAAC;SAC5B,MAAM;UACHN,OAAO,CAACS,GAAG,CAACJ,IAAI,CAACC,EAAE,CAAC;UACpBZ,cAAc,CAACG,IAAI,CAACQ,IAAI,CAAC;;;;IAKrC,IAAIP,kBAAkB,EAAE;MACpBH,aAAa,CAACE,IAAI,CACd,cAAYC,kBAAkB,yGACkC,CACnE;;IAEL,IAAIC,qBAAqB,EAAE;MACvBJ,aAAa,CAACE,IAAI,CACd,cAAYE,qBAAqB,oGACiC,2BAC1C,CAC3B;;IAEL,IAAIG,YAAY,CAACQ,IAAI,GAAG,CAAC,EAAE;MACvB,IAAMC,iBAAiB,GAAG,GAAG,GAAGpE,KAAK,CAACqE,IAAI,CAACV,YAAY,CAAC,CAACzC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG;MAC3EkC,aAAa,CAACE,IAAI,CACd,cAAYK,YAAY,CAACQ,IAAI,wGACsC,iDACpBC,iBAAiB,CAAE,CACrE;;;EAIT,IAAIhB,aAAa,CAACS,MAAM,GAAG,CAAC,EAAE;IAC1B,IAAMS,kBAAkB,GAAG,MAAM,GAAGlB,aAAa,CAAClC,IAAI,CAAC,MAAM,CAAC;IAC9D,IAAIqD,WAAmB;IACvB,IAAIC,UAAkB;IACtB,IAAIvB,IAAI,KAAK,aAAa,EAAE;MACxBsB,WAAW,GAAG,cAAc;MAC5BC,UAAU,GAAG,OAAO;KACvB,MAAM,IAAIvB,IAAI,KAAK,aAAa,EAAE;MAC/BsB,WAAW,GAAG,cAAc;MAC5BC,UAAU,GAAG,cAAc;KAC9B,MAAM;;MAEHD,WAAW,GAAG,OAAO;MACrBC,UAAU,GAAG,OAAO;;IAGxB3E,MAAM,CAACC,KAAK,CACR,8CAA4CyE,WAAW,gCACtCC,UAAU,+CAA2C,4BAC5CF,kBAAkB,CAAE,CACjD;;EAGL,OAAO;IACHG,cAAc,EAAEtB,cAAc;IAC9BC,aAAa,EAAbA;GACH;AACL,CAAC;;AC1GD;;;AAGA,IAAasB,SAAS,GAAG;EACrBC,eAAe,EAAE,mBAAmB;EACpCC,gBAAgB,EAAE,oBAAoB;EACtCC,QAAQ,EAAE;CACb;;ACDD,IAAYC,SAGX;AAHD,WAAYA,SAAS;EACjBA,wBAAW;EACXA,0BAAa;AACjB,CAAC,EAHWA,SAAS,KAATA,SAAS;;ACMrB;AACA,IAAaC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAgB;EAAA,OAAKA,KAAK,CAACC,UAAU;AAAA;AACtE,IAAaC,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAIF,KAAgB;EAAA,OAAKA,KAAK,CAACG,yBAAyB;AAAA;AAEpG,IAAaC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIJ,KAAgB;EAAA,OAAKA,KAAK,CAACK,aAAa;AAAA;AAC5E,IAAaC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIN,KAAgB;EAAA,OAAKA,KAAK,CAACO,aAAa;AAAA;AAC5E,IAAaC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,YAAoB;EAAA,OAAK,UAACT,KAAgB;IAAA,OAC3EI,mBAAmB,CAACJ,KAAK,CAAC,CAACS,YAAY,CAAC;;AAAA;AAC5C,IAAaC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIV,KAAgB;EAAA,OAAKA,KAAK,CAACW,YAAY;AAAA;AAC1E,IAAaC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIZ,KAAgB;EAAA,OAAKA,KAAK,CAACa,gBAAgB;AAAA;AAElF,IAAaC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAId,KAAgB;EAAA,OAAKA,KAAK,CAACe,WAAW;AAAA;AACxE,IAAaC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIhB,KAAgB;EAChD,IAAMe,WAAW,GAAGD,iBAAiB,CAACd,KAAK,CAAC;EAC5C,IAAMiB,aAAa,GAAGF,WAAW,CAAClC,MAAM,GAAG,CAAC,GAAGkC,WAAW,CAACA,WAAW,CAAClC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;EACzF,OAAOoC,aAAa;AACxB,CAAC;AACD,IAAaC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIlB,KAAgB;EAC/C,IAAMe,WAAW,GAAGD,iBAAiB,CAACd,KAAK,CAAC;EAC5C,IAAMmB,YAAY,GAAGJ,WAAW,CAAClC,MAAM,GAAG,CAAC,GAAGkC,WAAW,CAACA,WAAW,CAAClC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI;EACxF,OAAOsC,YAAY;AACvB,CAAC;AAED,IAAaC,cAAc,GAAG,SAAjBA,cAAcA,CAAIpB,KAAgB;EAAA,OAAKA,KAAK,CAACqB,QAAQ;AAAA;AAClE,IAAaC,aAAa,GAAG,SAAhBA,aAAaA,CAAItB,KAAgB;EAAA,OAAKA,KAAK,CAACuB,OAAO;AAAA;AAChE,IAAaC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIxB,KAAgB;EAAA,OAAKA,KAAK,CAACyB,YAAY;AAAA;AAC1E,IAAaC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAwB;EAAA,OAAK,UAAC3B,KAAgB;IAAA,OACzE2B,MAAM,GAAGL,aAAa,CAACtB,KAAK,CAAC,CAAC2B,MAAM,CAAC,GAAG,IAAI;;AAAA;AAEhD,IAAaC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAI5B,KAAgB;EAAA,OAAKA,KAAK,CAAC6B,eAAe;AAAA;AAChF,IAAaC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAI9B,KAAgB;EAAA,OAAK+B,MAAM,CAACC,IAAI,CAACJ,qBAAqB,CAAC5B,KAAK,CAAC,CAAC,CAACnB,MAAM;AAAA;AAE3G,IAAaoD,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIjC,KAAgB;EAAA,OAAKA,KAAK,CAACkC,gBAAgB;AAAA;AAClF,IAAaC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAInC,KAAgB;EAAA,OAAKA,KAAK,CAACoC,YAAY;AAAA;AAE1E,IAAaC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIrC,KAAgB;EAAA,OAAKA,KAAK,CAACsC,YAAY;AAAA;AAC1E,IAAaC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIvC,KAAgB;EAAA,OAAK+B,MAAM,CAACC,IAAI,CAACK,kBAAkB,CAACrC,KAAK,CAAC,CAAC;AAAA;AACjG,IAAawC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIxC,KAAgB;EAAA,OAAKuC,qBAAqB,CAACvC,KAAK,CAAC,CAACnB,MAAM;AAAA;AAC5F,IAAa4D,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAId,MAAwB;EAAA,OAAK,UAAC3B,KAAgB;IAAA,OAC/E,CAAC,CAAC2B,MAAM,IAAI,CAAC,CAACU,kBAAkB,CAACrC,KAAK,CAAC,CAAC2B,MAAM,CAAC;;AAAA;AACnD,IAAae,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAI1C,KAAgB;EAChD,IAAMuB,OAAO,GAAGD,aAAa,CAACtB,KAAK,CAAC;EACpC,OAAO+B,MAAM,CAACC,IAAI,CAACK,kBAAkB,CAACrC,KAAK,CAAC,CAAC,CAAC2C,GAAG,CAAC,UAAA5D,EAAE;IAAA,OAAIwC,OAAO,CAACxC,EAAE,CAAC;IAAC;AACxE,CAAC;AACD,IAAa6D,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAInC,YAAoB;EAAA,OAAK,UAACT,KAAgB;IACnF,IAAQK,aAAa,GAAKL,KAAK,CAAvBK,aAAa;IACrB,IAAMwC,MAAM,GAAGxC,aAAa,CAACI,YAAY,CAAC;IAC1C,IAAI,CAACoC,MAAM,IAAI,CAACA,MAAM,CAACC,iBAAiB,EAAE,OAAOvF,SAAS;IAE1D,OAAOwF,gBAAgB,CAAC/C,KAAK,EAAE6C,MAAM,CAACG,UAAU,CAAC;GACpD;AAAA;AACD,IAAaC,iCAAiC,GAAG,SAApCA,iCAAiCA,CAAIxC,YAAoB;EAAA,OAAK,UAACT,KAAgB;IAAA,IAAAkD,qBAAA;IAAA,QAAAA,qBAAA,GACxFC,yBAAyB,CAACnD,KAAK,EAAES,YAAY,CAAC,qBAA9CyC,qBAAA,CAAgDrE,MAAM;;AAAA;AAC1D,IAAauE,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIpD,KAAgB;EAAA,OAAKA,KAAK,CAACqD,gBAAgB;AAAA;AAElF,IAAaC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAItD,KAAgB;EAAA,OAAKA,KAAK,CAACuD,cAAc;AAAA;AAE9E,IAAaC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIxD,KAAgB;EAAA,OAAKA,KAAK,CAACyD,YAAY;AAAA;AAC1E,IAAaC,eAAe,GAAG,SAAlBA,eAAeA,CAAI1D,KAAgB;EAAA,OAAKA,KAAK,CAAC2D,SAAS;AAAA;AAEpE,IAAaC,eAAe,GAAG,SAAlBA,eAAeA,CAAI5D,KAAgB;EAAA,OAAKA,KAAK,CAAC6D,SAAS;AAAA;AACpE,IAAaC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,QAAgB;EAAA,OAAK,UAAC/D,KAAgB;IAAA,OAAK4D,eAAe,CAAC5D,KAAK,CAAC,CAAC+D,QAAQ,CAAC;;AAAA;AAE7G,IAAaC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAIhE,KAAgB;EAAA,OAAKA,KAAK,CAACiE,kBAAkB;AAAA;AACtF,IAAaC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIlE,KAAgB;EAAA,OAAKA,KAAK,CAACmE,gBAAgB;AAAA;AAClF,IAAaC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIpE,KAAgB;EAAA,OAAKA,KAAK,CAACqE,kBAAkB;AAAA;AACjF,IAAaC,kCAAkC,GAAG,SAArCA,kCAAkCA,CAAItE,KAAgB;EAAA,OAAKA,KAAK,CAACuE,4BAA4B;AAAA;AAE1G,IAAaC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAIxE,KAAgB;EAAA,OAAKA,KAAK,CAACyE,kBAAkB;AAAA;AACtF,IAAaC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAI1E,KAAgB;EAAA,OAAKA,KAAK,CAAC2E,iBAAiB;AAAA;AACpF,IAAaC,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAI5E,KAAgB;;EACzD,IAAM6E,MAAM,GAAGH,uBAAuB,CAAC1E,KAAK,CAAC;EAC7C,IAAI,CAAC6E,MAAM,IAAI,CAACA,MAAM,CAACC,aAAa,EAAE,OAAO,IAAI;EACjD,IAAMvD,OAAO,GAAGD,aAAa,CAACtB,KAAK,CAAC;EACpC,QAAA+E,qBAAA,GAAOxD,OAAO,CAACsD,MAAM,CAACC,aAAa,CAAC,YAAAC,qBAAA,GAAI,IAAI;AAChD,CAAC;AAED;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIhF,KAAgB;EAAA,OAAKA,KAAK,CAACK,aAAa;AAAA;AAClE,IAAM4E,YAAY,GAAG,SAAfA,YAAYA,CAAIjF,KAAgB;EAAA,OAAKA,KAAK,CAAC6D,SAAS;AAAA;AAC1D,IAAMqB,UAAU,GAAG,SAAbA,UAAUA,CAAIlF,KAAgB;EAAA,OAAKA,KAAK,CAACuB,OAAO;AAAA;AACtD,IAAM4D,UAAU,GAAG,SAAbA,UAAUA,CAAInF,KAAgB;EAAA,OAAKA,KAAK,CAACoF,OAAO;AAAA;AACtD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIrF,KAAgB;EAAA,OAAKA,KAAK,CAACyB,YAAY;AAAA;AAChE,IAAM6D,eAAe,GAAG,SAAlBA,eAAeA,CAAItF,KAAgB;EAAA,OAAKA,KAAK,CAACyD,YAAY;AAAA;AAChE,IAAM8B,YAAY,GAAG,SAAfA,YAAYA,CAAIvF,KAAgB;EAAA,OAAKA,KAAK,CAAC2D,SAAS;AAAA;AAC1D,IAAM6B,eAAe,GAAG,SAAlBA,eAAeA,CAAIxF,KAAgB;EAAA,OAAKA,KAAK,CAACoC,YAAY;AAAA;AAChE,IAAMqD,aAAa,GAAG,SAAhBA,aAAaA,CAAIzF,KAAgB;EAAA,OAAKA,KAAK,CAAC0F,SAAS;AAAA;AAE3D;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,kBAA0D;EAAA,OAC7EC,cAAc,CAAC,CAACb,gBAAgB,EAAEY,kBAAkB,CAAC,EAAE,UAACvF,aAAa,EAAEI,YAAY;IAAA,OAC/EA,YAAY,IAAIJ,aAAa,CAACI,YAAY,CAAC,GAAGJ,aAAa,CAACI,YAAY,CAAC,GAAG,IAAI;IACnF;AAAA;AACL,IAAMqF,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAI/B,QAAgB,EAAEgC;MAAAA;IAAAA,eAAoBxI,SAAS;;EAAA,OACvEsI,cAAc,CAAC,CAACZ,YAAY,CAAC,EAAE,UAAApB,SAAS;IACpC,IAAMlK,KAAK,GAAGkK,SAAS,CAACE,QAAQ,CAAC;IACjC,IAAIpK,KAAK,KAAK4D,SAAS,EAAE;MACrB,OAAOwI,YAAY;;IAEvB,OAAOpM,KAAK;GACf,CAAC;AAAA;AACN,IAAMqM,YAAY,GAAG,SAAfA,YAAYA,CAAIC,eAAyD;EAAA,OAC3EJ,cAAc,CACV,CAACX,UAAU,EAAEe,eAAe,CAAC,EAC7B,UAAC1E,OAAO,EAAE6D,OAAO;IAAA,OAAgBA,OAAO,CAACzC,GAAG,CAAC,UAAAhB,MAAM;MAAA,OAAKA,MAAM,IAAIJ,OAAO,CAACI,MAAM,CAAC,GAAGJ,OAAO,CAACI,MAAM,CAAC,GAAG,IAAI;KAAC,CAAC;IAC/G;AAAA;AACL,IAAMuE,gBAAgB,gBAAGL,cAAc,CACnC,CACIV,UAAU,EACVI,YAAY,eACZS,YAAY,CAACb,UAAU,CAAC,eACxBQ,aAAa,CAACL,eAAe,CAAC,eAC9BQ,kBAAkB,CAACpG,SAAS,CAACE,gBAAgB,EAAE,KAAK,CAAC,CACxD,EACD,UAACwF,OAAO,EAAEzB,SAAS,EAAEwC,KAAK,EAAEC,UAAU,EAAEC,eAAe;EACnD,IAAI,CAACD,UAAU,EAAE;;;IAGb,OAAOhB,OAAO;;EAGlB,IAAMkB,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,QAA6B;IAAA,OAAK,UAAClK,IAAwB;MAAA,OAAKkK,QAAQ,CAAClK,IAAI,CAAC;;;EAE9G,IAAMmK,aAAa,GAGb,EAAE;EAER,IAAIH,eAAe,EAAE;;;IAGjBG,aAAa,CAAClI,IAAI,CAAC;MACfmI,IAAI,EAAEH,sBAAsB,CAACnK,UAAU,CAACC,WAAW;KACtD,CAAC;;EAEN,IAAIgK,UAAU,CAACM,eAAe,EAAE;IAAA,IAAAC,mBAAA;IAC5B,IAAMC,aAAa,GAAGjD,SAAS,KAAK7D,SAAS,CAAC+G,GAAG,GAAG,KAAK,GAAG,MAAM;IAClEL,aAAa,CAAClI,IAAI,EAAAqI,mBAAA,OAAAA,mBAAA,CACbC,aAAa,IAAGN,sBAAsB,CAACF,UAAU,CAACM,eAAe,CAAC,EAAAC,mBAAA,EACrE;;EAEN,IAAIH,aAAa,CAAC3H,MAAM,KAAK,CAAC,EAAE,OAAOuG,OAAO;;EAG9C,IAAM0B,aAAa,GAAGC,IAAI,IAAAxL,MAAA,CAAK4K,KAAK,CAAC,CAAC,CACjCa,EAAE,CAACR,aAAoB,CAAC,CACxB7D,GAAG,CAAC,UAAAtG,IAAI;IAAA,OAAKA,IAAI,GAAGA,IAAI,CAAC0C,EAAE,GAAG,IAAI;GAAC,CAAC;EACzC,OAAO+H,aAAa;AACxB,CAAC,CACJ;AACD,IAAMG,WAAW,gBAAGpB,cAAc,CAC9B,cAACG,YAAY,CAACX,eAAe,CAAC,CAAC,EAC/B,UAAA6B,UAAU;EAAA,OAAI,IAAIC,WAAW,CAACD,UAAwB,EAAE,CAAC,MAAM,CAAC,EAAE;IAAEE,aAAa,EAAE;GAAO,CAAC;AAAA,EAC9F;AACD,IAAMC,wBAAwB,gBAAGxB,cAAc,CAC3C,CAACR,eAAe,EAAEG,eAAe,EAAEyB,WAAW,CAAC,EAC/C,UAACxF,YAAY,EAAEW,YAAY,EAAEkF,QAAQ;EAAA,OACjClF,YAAY,GAAGkF,QAAQ,CAACC,MAAM,CAACnF,YAAY,CAAC,CAACO,GAAG,CAAC,UAAA6E,CAAC;IAAA,OAAIA,CAAC,CAACzI,EAAE;IAAC,GAAG0C,YAAY;AAAA,EACjF;AACD,IAAMgG,kBAAkB,gBAAG5B,cAAc,CACrC,CAACwB,wBAAwB,eAAErB,YAAY,CAACX,eAAe,CAAC,eAAES,kBAAkB,CAACpG,SAAS,CAACC,eAAe,CAAC,CAAC,EACxG,UAAC+H,qBAAqB,EAAER,UAAU,EAAES,eAAe;EAC/C,IAAMC,wBAAwB,GAAG,IAAIlJ,GAAG,CAACgJ,qBAAqB,CAAC;EAC/D,IAAM7F,eAAe,GAAQ,EAAE;EAC/BqF,UAAU,CAACW,OAAO,CAAC,UAAAxL,IAAI;IACnB,IAAI,CAACA,IAAI,EAAE,OAAO,KACb,IAAI,CAACuL,wBAAwB,CAAC3I,GAAG,CAAC5C,IAAI,CAAC0C,EAAE,CAAC,EAAE;;MAE7C8C,eAAe,CAACxF,IAAI,CAAC0C,EAAE,CAAC,GAAG,IAAI;KAClC,MAAM,IAAI,CAAC4I,eAAe,IAAIxL,UAAU,CAACI,QAAQ,CAACF,IAAI,CAAC,EAAE;;MAEtDwF,eAAe,CAACxF,IAAI,CAAC0C,EAAE,CAAC,GAAG,IAAI;;GAEtC,CAAC;EACF,OAAO8C,eAAe;AAC1B,CAAC,CACJ;AACD,IAAMiG,iBAAiB,gBAAGjC,cAAc,CACpC,CAACK,gBAAgB,EAAEuB,kBAAkB,CAAC;AAEtC,UAACX,aAAa,EAAEjF,eAAe;EAAA,OAAKiF,aAAa,CAACiB,MAAM,CAAC,UAAAhJ,EAAE;IAAA,OAAI,CAACA,EAAE,IAAI,CAAC8C,eAAe,CAAC9C,EAAE,CAAC;IAAC;AAAA,EAC9F;AACD,IAAMiJ,iBAAiB,gBAAGnC,cAAc,CACpC,CAACJ,aAAa,EAAES,gBAAgB,CAAC;AAEjC,UAACR,SAAS,EAAEuC,cAAc;EACtB,IACI,CAACvC,SAAS,IACVA,SAAS,CAACwC,KAAK,GAAGD,cAAc,CAACpJ,MAAM,GAAG,CAAC,IAC3C6G,SAAS,CAAC/D,MAAM,IAAIsG,cAAc,CAACvC,SAAS,CAACwC,KAAK,CAAC,EACrD;IACE,OAAO,IAAI;;EAEf,OAAOxC,SAAS,CAACwC,KAAK;AAC1B,CAAC,CACJ;AAED,IAAaC,SAAS,GAAG;;EAErBnD,gBAAgB,EAAhBA,gBAAgB;EAChBC,YAAY,EAAZA,YAAY;EACZC,UAAU,EAAVA,UAAU;EACVC,UAAU,EAAVA,UAAU;EACVE,eAAe,EAAfA,eAAe;EACfC,eAAe,EAAfA,eAAe;EACfC,YAAY,EAAZA,YAAY;EACZC,eAAe,EAAfA,eAAe;EACfC,aAAa,EAAbA,aAAa;;EAGbS,gBAAgB,EAAhBA,gBAAgB;EAChBe,WAAW,EAAXA,WAAW;EACXI,wBAAwB,EAAxBA,wBAAwB;EACxBI,kBAAkB,EAAlBA,kBAAkB;EAClBK,iBAAiB,EAAjBA,iBAAiB;EACjBE,iBAAiB,EAAjBA,iBAAiB;;EAGjBrC,aAAa,EAAbA,aAAa;EACbG,kBAAkB,EAAlBA,kBAAkB;EAClBE,YAAY,EAAZA;CACH;AAED;AACA,IAAaoC,WAAW,GAAG,SAAdA,WAAWA,CAAIpI,KAAgB,EAAE2B,MAAwB;EAAA,OAClEA,MAAM,GAAGL,aAAa,CAACtB,KAAK,CAAC,CAAC2B,MAAM,CAAC,GAAG,IAAI;AAAA;AAChD,IAAa0G,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIrI,KAAgB,EAAE3D,IAAc;;;EAG9D,OAAO,CAAC,CAACgG,kBAAkB,CAACrC,KAAK,CAAC,CAAC3D,IAAI,CAAC0C,EAAE,CAAC;AAC/C,CAAC;AACD,IAAagE,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAI/C,KAAgB;EAC7C,IAAQuB,OAAO,GAAmBvB,KAAK,CAA/BuB,OAAO;IAAEe,YAAY,GAAKtC,KAAK,CAAtBsC,YAAY;EAE7B,IAAMgG,aAAa,GAAGvG,MAAM,CAACC,IAAI,CAACM,YAAY,CAAC,CAACK,GAAG,CAAC,UAAA5D,EAAE;IAAA,OAAIwC,OAAO,CAACxC,EAAE,CAAC;IAAC;EAAC,SAAA9D,IAAA,GAAAE,SAAA,CAAA0D,MAAA,EAHrB0J,OAA8B,OAAAvN,KAAA,CAAAC,IAAA,OAAAA,IAAA,WAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;IAA9BqN,OAA8B,CAAArN,IAAA,QAAAC,SAAA,CAAAD,IAAA;;EAIhF,IAAMsN,qBAAqB,GAAGD,OAAO,CAACE,MAAM,CACxC,UAACC,SAAS,EAAEX,MAAM;IAAA,OAAMA,MAAM,GAAGW,SAAS,CAACX,MAAM,CAACA,MAAM,CAAC,GAAGW,SAAS;GAAC,EACtEJ,aAAa,CAChB;EACD,OAAOE,qBAAqB;AAChC,CAAC;AACD,IAAarF,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAInD,KAAgB,EAAES,YAAoB;EAAA,OAC5EmC,4BAA4B,CAACnC,YAAY,CAAC,CAACT,KAAK,CAAC;AAAA;;ACnPrD;;;AAGA,IAAM2I,sBAAsB,GAAG,SAAzBA,sBAAsBA;;EACxB,IAAMC,aAAa,GAAG,IAAIlK,GAAG,EAAU;EACvC,IAAMmK,SAAS,GAAG,SAAZA,SAASA,CAAIC,CAAa;IAAA,OAAK,CAAC,CAACF,aAAa,CAAC1J,GAAG,CAAC4J,CAAC,CAAC/J,EAAE,CAAC;;EAC9D,IAAMgK,UAAU,GAAG,SAAbA,UAAUA,CAAID,CAAa;IAAA,OAAK,CAACF,aAAa,CAAC3J,GAAG,CAAC6J,CAAC,CAAC/J,EAAE,CAAC;;EAAC,SAAA9D,IAAA,GAAAE,SAAA,CAAA0D,MAAA,EAHhCmK,gBAAgC,OAAAhO,KAAA,CAAAC,IAAA,GAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;IAAhC8N,gBAAgC,CAAA9N,IAAA,IAAAC,SAAA,CAAAD,IAAA;;EAK/D,IAAM+N,mBAAmB,GAAGD,gBAAgB,CAACrG,GAAG,CAAC,UAAAuG,GAAG;IAChD,IAAMC,kBAAkB,GAAGD,GAAG,CAACnB,MAAM,CAACgB,UAAU,CAAC;IACjDI,kBAAkB,CAACxG,GAAG,CAACkG,SAAS,CAAC;IACjC,OAAOM,kBAAkB;GAC5B,CAAC;EACF,OAAO,CAAAC,MAAA,OAAIpO,KAAK,EAAc,EAACO,MAAM,CAAAD,KAAA,CAAA8N,MAAA,EAAIH,mBAAmB,CAAC;AACjE,CAAC;AAED,AAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAClCC,cAAkC,EAClCC,yBAAsD;EAAA,OACxC,UAAAC,QAAQ;IACtB,IAAAC,mBAAA,GAA0CzL,kBAAkB,CAAC,aAAa,EAAEsL,cAAc,CAAC;MAAnF7J,cAAc,GAAAgK,mBAAA,CAAdhK,cAAc;MAAErB,aAAa,GAAAqL,mBAAA,CAAbrL,aAAa;;IAGrC,IAAIsL,mBAAiC;IACrC,IAAI1O,KAAK,CAACqD,OAAO,CAACkL,yBAAyB,CAAC,EAAE;MAC1C,IAAMI,iBAAiB,GAAG,IAAIjL,GAAG,CAAC6K,yBAAyB,CAAC;MAC5DG,mBAAmB,GAAGE,kBAAkB,CAAC7B,MAAM,CAAC,UAAAlF,MAAM;QAAA,OAAI,CAAC8G,iBAAiB,CAAC1K,GAAG,CAAC4D,MAAM,CAAC9D,EAAE,CAAC;QAAC;KAC/F,MAAM,IAAIwK,yBAAyB,EAAE;MAClCG,mBAAmB,GAAG,EAAE;KAC3B,MAAM;MACHA,mBAAmB,GAAGE,kBAAkB;;IAG5C,IAAMC,WAAW,GAAGlB,sBAAsB,CAAClJ,cAAc,EAAEqK,oBAAoB,EAAEJ,mBAAmB,CAAC;IACrG,IAAMK,cAAc,GAAQ,EAAE;IAC9BF,WAAW,CAAClH,GAAG,CAAC,UAAAmG,CAAC;MAAA,OAAKA,CAAC,CAACkB,MAAM,GAAID,cAAc,CAACjB,CAAC,CAACkB,MAAM,CAACjL,EAAE,CAAC,GAAG+J,CAAC,CAACkB,MAAM,CAACjE,YAAY,GAAI,IAAI;KAAC,CAAC;IAE/FyD,QAAQ,CAACS,YAAY,CAACC,iBAAiB,CAACZ,cAAc,CAAC,CAAC;IACxDE,QAAQ,CAACS,YAAY,CAACE,2BAA2B,CAAC/L,aAAa,CAAC,CAAC;IACjEoL,QAAQ,CAACS,YAAY,CAACG,cAAc,CAACP,WAAW,CAAC,CAAC;IAClDL,QAAQ,CAACS,YAAY,CAACI,iBAAiB,CAACN,cAAc,CAAC,CAAC;IACxDP,QAAQ,CAACc,mCAAmC,CAACT,WAAW,CAAC,CAAC;GAC7D;AAAA;AAED,AAAO,IAAMS,mCAAmC,GAAG,SAAtCA,mCAAmCA,CAAIT,WAAyB;EAAA,OAAkB,UAAAL,QAAQ;IACnG,IAAMe,4BAA4B,GAAG,IAAI7L,GAAG,CAAS;;;IAGjD8L,aAAa,CAACC,gBAAgB,CAAC1L,EAAE,CACpC,CAAC;IAIF,IAAM4B,YAAY,GAAyB,EAAE;IAC7C,IAAM+J,iBAAiB,GAAiB,EAAE;IAE1C,IAAM7J,gBAAgB,GAAyB,EAAE;IACjD,IAAM8J,qBAAqB,GAAiB,EAAE;IAE9C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,SAA+B,EAAEC,OAAqB,EAAEC,SAAiB;MACvF,IAAID,OAAO,CAACC,SAAS,CAAC,EAAE,OAAOD,OAAO,CAACC,SAAS,CAAC;MACjD,IAAMC,KAAK,GAAoB;QAAEhM,IAAI,EAAE+L,SAAS;QAAExK,aAAa,EAAE;OAAI;MACrEsK,SAAS,CAACvM,IAAI,CAAC0M,KAAK,CAAC;MACrBF,OAAO,CAACC,SAAS,CAAC,GAAGC,KAAK;MAC1B,OAAOA,KAAK;KACf;IAED,SAAAC,SAAA,GAAAC,+BAAA,CAAqBrB,WAAW,GAAAsB,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;MAAA,IAAvBvI,MAAM,GAAAsI,KAAA,CAAAxR,KAAA;MACb,IAAM0R,MAAM,GAAGxI,MAAM,CAACwI,MAAM;MAC5B,IAAI,CAACA,MAAM,EAAE;MAEb,IAAIA,MAAM,CAACC,OAAO,IAAI,CAACf,4BAA4B,CAACtL,GAAG,CAAC4D,MAAM,CAAC9D,EAAE,CAAC,EAAE;QAChE,IAAIsM,MAAM,CAACL,KAAK,EAAE;UACd,IAAMA,KAAK,GAAGJ,QAAQ,CAACjK,YAAY,EAAE+J,iBAAiB,EAAEW,MAAM,CAACL,KAAK,CAAC;UACrEA,KAAK,CAACzK,aAAa,CAACjC,IAAI,CAACuE,MAAM,CAAC9D,EAAE,CAAC;SACtC,MAAM;UACH4B,YAAY,CAACrC,IAAI,CAACuE,MAAM,CAAC9D,EAAE,CAAC;;;MAIpC,IAAIsM,MAAM,CAACE,WAAW,EAAE;QACpB,IAAIF,MAAM,CAACL,KAAK,EAAE;UACd,IAAMA,MAAK,GAAGJ,QAAQ,CAAC/J,gBAAgB,EAAE8J,qBAAqB,EAAEU,MAAM,CAACL,KAAK,CAAC;UAC7EA,MAAK,CAACzK,aAAa,CAACjC,IAAI,CAACuE,MAAM,CAAC9D,EAAE,CAAC;SACtC,MAAM;UACH8B,gBAAgB,CAACvC,IAAI,CAACuE,MAAM,CAAC9D,EAAE,CAAC;;;;IAK5CyK,QAAQ,CAACS,YAAY,CAACuB,yBAAyB,CAAC,CAAC7K,YAAY,EAAEE,gBAAgB,CAAC,CAAC,CAAC;GACrF;AAAA;AAED,AAAO,IAAM4K,kCAAkC,GAAG,SAArCA,kCAAkCA,CAAIhL,YAA6B;EAAA,OAAkB,UAC9F+I,QAAQ,EACRkC,QAAQ;IAER,IAAAC,SAAA,GAA0BD,QAAQ,EAAE;MAA5BrL,aAAa,GAAAsL,SAAA,CAAbtL,aAAa;IACrB,IAAMwC,MAAM,GAAGpC,YAAY,GAAGJ,aAAa,CAACI,YAAY,CAAC,GAAG,IAAI;IAChE,IAAIoC,MAAM,IAAIA,MAAM,CAACU,cAAc,EAAE;MACjCiG,QAAQ,CAACS,YAAY,CAAC2B,iBAAiB,CAAC/I,MAAM,CAACU,cAAc,CAAC,CAAC;;GAEtE;AAAA;AAED,AAAO,IAAMsI,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIpL,YAA6B;EAAA,OAAkB,UAAC+I,QAAQ,EAAEkC,QAAQ;IACtG,IAAI,CAACjL,YAAY,EAAE;IAEnB,IAAAqL,UAAA,GAA0EJ,QAAQ,EAAE;MAA9DK,WAAW,GAAAD,UAAA,CAAzBrI,YAAY;MAA0BuI,QAAQ,GAAAF,UAAA,CAAnBnI,SAAS;MAAYtD,aAAa,GAAAyL,UAAA,CAAbzL,aAAa;IACrE,IAAMwC,MAAM,GAAGxC,aAAa,CAACI,YAAY,CAAC;IAC1C,IAAI,CAACoC,MAAM,IAAI,CAACA,MAAM,CAAC6D,eAAe,EAAE;IAExC,IAAIuF,KAAK,GAAGD,QAAQ,KAAKlM,SAAS,CAAC+G,GAAG,GAAG/G,SAAS,CAACoM,IAAI,GAAGpM,SAAS,CAAC+G,GAAG;IACvE,IAAIkF,WAAW,KAAKtL,YAAY,EAAE;MAC9BwL,KAAK,GAAGnM,SAAS,CAAC+G,GAAG;;IAGzB2C,QAAQ,CAACS,YAAY,CAACkC,OAAO,CAAC;MAAEC,QAAQ,EAAE3L,YAAY;MAAEwL,KAAK,EAAEA;KAAO,CAAC,CAAC;GAC3E;AAAA;AAED,AAAO,IAAMI,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAIxJ,MAAkB;EAAA,OAAkB,UAAC2G,QAAQ,EAAEkC,QAAQ;IAChG,IAAMY,kBAAkB,GAAGzJ,MAAM,CAACyJ,kBAAkB;IACpD,IAAI,CAACA,kBAAkB,EAAE;IAEzB,IAAMtM,KAAK,GAAG0L,QAAQ,EAAE;IACxB,IAAMa,aAAa,GAAG,IAAI7N,GAAG,CAASqD,MAAM,CAACC,IAAI,CAACK,kBAAkB,CAACrC,KAAK,CAAC,CAAC,CAAC;IAC7E,IAAMwM,aAAa,GAAG,IAAI9N,GAAG,CAASqD,MAAM,CAACC,IAAI,CAACJ,qBAAqB,CAAC5B,KAAK,CAAC,CAAC,CAAC;IAEhF,IAAMyM,YAAY,GAAGH,kBAAkB,CAAC;MACpCC,aAAa,EAAbA,aAAa;MACbnH,OAAO,EAAE5D,kBAAkB,CAACxB,KAAK,CAAC;MAClCuB,OAAO,EAAED,aAAa,CAACtB,KAAK,CAAC;MAC7BwM,aAAa,EAAbA;KACH,CAAC;IACF,IAAI,CAACC,YAAY,EAAE;IAEnB,IAAIA,YAAY,CAACtN,IAAI,KAAK,CAAC,EAAE;MACzBqK,QAAQ,CAACS,YAAY,CAACyC,cAAc,EAAE,CAAC;KAC1C,MAAM;MACHlD,QAAQ,CAACS,YAAY,CAAC0C,WAAW,CAAC;QAAEvH,OAAO,EAAEpK,KAAK,CAACqE,IAAI,CAACoN,YAAY,CAAC;QAAEG,KAAK,EAAE;OAAM,CAAC,CAAC;;GAE7F;AAAA;;AC1ID;;;AAGA,IAAaC,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,IAAgC;EAAA,OAAkB,UAACC,SAAS,EAAErB,QAAQ;IAC1G7Q,MAAM,CAACe,KAAK,6BAA2BkR,IAAI,CAAC/N,EAAE,QAAK,OAAO,EAAE+N,IAAI,CAAC;IACjE,IAAM9M,KAAK,GAAG0L,QAAQ,EAAE;IACxB,IAAM7I,MAAM,GAAGzC,mBAAmB,CAACJ,KAAK,CAAC,CAAC8M,IAAI,CAAC/N,EAAE,CAAC;IAClD,IAAMoB,yBAAyB,GAAGD,+BAA+B,CAACF,KAAK,CAAC;IACxE,IAAI6C,MAAM,EAAE;MACR,IAAI1C,yBAAyB,EAAE;QAC3B6M,OAAO,CAACC,OAAO,CAAC9M,yBAAyB,CAAC2M,IAAI,CAAC,CAAC,SAAM,CAAC,UAAAhS,KAAK;UAAA,OACxDD,MAAM,CAACC,KAAK,uDAAqDA,KAAK,CAAC6C,OAAS,CAAC;UACpF;;KAER,MAAM;MACH9C,MAAM,CAACW,IAAI,CACP,0CAAuCsR,IAAI,CAAC/N,EAAE,6DAAyD,CAC1G;;GAER;AAAA;AAED;;;;;;AAMA,IAAamO,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAC/BrK,MAAc,EACdsK,OAAgC;EAAA,OAClB,UAAC3D,QAAQ,EAAEkC,QAAQ;IACjC7Q,MAAM,CAACe,KAAK,4BAA0BiH,MAAM,CAAC9D,EAAE,QAAK,SAAS,EAAE8D,MAAM,EAAE,UAAU,EAAEsK,OAAO,CAAC;IAC3F,IAAMnN,KAAK,GAAG0L,QAAQ,EAAE;IACxB,IAAMzL,UAAU,GAAGF,gBAAgB,CAACC,KAAK,CAAC;IAE1C,IAAI,CAACI,mBAAmB,CAACJ,KAAK,CAAC,CAAC6C,MAAM,CAAC9D,EAAE,CAAC,EAAE;MACxClE,MAAM,CAACW,IAAI,CACP,kBAAeqH,MAAM,CAAC9D,EAAE,4HACgD,+DACR,0BACvC,CAC5B;;;IAIL,IAAMuJ,aAAa,GAAG5F,mBAAmB,CAAC1C,KAAK,CAAC;IAChD,IAAMoN,sBAAsB,GAAGvK,MAAM,CAACG,UAAU,GAAGsF,aAAa,CAACP,MAAM,CAAClF,MAAM,CAACG,UAAU,CAAC,GAAGsF,aAAa;IAC1G,IAAIzF,MAAM,CAACC,iBAAiB,IAAIsK,sBAAsB,CAACvO,MAAM,KAAK,CAAC,EAAE;MACjEhE,MAAM,CAACW,IAAI,CACP,yCAAsCqH,MAAM,CAAC9D,EAAE,4EACiB,8DACD,CAClE;MACD;;IAGJ,IAAMsO,sBAAsB,GAAGzI,4BAA4B,CAAC5E,KAAK,CAAC;IAClE,IAAMsN,WAAW,GAAwB;MACrCrN,UAAU,EAAVA,UAAU;MACVqI,aAAa,EAAbA,aAAa;MACb8E,sBAAsB,EAAtBA,sBAAsB;MACtBC,sBAAsB,EAAtBA;KACH;;IAGD,IAAM3G,eAAe,GAAG7D,MAAM,CAAC6D,eAAe;IAC9C,IAAIA,eAAe,EAAE8C,QAAQ,CAACqC,uBAAuB,CAAChJ,MAAM,CAAC9D,EAAE,CAAC,CAAC;;IAGjE,IAAMwE,cAAc,GAAGV,MAAM,CAACU,cAAc;IAC5C,IAAIA,cAAc,EAAEiG,QAAQ,CAACS,YAAY,CAAC2B,iBAAiB,CAACrI,cAAc,CAAC,CAAC;;IAG5E,IAAMyG,MAAM,GAAGnH,MAAM,CAACmH,MAAM;IAC5B,IAAIA,MAAM,EAAER,QAAQ,CAACS,YAAY,CAACsD,YAAY,CAACvD,MAAM,CAACjL,EAAE,CAAC,CAAC;;IAG1D,IAAMuN,kBAAkB,GAAGzJ,MAAM,CAACyJ,kBAAkB;IACpD,IAAIA,kBAAkB,EAAE9C,QAAQ,CAAC6C,4BAA4B,CAACxJ,MAAM,CAAC,CAAC;;IAGtE,IAAM2K,MAAM,GAAG3K,MAAM,CAAC2K,MAAM;IAC5B,IAAIC,kBAAkB,GAAsClQ,SAAS;IACrE,IAAIiQ,MAAM,EAAE;MACR,IAAI;QACAC,kBAAkB,GAAGD,MAAM,CAAC;UACxB3K,MAAM,EAANA,MAAM;UACNsK,OAAO,EAAPA,OAAO;UACPnN,KAAK,EAAEsN,WAAW;UAClBI,aAAa,EAAElE,QAAQ;UACvBmE,aAAa,EAAEjC;SAClB,CAAsC;OAC1C,CAAC,OAAO5Q,KAAK,EAAE;QACZD,MAAM,CAACC,KAAK,CAAC,6CAA2C+H,MAAM,CAAC9D,EAAE,+BAAyBjE,KAAK,CAAC6C,OAAO,CAAE,CAAC;;;;;IAMlH,OAAOqP,OAAO,CAACC,OAAO,CAACQ,kBAAkB,CAAC,CACrCG,IAAI,CAAC,UAAAC,YAAY;MACd,IAAMf,IAAI,GAA2B;QACjC/N,EAAE,EAAE8D,MAAM,CAAC9D,EAAE;QACb8D,MAAM,EAANA,MAAM;QACNsK,OAAO,EAAPA,OAAO;QACPnN,KAAK,EAAEsN;OACV;MACDQ,0BAA0B,CAACtE,QAAQ,EAAEsD,IAAI,EAAEe,YAAY,CAAC;KAC3D,CAAC,SACI,CAAC,UAAA/S,KAAK;MACRD,MAAM,CAACC,KAAK,CACR,6CAA2C+H,MAAM,CAAC9D,EAAE,qDAClBjE,KAAK,CAAC6C,OAAO,CAAE,CACpD;MACD,IAAMmP,IAAI,GAA2B;QACjC/N,EAAE,EAAE8D,MAAM,CAAC9D,EAAE;QACb8D,MAAM,EAANA,MAAM;QACNsK,OAAO,EAAPA,OAAO;QACPnN,KAAK,EAAEsN;OACV;MACDQ,0BAA0B,CAACtE,QAAQ,EAAEsD,IAAI,EAAEvP,SAAS,CAAC;KACxD,CAAC;GACT;AAAA;AAED,AAAO,IAAMuQ,0BAA0B,GAAG,SAA7BA,0BAA0BA,CACnCtE,QAAwB,EACxBsD,IAA4B,EAC5Be,YAAkC;EAElC,IAAME,eAAe,GAAGF,YAAY,KAAK,IAAI;EAC7C,IAAI,CAACE,eAAe,EAAEvE,QAAQ,CAACqD,uBAAuB,CAACC,IAAI,CAAC,CAAC;AACjE,CAAC;;IChJWkB,YAIX;AAJD,WAAYA,YAAY;EACpBA,6BAAa;EACbA,mCAAmB;EACnBA,6BAAa;AACjB,CAAC,EAJWA,YAAY,KAAZA,YAAY;;ICEZC,cAuFX;AAvFD,WAAYA,cAAc;;EAEtBA,qCAAmB;EACnBA,uCAAqB;EACrBA,6CAA2B;;EAG3BA,6CAA2B;EAC3BA,2CAAyB;EACzBA,iDAA+B;;EAG/BA,yCAAuB;EACvBA,uDAAqC;EACrCA,+BAAa;EACbA,iCAAe;EACfA,iCAAe;EACfA,mCAAiB;EACjBA,mDAAiC;EACjCA,mDAAiC;;EAGjCA,qCAAmB;EACnBA,uCAAqB;EACrBA,uCAAqB;EACrBA,yCAAuB;;EAGvBA,+BAAa;EACbA,qCAAmB;EACnBA,mDAAiC;EACjCA,mDAAiC;;EAGjCA,mCAAiB;EACjBA,+CAA6B;EAC7BA,2CAAyB;EACzBA,+DAA6C;EAC7CA,uCAAqB;EACrBA,mCAAiB;EACjBA,iCAAe;EACfA,+CAA6B;;EAG7BA,qCAAmB;EACnBA,mCAAiB;;EAGjBA,+BAAa;EACbA,qCAAmB;EACnBA,+BAAa;EACbA,mCAAiB;EACjBA,iCAAe;EACfA,uCAAqB;EACrBA,+BAAa;EACbA,qCAAmB;EACnBA,iCAAe;EACfA,iCAAe;EACfA,+BAAa;EACbA,6BAAW;EACXA,+BAAa;EACbA,iCAAe;EACfA,uCAAqB;EACrBA,iCAAe;;EAGfA,iCAAe;EACfA,mCAAiB;EACjBA,qCAAmB;;EAGnBA,+BAAa;EACbA,mCAAiB;EACjBA,mCAAiB;EACjBA,6BAAW;;EAGXA,6BAAW;;EAGXA,iCAAe;;EAGfA,6BAAW;EACXA,iCAAe;EACfA,+BAAa;EACbA,iCAAe;AACnB,CAAC,EAvFWA,cAAc,KAAdA,cAAc;;ICoBbC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CACzBrL,MAAc,EACd2K,MAAqC;EAErC,IAAI3K,MAAM,CAACsL,aAAa,KAAK5Q,SAAS,KAAKsF,MAAM,CAACuL,OAAO,IAAIvL,MAAM,CAACwI,MAAM,CAAC,EAAE;IACzE,IAAMgD,YAAY,GACd,uDAAoDxL,MAAM,CAAC9D,EAAE,uFACM,sEACA,kCACpC;IACnClE,MAAM,CAACC,KAAK,CAACuT,YAAY,CAAC;IAC1B,MAAM,IAAIC,KAAK,CAACD,YAAY,CAAC;;EAGjCxL,MAAM,CAAC2K,MAAM,GAAGA,MAAM;EACtB,OAAO3K,MAAM;AACjB,CAAC;AAED;;;;;AAKA,AAAO,IAAM0L,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAClCC,YAA+B,EAC/BC,SAAuD;EAEvD,IAAI,CAACD,YAAY,EAAE,OAAOA,YAAY;EAEtC,IAAIC,SAAS,CAACD,YAAY,CAAC,EAAE,OAAOA,YAAY;EAEhD,IAAIA,YAAY,CAACE,aAAa,EAAE;IAC5B,OAAOH,yBAAyB,CAACC,YAAY,CAACE,aAAa,EAAED,SAAS,CAAC;;EAG3E,OAAO,IAAI;AACf,CAAC;AAED,AAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,eAAkC;EACpE,OAAO,CAAC,CAACL,yBAAyB,CAC9BK,eAAe,EACf,UAACC,OAAY;IAAA,OAAKA,OAAO,CAACC,OAAO,IAAID,OAAO,CAACC,OAAO,CAACC,WAAW,EAAE,KAAK,QAAQ;IAClF;AACL,CAAC;AAED,AAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAC3BrV,KAAoB,EACpBsV,QAAW,EACXC,WAA6C;EAE7C,IAAIA,WAAW,EAAE;IACb,OAAQ,OAAOvV,KAAK,KAAKuV,WAAW,GAAGvV,KAAK,GAAGsV,QAAQ;;EAE3D,OAAQtV,KAAK,KAAK4D,SAAS,GAAG5D,KAAK,GAAGsV,QAAQ;AAClD,CAAC;;ACvEM,IAAME,WAAW,GAAG;EACvBC,WAAW,EAAE,SAAAA,YAACC,MAIb;IAAA,OAAkB,UAAC7F,QAAQ,EAAEkC,QAAQ;MAClC,IAAM1L,KAAK,GAAG0L,QAAQ,EAAE;MACxB,IAAI1L,KAAK,CAACqD,gBAAgB,EAAE;MAC5B,IAAM4E,cAAc,GAAGE,SAAS,CAACL,iBAAiB,CAAC9H,KAAK,CAAC;MACzD,IAAMsP,eAAe,GAAGrH,cAAc,CACjCsH,KAAK,CAACF,MAAM,CAACG,UAAU,EAAEH,MAAM,CAACI,QAAQ,GAAG,CAAC,CAAC,CAC7C1H,MAAM,CAAC,UAAAhJ,EAAE;QAAA,OAAIA,EAAE,IAAI5C,UAAU,CAACU,YAAY,CAACmD,KAAK,CAACuB,OAAO,CAACxC,EAAE,CAAC,CAAC;QAAa;MAC/EyK,QAAQ,CACJS,YAAY,CAAC0C,WAAW,CAAC;QACrBvH,OAAO,EAAEkK,eAAe;QACxB1C,KAAK,EAAE,CAAC,CAACyC,MAAM,CAACzC;OACnB,CAAC,CACL;KACJ;;CACJ;;ACPM,IAAM8C,gBAAgB,GAAG;;;;;EAK5BC,cAAc,eAAEzB,gBAAgB,CAC5B;IACInP,EAAE,EAAE,kBAAkB;IACtBoP,aAAa,EAAE;GACT,EACV,UAAAyB,IAAA;QAAGzC,OAAO,GAAAyC,IAAA,CAAPzC,OAAO;MAAEO,aAAa,GAAAkC,IAAA,CAAblC,aAAa;MAAEC,aAAa,GAAAiC,IAAA,CAAbjC,aAAa;IACpC,IAAIR,OAAO,CAAC0C,SAAS,KAAK,QAAQ,EAAE;MAChC,IAAI1T,UAAU,CAACQ,UAAU,CAACwQ,OAAO,CAAC9Q,IAAI,CAAC,EAAE;QACrCqR,aAAa,CACTR,sBAAsB,CAAC1C,aAAa,CAACsF,SAAS,EAAE;UAC5CC,UAAU,EAAE5C,OAAO,CAAC9Q,IAAI;;;;UAKxB8J,KAAK,EAAE,CAACgH,OAAO,CAAC9Q,IAAI;SACvB,CAAC,CACL;;KAER,MAAM;;MAGH,IAAMgH,gBAAgB,GAAGD,sBAAsB,CAACuK,aAAa,EAAE,CAAC;MAChE,IAAIxR,UAAU,CAACU,YAAY,CAACsQ,OAAO,CAAC9Q,IAAI,CAAC,IAAI,CAACgH,gBAAgB,EAAE;QAC5D,IAAI8J,OAAO,CAAC6C,OAAO,EAAE;;UAEjBtC,aAAa,CACTzD,YAAY,CAACgG,eAAe,CAAC;YACzBtO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C,EAAE;YACvBmR,SAAS,EAAE;WACd,CAAC,CACL;UACDxC,aAAa,CACTzD,YAAY,CAACkG,iBAAiB,CAAC;YAC3BjI,KAAK,EAAEiF,OAAO,CAACiD,gBAAgB;YAC/BzO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C;WACxB,CAAC,CACL;SACJ,MAAM,IAAIoO,OAAO,CAACkD,QAAQ,EAAE;;UAEzB,IAAMC,cAAc,GAAGnI,SAAS,CAACH,iBAAiB,CAAC2F,aAAa,EAAE,CAAC;UACnE,IAAI,OAAO2C,cAAc,KAAK,QAAQ,EAAE;;YAEpC,IAAId,UAAU,GAAGc,cAAc;YAC/B,IAAIb,QAAQ,GAAGtC,OAAO,CAACiD,gBAAgB;YACvC,IAAIZ,UAAU,GAAGC,QAAQ,EAAE;cAAA,IAAAc,KAAA,GACE,CAACd,QAAQ,EAAED,UAAU,CAAC;cAA9CA,UAAU,GAAAe,KAAA;cAAEd,QAAQ,GAAAc,KAAA;;YAGzB7C,aAAa,CAACyB,WAAW,CAACC,WAAW,CAAC;cAAEI,UAAU,EAAVA,UAAU;cAAEC,QAAQ,EAARA;aAAU,CAAC,CAAC;WACnE,MAAM;;;YAGH/B,aAAa,CACTzD,YAAY,CAACgG,eAAe,CAAC;cACzBtO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C,EAAE;cACvBmR,SAAS,EAAE;aACd,CAAC,CACL;YACDxC,aAAa,CACTzD,YAAY,CAACkG,iBAAiB,CAAC;cAC3BjI,KAAK,EAAEiF,OAAO,CAACiD,gBAAgB;cAC/BzO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C;aACxB,CAAC,CACL;;SAER,MAAM;;UAEH2O,aAAa,CACTzD,YAAY,CAACgG,eAAe,CAAC;YACzBtO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C,EAAE;YACvBmR,SAAS,EAAE;WACd,CAAC,CACL;UACDxC,aAAa,CACTzD,YAAY,CAACkG,iBAAiB,CAAC;YAC3BjI,KAAK,EAAEiF,OAAO,CAACiD,gBAAgB;YAC/BzO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C;WACxB,CAAC,CACL;;OAER,MAAM;QACH,IAAI,CAACoO,OAAO,CAAC6C,OAAO,IAAI,CAAC3M,gBAAgB,EAAE;UACvCqK,aAAa,CAACzD,YAAY,CAACyC,cAAc,EAAE,CAAC;;QAEhDgB,aAAa,CACTzD,YAAY,CAACkG,iBAAiB,CAAC;UAC3BjI,KAAK,EAAEiF,OAAO,CAACiD,gBAAgB;UAC/BzO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C;SACxB,CAAC,CACL;;;GAGZ,CACJ;;;;;EAKDyR,iBAAiB,eAAEtC,gBAAgB,CAC/B;IACInP,EAAE,EAAE,qBAAqB;IACzBoP,aAAa,EAAE;GACT,EACV,UAAAsC,KAAA;QAAGtD,OAAO,GAAAsD,KAAA,CAAPtD,OAAO;MAAEO,aAAa,GAAA+C,KAAA,CAAb/C,aAAa;MAAEC,aAAa,GAAA8C,KAAA,CAAb9C,aAAa;IACpCD,aAAa,CACTzD,YAAY,CAACkG,iBAAiB,CAAC;MAC3BjI,KAAK,EAAEiF,OAAO,CAACiD,gBAAgB;MAC/BzO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C;KACxB,CAAC,CACL;IACD,IAAIoO,OAAO,CAACuD,QAAQ,EAAE;;;;MAIlB,IAAIlO,mBAAmB,CAACmL,aAAa,EAAE,CAAC,KAAK,CAAC,EAAE;QAC5CD,aAAa,CACTR,sBAAsB,CAAC1C,aAAa,CAACsF,SAAS,EAAE;UAC5CC,UAAU,EAAE5C,OAAO,CAAC9Q,IAAI;UACxB8J,KAAK,EAAE,CAACgH,OAAO,CAAC9Q,IAAI;SACvB,CAAC,CACL;;KAER,MAAM,IAAI8Q,OAAO,CAACwD,QAAQ,IAAIxU,UAAU,CAACU,YAAY,CAACsQ,OAAO,CAAC9Q,IAAI,CAAC,EAAE;MAClEqR,aAAa,CACTzD,YAAY,CAACgG,eAAe,CAAC;QACzBtO,MAAM,EAAEwL,OAAO,CAAC9Q,IAAI,CAAC0C,EAAE;QACvBmR,SAAS,EAAE/C,OAAO,CAAC6C;OACtB,CAAC,CACL;;GAER,CACJ;;;;EAIDY,cAAc,eAAE1C,gBAAgB,CAC5B;IACInP,EAAE,EAAE,mBAAmB;IACvBoP,aAAa,EAAE;GACT,EACV,UAAA0C,KAAA;QAAG1D,OAAO,GAAA0D,KAAA,CAAP1D,OAAO;MAAEO,aAAa,GAAAmD,KAAA,CAAbnD,aAAa;MAAEC,aAAa,GAAAkD,KAAA,CAAblD,aAAa;IACpC,IAAMtR,IAAI,GAAG8Q,OAAO,CAAC2D,WAAW;IAChC,IAAI,CAACzI,iBAAiB,CAACsF,aAAa,EAAE,EAAEtR,IAAI,CAAC,EAAE;MAC3C,IAAIF,UAAU,CAACU,YAAY,CAACR,IAAI,CAAC,EAAE;QAC/BqR,aAAa,CACTzD,YAAY,CAAC0C,WAAW,CAAC;UACrBvH,OAAO,EAAE,CAAC/I,IAAI,CAAC0C,EAAE,CAAC;UAClB6N,KAAK,EAAE;SACV,CAAC,CACL;;;GAGZ,CACJ;;;;;EAKDmE,YAAY,eAAE7C,gBAAgB,CAC1B;IACInP,EAAE,EAAE,iBAAiB;IACrBoP,aAAa,EAAE;GACT,EACV,UAAA6C,KAAA;QAAG7D,OAAO,GAAA6D,KAAA,CAAP7D,OAAO;MAAEO,aAAa,GAAAsD,KAAA,CAAbtD,aAAa;MAAEC,aAAa,GAAAqD,KAAA,CAAbrD,aAAa;IACpC,IAAItF,iBAAiB,CAACsF,aAAa,EAAE,EAAER,OAAO,CAAC8D,WAAW,CAAC,EAAE;;MAEzD;;IAGJ,IAAQH,WAAW,GAAoB3D,OAA8B,CAA7D2D,WAAW;MAAExI,aAAa,GAAK6E,OAA8B,CAAhD7E,aAAa;IAClC,IAAM4I,YAAY,GAAG5I,aAAa,CAACzJ,MAAM,GAAG,CAAC,GAAGyJ,aAAa,GAAG,CAACwI,WAAW,CAAC;IAC7EpD,aAAa,CACTR,sBAAsB,CAAC1C,aAAa,CAAC2G,SAAS,EAAAC,QAAA,KACvCjE,OAAO;MACVhH,KAAK,EAAE+K;MACV,CAAC,CACL;GACJ,CACJ;;;;;EAKDC,SAAS,eAAEjD,gBAAgB,CAAC;IACxBnP,EAAE,EAAE,YAAY;IAChBoP,aAAa,EAAE;GACT,CAAC;;;;EAIXkD,eAAe,eAAEnD,gBAAgB,CAAC;IAC9BnP,EAAE,EAAE,kBAAkB;IACtBoP,aAAa,EAAE;GACT,CAAC;;;;;EAKX2B,SAAS,eAAE5B,gBAAgB,CAAC;IACxBnP,EAAE,EAAE,YAAY;IAChBoP,aAAa,EAAE;GACT,CAAC;;;;EAIX1D,gBAAgB,eAAEyD,gBAAgB,CAC9B;IACInP,EAAE,EAAE,oBAAoB;IACxBqP,OAAO,EAAE,CAAC,WAAW,CAAC;IACtB/C,MAAM,EAAE;MACJrM,IAAI,EAAE,mBAAmB;MACzBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,KAAK;MAClB+F,IAAI,EAAErD,cAAc,CAACsD,gBAAgB;MACrCC,QAAQ,EAAE;;GAER,EACV,UAAAC,KAAA;QAAG/D,aAAa,GAAA+D,KAAA,CAAb/D,aAAa;MAAEC,aAAa,GAAA8D,KAAA,CAAb9D,aAAa;IAC3B,IAAMxM,YAAY,GAAGD,kBAAkB,CAACyM,aAAa,EAAE,CAAC;IACxD,IAAIxR,UAAU,CAACQ,UAAU,CAACwE,YAAY,CAAC,EAAE;MACrCuM,aAAa,CACTR,sBAAsB,CAAC1C,aAAa,CAACsF,SAAS,EAAE;QAC5CC,UAAU,EAAE5O,YAAY;QACxBgF,KAAK,EAAE,CAAChF,YAAY;OACvB,CAAC,CACL;KACJ,MAAM;MACHtG,MAAM,CAACW,IAAI,CACP,wEAAwE,GACpE,oEAAoE,CAC3E;;GAER,CACJ;;;;;EAKDkW,mBAAmB,eAAExD,gBAAgB,CACjC;IACInP,EAAE,EAAE,wBAAwB;IAC5BoP,aAAa,EAAE;GACT,EACV,UAAAwD,KAAA;QAAGxE,OAAO,GAAAwE,KAAA,CAAPxE,OAAO;MAAEO,aAAa,GAAAiE,KAAA,CAAbjE,aAAa;MAAEC,aAAa,GAAAgE,KAAA,CAAbhE,aAAa;;;;;;IAMpC,IAAMiE,WAAW,GAAGxJ,WAAW,CAACuF,aAAa,EAAE,EAAER,OAAO,CAACrI,aAAa,CAAC;IACvE,IAAI8M,WAAW,EAAE;MACb,IAAMC,YAAY,GAAGxJ,iBAAiB,CAACsF,aAAa,EAAE,EAAEiE,WAAW,CAAC;MACpE,IAAI,CAACC,YAAY,EAAE;;;;;QAKf,IAAI1V,UAAU,CAACU,YAAY,CAAC+U,WAAW,CAAC,EAAE;UACtClE,aAAa,CACTzD,YAAY,CAAC0C,WAAW,CAAC;YACrBvH,OAAO,EAAE,CAAC+H,OAAO,CAACrI,aAAa,CAAC;YAChC8H,KAAK,EAAE;WACV,CAAC,CACL;SACJ,MAAM;UACHc,aAAa,CAACzD,YAAY,CAACyC,cAAc,EAAE,CAAC;;;;IAKxDgB,aAAa,CACTzD,YAAY,CAAC6H,eAAe,CAAC;MACzBhN,aAAa,EAAEqI,OAAO,CAACrI,aAAa;MACpCiN,MAAM,EAAE5E,OAAO,CAAC6E,OAAO,GAAG,CAAC;MAC3BC,MAAM,EAAE9E,OAAO,CAAC+E,OAAO,GAAG;KAC7B,CAAC,CACL;GACJ;CAER;;ACjSM,IAAMC,cAAc,GAAG;;;;EAI1BC,aAAa,eAAElE,gBAAgB,CAC3B;IACInP,EAAE,EAAE,gBAAgB;IACpBqP,OAAO,EAAE,CAAC,OAAO,CAAC;IAClBtL,iBAAiB,EAAE,IAAI;IACvBE,UAAU,EAAE7G,UAAU,CAACQ,UAAU;IACjC0O,MAAM,EAAE;MACJrM,IAAI,EAAE,gBAAgB;MACtBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBP,KAAK,EAAE,SAAS;MAChBsG,IAAI,EAAErD,cAAc,CAACoE;;GAEnB,EACV,UAAAzC,IAAA;QAAG5P,KAAK,GAAA4P,IAAA,CAAL5P,KAAK;MAAE0N,aAAa,GAAAkC,IAAA,CAAblC,aAAa;IACnBA,aAAa,CACTR,sBAAsB,CAACwC,gBAAgB,CAACI,SAAS,EAAE;MAC/C3J,KAAK,EAAEnG,KAAK,CAACoN;KAChB,CAAC,CACL;IACD,OAAO7P,SAAS;GACnB,CACJ;;;;EAID+U,cAAc,eAAEpE,gBAAgB,CAAC;IAC7BnP,EAAE,EAAE,kBAAkB;IACtBqP,OAAO,EAAE,CAAC,QAAQ,CAAC;IACnB/C,MAAM,EAAE;MACJrM,IAAI,EAAE,kBAAkB;MACxBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBP,KAAK,EAAE,SAAS;MAChBsG,IAAI,EAAErD,cAAc,CAACsE;KACxB;IACDjG,kBAAkB,EAAG,SAAAA,mBAAAiE,KAAA;UAAGnL,OAAO,GAAAmL,KAAA,CAAPnL,OAAO;QAAEoH,aAAa,GAAA+D,KAAA,CAAb/D,aAAa;MAC1C,IAAMC,YAAY,GAAG,IAAI/N,GAAG,EAAU;MACtC0G,OAAO,CAACzC,GAAG,CAAC,UAAAhB,MAAM;;;QAGd,IAAI,CAAC6K,aAAa,CAACvN,GAAG,CAAC0C,MAAM,CAAC,EAAE8K,YAAY,CAACvN,GAAG,CAACyC,MAAM,CAAC;OAC3D,CAAC;MACF,OAAO8K,YAAY;;GAEjB,CAAC;;;;EAIX+F,cAAc,eAAEtE,gBAAgB,CAAC;IAC7BnP,EAAE,EAAE,iBAAiB;IACrBqP,OAAO,EAAE,CAAC,QAAQ,CAAC;IACnB/C,MAAM,EAAE;MACJrM,IAAI,EAAE,iBAAiB;MACvBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBP,KAAK,EAAE,SAAS;MAChBsG,IAAI,EAAErD,cAAc,CAACvB;KACxB;IACDJ,kBAAkB,EAAG,SAAAA,mBAAAmE,KAAA;UAAGlE,aAAa,GAAAkE,KAAA,CAAblE,aAAa;MACjC,IAAIA,aAAa,CAACpN,IAAI,KAAK,CAAC,EAAE,OAAO,IAAI;MACzC,OAAO,IAAIT,GAAG,EAAU;;GAEtB,CAAC;;;;EAIX+T,cAAc,eAAEvE,gBAAgB,CAAC;IAC7BnP,EAAE,EAAE,kBAAkB;IACtBwE,cAAc,EAAE;MACZtF,IAAI,EAAE+P,YAAY,CAAC0E,IAAI;MACvBC,WAAW,EAAE;KAChB;IACDtH,MAAM,EAAE;MACJrM,IAAI,EAAE,qBAAqB;MAC3BsM,OAAO,EAAE,IAAI;MACbgG,IAAI,EAAErD,cAAc,CAAC2E,IAAI;MACzBpB,QAAQ,EAAE;;GAER,CAAC;;;;;EAKXqB,iBAAiB,eAAE3E,gBAAgB,CAAC;;IAEhCnP,EAAE,EAAE,qBAAqB;IACzBwE,cAAc,EAAE;MACZtF,IAAI,EAAE+P,YAAY,CAAC8E,OAAO;MAC1BH,WAAW,EAAE,EAAE;MACfI,UAAU,EAAE;KACf;IACD1H,MAAM,EAAE;MACJrM,IAAI,EAAE,wBAAwB;MAC9BsM,OAAO,EAAE,IAAI;MACbgG,IAAI,EAAErD,cAAc,CAAC+E,OAAO;MAC5BxB,QAAQ,EAAE;;GAER,CAAC;;;;EAIXyB,cAAc,eAAE/E,gBAAgB,CAAC;IAC7BnP,EAAE,EAAE,kBAAkB;IACtBwE,cAAc,EAAE;MAAEtF,IAAI,EAAE+P,YAAY,CAACkF,IAAI;MAAEH,UAAU,EAAE,GAAG;MAAEJ,WAAW,EAAE;KAAK;IAC9EtH,MAAM,EAAE;MACJrM,IAAI,EAAE,qBAAqB;MAC3BsM,OAAO,EAAE,IAAI;MACbgG,IAAI,EAAErD,cAAc,CAACkF,cAAc;MACnC3B,QAAQ,EAAE;;GAER,CAAC;;;;EAIX4B,eAAe,eAAElF,gBAAgB,CAAC;IAC9BnP,EAAE,EAAE,oBAAoB;IACxB2H,eAAe,EAAE,SAAAA,gBAACrK,IAAwB;MAAA,OAAMA,IAAI,GAAGA,IAAI,CAAC2C,IAAI,CAAC+P,WAAW,EAAE,GAAGxR,SAAS;KAAC;IAC3F8N,MAAM,EAAE;MACJrM,IAAI,EAAE,cAAc;MACpBsM,OAAO,EAAE,IAAI;MACbN,KAAK,EAAE;;GAEL,CAAC;;;;EAIXqI,eAAe,eAAEnF,gBAAgB,CAAC;IAC9BnP,EAAE,EAAE,oBAAoB;IACxB2H,eAAe,EAAE,SAAAA,gBAACrK,IAAwB;MAAA,OAAMA,IAAI,GAAGA,IAAI,CAAC8C,IAAI,GAAG5B,SAAS;KAAC;IAC7E8N,MAAM,EAAE;MACJrM,IAAI,EAAE,cAAc;MACpBsM,OAAO,EAAE,IAAI;MACbN,KAAK,EAAE;;GAEL,CAAC;;;;EAIXsI,eAAe,eAAEpF,gBAAgB,CAAC;IAC9BnP,EAAE,EAAE,oBAAoB;IACxB2H,eAAe,EAAE,SAAAA,gBAACrK,IAAwB;MAAA,OAAMA,IAAI,GAAGA,IAAI,CAACiB,OAAO,GAAGC,SAAS;KAAC;IAChF8N,MAAM,EAAE;MACJrM,IAAI,EAAE,cAAc;MACpBsM,OAAO,EAAE,IAAI;MACbN,KAAK,EAAE;;GAEL,CAAC;;;;EAIXuI,iBAAiB,eAAErF,gBAAgB,CAAC;IAChCnP,EAAE,EAAE,qBAAqB;IACzBqP,OAAO,EAAE,CAAC,QAAQ,CAAC;IACnBpE,MAAM,EAAE;MACJjL,EAAE,EAAEW,SAAS,CAACC,eAAe;MAC7BoG,YAAY,EAAE;KACjB;IACDsF,MAAM,EAAE;MACJrM,IAAI,EAAE,mBAAmB;MACzBsM,OAAO,EAAE,IAAI;MACbN,KAAK,EAAE;;GAEL,CAAC;;;;;EAKXwI,sBAAsB,eAAEtF,gBAAgB,CAAC;IACrCnP,EAAE,EAAE,2BAA2B;IAC/BiL,MAAM,EAAE;MACJjL,EAAE,EAAEW,SAAS,CAACE,gBAAgB;MAC9BmG,YAAY,EAAE;KACjB;IACDsF,MAAM,EAAE;MACJrM,IAAI,EAAE,oBAAoB;MAC1BsM,OAAO,EAAE,IAAI;MACbN,KAAK,EAAE;;GAEL,CAAC;;;;EAIXyI,gBAAgB,eAAEvF,gBAAgB,CAC9B;IACInP,EAAE,EAAE,oBAAoB;IACxBqP,OAAO,EAAE,CAAC,QAAQ;GACZ,EACV,UAAAyC,KAAA;QAAGlD,aAAa,GAAAkD,KAAA,CAAblD,aAAa;IACZ,IAAMzL,gBAAgB,GAAGD,sBAAsB,CAAC0L,aAAa,EAAE,CAAC;IAChE,IAAIzL,gBAAgB,EAAEA,gBAAgB,EAAE;GAC3C,CACJ;;;;EAIDwR,cAAc,eAAExF,gBAAgB,CAAC;IAC7BnP,EAAE,EAAE,kBAAkB;IACtBiL,MAAM,EAAE;MACJjL,EAAE,EAAEW,SAAS,CAACG,QAAQ;MACtBkG,YAAY,EAAE;KACjB;IACDsF,MAAM,EAAE;MACJrM,IAAI,EAAE,kBAAkB;MACxBsM,OAAO,EAAE,IAAI;MACbgG,IAAI,EAAErD,cAAc,CAAC2E,IAAI;MACzBpB,QAAQ,EAAE;;GAER;CACb;;AC/NM,IAAMmC,YAAY,GAAG;;;;EAIxBC,SAAS,eAAE1F,gBAAgB,CAAC;IACxBnP,EAAE,EAAE,YAAY;IAChB+D,iBAAiB,EAAE,IAAI;IACvBsL,OAAO,EAAE,CAAC,QAAQ,CAAC;IACnB/C,MAAM,EAAE;MACJrM,IAAI,EAAE,gBAAgB;MACtBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBP,KAAK,EAAE,SAAS;MAChBsG,IAAI,EAAErD,cAAc,CAAC4F;;GAEnB,CAAC;;;;EAIXC,YAAY,eAAE5F,gBAAgB,CAAC;IAC3BnP,EAAE,EAAE,eAAe;IACnBsM,MAAM,EAAE;MACJrM,IAAI,EAAE,eAAe;MACrBsM,OAAO,EAAE,IAAI;MACbyI,OAAO,EAAE,iBAAiB;MAC1BzC,IAAI,EAAErD,cAAc,CAAC+F;;GAEnB,CAAC;;;;EAIXC,WAAW,eAAE/F,gBAAgB,CAAC;IAC1BnP,EAAE,EAAE,cAAc;IAClBsM,MAAM,EAAE;MACJrM,IAAI,EAAE,cAAc;MACpBsM,OAAO,EAAE,IAAI;MACbyI,OAAO,EAAE,cAAc;MACvBzC,IAAI,EAAErD,cAAc,CAACiG;;GAEnB,CAAC;;;;EAIXC,aAAa,eAAEjG,gBAAgB,CAAC;IAC5BnP,EAAE,EAAE,gBAAgB;IACpB+D,iBAAiB,EAAE,IAAI;IACvBuI,MAAM,EAAE;MACJrM,IAAI,EAAE,gBAAgB;MACtBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBP,KAAK,EAAE,SAAS;MAChBsG,IAAI,EAAErD,cAAc,CAACmG;;GAEnB,CAAC;;;;EAIXC,WAAW,eAAEnG,gBAAgB,CAAC;IAC1BnP,EAAE,EAAE,cAAc;IAClB+D,iBAAiB,EAAE,IAAI;IACvBsL,OAAO,EAAE,CAAC,QAAQ,CAAC;IACnB/C,MAAM,EAAE;MACJrM,IAAI,EAAE,cAAc;MACpBsM,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBP,KAAK,EAAE,SAAS;MAChBsG,IAAI,EAAErD,cAAc,CAACqG;;GAEnB;CACb;;IClEY9J,aAAa,gBAAA4G,QAAA,KACnB1B,gBAAgB,EAChByC,cAAc,EACdwB,YAAY,CAClB;AAED,AAAO,IAAM7J,oBAAoB,GAAG,CAChCU,aAAa,CAACmF,cAAc,EAC5BnF,aAAa,CAACgG,iBAAiB,EAC/BhG,aAAa,CAACoG,cAAc,EAC5BpG,aAAa,CAACuG,YAAY,EAC1BvG,aAAa,CAAC2G,SAAS,EACvB3G,aAAa,CAAC6G,eAAe,EAC7B7G,aAAa,CAACsF,SAAS,EACvBtF,aAAa,CAACC,gBAAgB,EAC9BD,aAAa,CAACkH,mBAAmB,CACpC;AAED,IAAa9H,kBAAkB,GAAG,CAC9BY,aAAa,CAAC4H,aAAa,EAC3B5H,aAAa,CAAC8H,cAAc,EAC5B9H,aAAa,CAACgI,cAAc,EAC5BhI,aAAa,CAACiI,cAAc;AAC5B;AACA;AACAjI,aAAa,CAACyI,cAAc,EAC5BzI,aAAa,CAAC4I,eAAe,EAC7B5I,aAAa,CAAC6I,eAAe,EAC7B7I,aAAa,CAAC8I,eAAe,EAC7B9I,aAAa,CAAC+I,iBAAiB,EAC/B/I,aAAa,CAACgJ,sBAAsB,EACpChJ,aAAa,CAACiJ,gBAAgB,CACjC;;AClCM,IAAMc,gBAAgB,GAAc;EACvCtU,UAAU,EAAE,mBAAmB;EAE/BE,yBAAyB,EAAE,IAAI;EAE/BmJ,cAAc,EAAE,EAAE;EAClBkL,wBAAwB,EAAE,EAAE;EAC5BnU,aAAa,EAAE,EAAE;EACjBE,aAAa,EAAE,EAAE;EACjBI,YAAY,EAAE,EAAE;EAChBE,gBAAgB,EAAE,EAAE;EAEpB4T,cAAc,EAAE,IAAI;EACpBC,wBAAwB,EAAE,EAAE;EAC5B3T,WAAW,EAAE,EAAE;EAEfM,QAAQ,EAAE,EAAE;EACZsT,kBAAkB,EAAE,EAAE;EACtBpT,OAAO,EAAE,EAAE;EACX6D,OAAO,EAAE,EAAE;EACX3D,YAAY,EAAE,EAAE;EAEhBqF,aAAa,EAAE,EAAE;EACjBjF,eAAe,EAAE,EAAE;EAEnBK,gBAAgB,EAAE,IAAI;EACtBE,YAAY,EAAE,EAAE;EAChBwS,UAAU,EAAE,eAAe;EAE3BtS,YAAY,EAAE,EAAE;EAChBe,gBAAgB,EAAE,KAAK;EAEvBE,cAAc,EAAEiH,aAAa,CAACyI,cAAc,CAAC1P,cAAc;EAE3DE,YAAY,EAAE,IAAI;EAClBE,SAAS,EAAE7D,SAAS,CAAC+G,GAAG;EAExBhD,SAAS,EAAE,EAAE;EAEbI,kBAAkB,EAAE,IAAI;EACxBE,gBAAgB,EAAE,GAAG;EACrBE,kBAAkB,EAAE,KAAK;EACzBE,4BAA4B,EAAE,IAAI;EAElCmB,SAAS,EAAE,IAAI;EAEfjB,kBAAkB,EAAE,KAAK;EACzBE,iBAAiB,EAAE;CACtB;;AClCD,IAAMkQ,QAAQ,GAAG;EACbC,4BAA4B,WAAAA,6BACxB9U,KAAgB,EAChB6C,MAAoE;;IAEpE7C,KAAK,CAACG,yBAAyB,IAAA4U,eAAA,GAAGlS,MAAM,CAACsK,OAAO,YAAA4H,eAAA,GAAI,IAAI;GAC3D;EACD7K,iBAAiB,WAAAA,kBAAClK,KAAgB,EAAE6C,MAAyC;IACzE7C,KAAK,CAACsJ,cAAc,GAAGzG,MAAM,CAACsK,OAAO;GACxC;EACDhD,2BAA2B,WAAAA,4BAACnK,KAAgB,EAAE6C,MAA+B;IACzE7C,KAAK,CAACwU,wBAAwB,GAAG3R,MAAM,CAACsK,OAAO;GAClD;EACD/C,cAAc,WAAAA,eAACpK,KAAgB,EAAE6C,MAAmC;IAChE,IAAMxC,aAAa,GAAkB,EAAE;IACvCwC,MAAM,CAACsK,OAAO,CAACxK,GAAG,CAAC,UAAAmG,CAAC;MAAA,OAAKzI,aAAa,CAACyI,CAAC,CAAC/J,EAAE,CAAC,GAAG+J,CAAC;KAAC,CAAC;IAClD,IAAM1D,OAAO,GAAGvC,MAAM,CAACsK,OAAO,CAACxK,GAAG,CAAC,UAAAmG,CAAC;MAAA,OAAIA,CAAC,CAAC/J,EAAE;MAAC;IAE7CiB,KAAK,CAACK,aAAa,GAAGA,aAAwB;IAC9CL,KAAK,CAACO,aAAa,GAAG6E,OAAO;GAChC;EACDoG,yBAAyB,WAAAA,0BAACxL,KAAgB,EAAE6C,MAAmE;2BAC5DA,MAAM,CAACsK,OAAO;IAA5DnN,KAAK,CAACW,YAAY,GAAAqU,gBAAA;IAAEhV,KAAK,CAACa,gBAAgB,GAAAmU,gBAAA;GAC9C;EACDC,iBAAiB,WAAAA,kBAACjV,KAAgB,EAAE6C,MAAsC;IACtE,IAAM4R,cAAc,GAAG5R,MAAM,CAACsK,OAAO;IACrC,IAAA1D,mBAAA,GAAuDzL,kBAAkB,CAAC,aAAa,EAAEyW,cAAc,CAAC;MAAhF1T,WAAW,GAAA0I,mBAAA,CAA3BhK,cAAc;MAAerB,aAAa,GAAAqL,mBAAA,CAAbrL,aAAa;IAClD4B,KAAK,CAACyU,cAAc,GAAGA,cAAc;IACrCzU,KAAK,CAACe,WAAW,GAAGA,WAAW;IAC/Bf,KAAK,CAAC0U,wBAAwB,GAAGtW,aAAa;GACjD;EACD8W,WAAW,WAAAA,YAAClV,KAAgB,EAAE6C,MAAsC;IAChE,IAAMxB,QAAQ,GAAGwB,MAAM,CAACsK,OAAO;IAC/B,IAAAgI,oBAAA,GAAiDnX,kBAAkB,CAAC,OAAO,EAAEqD,QAAQ,CAAC;MAA9D8E,KAAK,GAAAgP,oBAAA,CAArB1V,cAAc;MAASrB,aAAa,GAAA+W,oBAAA,CAAb/W,aAAa;IAC5C4B,KAAK,CAACqB,QAAQ,GAAGA,QAAQ;IACzBrB,KAAK,CAAC2U,kBAAkB,GAAGvW,aAAa;IAExC,IAAMmD,OAAO,GAAY,EAAE;IAC3B4E,KAAK,CAAC0B,OAAO,CAAC,UAAAL,CAAC;MACX,IAAIA,CAAC,EAAEjG,OAAO,CAACiG,CAAC,CAACzI,EAAE,CAAC,GAAGyI,CAAC;KAC3B,CAAC;IACF,IAAMpC,OAAO,GAAGe,KAAK,CAACxD,GAAG,CAAC,UAAA6E,CAAC;MAAA,OAAKA,CAAC,GAAGA,CAAC,CAACzI,EAAE,GAAG,IAAI;KAAC,CAAC;IACjD,IAAM0C,YAAY,GAAG2D,OAAO,CAAC2C,MAAM,CAAC,UAAAP,CAAC;MAAA,OAAI,CAAC,CAACA,CAAC;MAAa;IAEzDxH,KAAK,CAACuB,OAAO,GAAGA,OAAO;IACvBvB,KAAK,CAACoF,OAAO,GAAGA,OAAO;IACvBpF,KAAK,CAACyB,YAAY,GAAGA,YAAY;;IAGjC,SAAA2T,EAAA,MAAAC,YAAA,GAA6BtT,MAAM,CAACC,IAAI,CAAChC,KAAK,CAACsC,YAAY,CAAC,EAAA8S,EAAA,GAAAC,YAAA,CAAAxW,MAAA,EAAAuW,EAAA,IAAE;MAAzD,IAAME,cAAc,GAAAD,YAAA,CAAAD,EAAA;MACrB,IAAI,CAAC7T,OAAO,CAAC+T,cAAc,CAAC,EAAE;QAC1B,OAAOtV,KAAK,CAACsC,YAAY,CAACgT,cAAc,CAAC;;;GAGpD;EACDC,gBAAgB,WAAAA,iBAACvV,KAAgB,EAAE6C,MAAyC;IACxE7C,KAAK,CAAC8G,aAAa,GAAGjE,MAAM,CAACsK,OAAO;GACvC;EACDqI,gBAAgB,WAAAA,iBAACxV,KAAgB,EAAE6C,MAAoC;IACnE7C,KAAK,CAAC6B,eAAe,GAAGgB,MAAM,CAACsK,OAAO;;IAGtC,SAAAsI,GAAA,MAAAC,aAAA,GAA6B3T,MAAM,CAACC,IAAI,CAAChC,KAAK,CAACsC,YAAY,CAAC,EAAAmT,GAAA,GAAAC,aAAA,CAAA7W,MAAA,EAAA4W,GAAA,IAAE;MAAzD,IAAMH,cAAc,GAAAI,aAAA,CAAAD,GAAA;MACrB,IAAIzV,KAAK,CAAC6B,eAAe,CAACyT,cAAc,CAAC,EAAE;QACvC,OAAOtV,KAAK,CAACsC,YAAY,CAACgT,cAAc,CAAC;;;GAGpD;EACDK,mBAAmB,WAAAA,oBAAC3V,KAAgB,EAAE6C,MAA2C;IAC7E7C,KAAK,CAACkC,gBAAgB,GAAGW,MAAM,CAACsK,OAAO;GAC1C;EACDyI,eAAe,WAAAA,gBAAC5V,KAAgB,EAAE6C,MAA6B;IAC3D7C,KAAK,CAACoC,YAAY,GAAGS,MAAM,CAACsK,OAAO;GACtC;EACDoF,cAAc,WAAAA,eAACvS,KAAgB;IAC3BA,KAAK,CAACoF,OAAO,CACR2C,MAAM,CAAC,UAAAhJ,EAAE;MAAA,OAAIA,EAAE,IAAI5C,UAAU,CAACU,YAAY,CAACmD,KAAK,CAACuB,OAAO,CAACxC,EAAE,CAAC,CAAC;MAAC,CAC9D4D,GAAG,CAAC,UAAA5D,EAAE;MAAA,OAAKA,EAAE,GAAIiB,KAAK,CAACsC,YAAY,CAACvD,EAAE,CAAC,GAAG,IAAI,GAAI,IAAI;KAAC,CAAC;GAChE;EACD4N,WAAW,WAAAA,YAAC3M,KAAgB,EAAE6C,MAA4D;IACtF,IAAI7C,KAAK,CAACqD,gBAAgB,EAAE;IAC5B,IAAIR,MAAM,CAACsK,OAAO,CAACP,KAAK,EAAE5M,KAAK,CAACsC,YAAY,GAAG,EAAE;IACjDO,MAAM,CAACsK,OAAO,CAAC/H,OAAO,CACjB2C,MAAM,CAAC,UAAAhJ,EAAE;MAAA,OAAIA,EAAE,IAAI5C,UAAU,CAACU,YAAY,CAACmD,KAAK,CAACuB,OAAO,CAACxC,EAAE,CAAC,CAAC;MAAC,CAC9D4D,GAAG,CAAC,UAAA5D,EAAE;MAAA,OAAKiB,KAAK,CAACsC,YAAY,CAACvD,EAAE,CAAC,GAAG,IAAI;KAAC,CAAC;GAClD;EACDkR,eAAe,WAAAA,gBAACjQ,KAAgB,EAAE6C,MAA6D;IAC3F,IAAI7C,KAAK,CAACqD,gBAAgB,EAAE;IAC5B,IAAMwS,QAAQ,GAAG,CAAC,CAAC7V,KAAK,CAACsC,YAAY,CAACO,MAAM,CAACsK,OAAO,CAACxL,MAAM,CAAC;IAC5D,IAAIkB,MAAM,CAACsK,OAAO,CAAC+C,SAAS,EAAElQ,KAAK,CAACsC,YAAY,GAAG,EAAE;IACrD,IAAIuT,QAAQ,EAAE,OAAO7V,KAAK,CAACsC,YAAY,CAACO,MAAM,CAACsK,OAAO,CAACxL,MAAM,CAAC,CAAC,KAC1D,IAAIxF,UAAU,CAACU,YAAY,CAACmD,KAAK,CAACuB,OAAO,CAACsB,MAAM,CAACsK,OAAO,CAACxL,MAAM,CAAC,CAAC,EAAE;MACpE3B,KAAK,CAACsC,YAAY,CAACO,MAAM,CAACsK,OAAO,CAACxL,MAAM,CAAC,GAAG,IAAI;;GAEvD;EACD+K,cAAc,WAAAA,eAAC1M,KAAgB;IAC3B,IAAIA,KAAK,CAACqD,gBAAgB,EAAE;IAC5B,IAAItB,MAAM,CAACC,IAAI,CAAChC,KAAK,CAACsC,YAAY,CAAC,CAACzD,MAAM,KAAK,CAAC,EAAEmB,KAAK,CAACsC,YAAY,GAAG,EAAE;GAC5E;EACDwT,oBAAoB,WAAAA,qBAAC9V,KAAgB,EAAE6C,MAA8B;IACjE7C,KAAK,CAACqD,gBAAgB,GAAGR,MAAM,CAACsK,OAAO;IACvC,IAAIpL,MAAM,CAACC,IAAI,CAAChC,KAAK,CAACsC,YAAY,CAAC,CAACzD,MAAM,KAAK,CAAC,EAAEmB,KAAK,CAACsC,YAAY,GAAG,EAAE;GAC5E;EACDsJ,iBAAiB,WAAAA,kBAAC5L,KAAgB,EAAE6C,MAAqC;IACrE7C,KAAK,CAACuD,cAAc,GAAGV,MAAM,CAACsK,OAAO;GACxC;EACDhB,OAAO,WAAAA,QAACnM,KAAgB,EAAE6C,MAA6D;IACnF7C,KAAK,CAACyD,YAAY,GAAGZ,MAAM,CAACsK,OAAO,CAACf,QAAQ;IAC5CpM,KAAK,CAAC2D,SAAS,GAAGd,MAAM,CAACsK,OAAO,CAAClB,KAAK;GACzC;EACD5B,iBAAiB,WAAAA,kBAACrK,KAAgB,EAAE6C,MAAgC;IAChE,SAAAkT,GAAA,MAAAC,aAAA,GAAuBjU,MAAM,CAACC,IAAI,CAACa,MAAM,CAACsK,OAAO,CAAC,EAAA4I,GAAA,GAAAC,aAAA,CAAAnX,MAAA,EAAAkX,GAAA,IAAE;MAA/C,IAAMhS,QAAQ,GAAAiS,aAAA,CAAAD,GAAA;MACf,IAAIhS,QAAQ,IAAI/D,KAAK,CAAC6D,SAAS,EAAE;MACjC7D,KAAK,CAAC6D,SAAS,CAACE,QAAQ,CAAC,GAAGlB,MAAM,CAACsK,OAAO,CAACpJ,QAAQ,CAAC;;GAE3D;EACDwJ,YAAY,WAAAA,aAACvN,KAAgB,EAAE6C,MAA6B;IACxD7C,KAAK,CAAC6D,SAAS,CAAChB,MAAM,CAACsK,OAAO,CAAC,GAAG,CAACnN,KAAK,CAAC6D,SAAS,CAAChB,MAAM,CAACsK,OAAO,CAAC;GACrE;EACD8I,qBAAqB,WAAAA,sBAACjW,KAAgB,EAAE6C,MAAmD;IACvF7C,KAAK,CAACiE,kBAAkB,GAAGpB,MAAM,CAACsK,OAAO;GAC5C;EACD+I,mBAAmB,WAAAA,oBAAClW,KAAgB,EAAE6C,MAA6B;IAC/D7C,KAAK,CAACmE,gBAAgB,GAAGtB,MAAM,CAACsK,OAAO;GAC1C;EACDgJ,qBAAqB,WAAAA,sBAACnW,KAAgB,EAAE6C,MAA8B;IAClE7C,KAAK,CAACqE,kBAAkB,GAAGxB,MAAM,CAACsK,OAAO;GAC5C;EACDiJ,+BAA+B,WAAAA,gCAACpW,KAAgB,EAAE6C,MAA8B;IAC5E7C,KAAK,CAACuE,4BAA4B,GAAG1B,MAAM,CAACsK,OAAO;GACtD;EACDgD,iBAAiB,WAAAA,kBAACnQ,KAAgB,EAAE6C,MAAkE;IAClG7C,KAAK,CAAC0F,SAAS,GAAG7C,MAAM,CAACsK,OAAO;GACnC;EACDkJ,qBAAqB,WAAAA,sBAACrW,KAAgB,EAAE6C,MAA8B;IAClE7C,KAAK,CAACyE,kBAAkB,GAAG5B,MAAM,CAACsK,OAAO;GAC5C;EACD2E,eAAe,WAAAA,gBAAC9R,KAAgB,EAAE6C,MAAwC;IACtE7C,KAAK,CAAC2E,iBAAiB,GAAG9B,MAAM,CAACsK,OAAO;GAC3C;EACDmJ,eAAe,WAAAA,gBAACtW,KAAgB;IAC5B,IAAI,CAACA,KAAK,CAAC2E,iBAAiB,EAAE;IAC9B3E,KAAK,CAAC2E,iBAAiB,GAAG,IAAI;;CAErC;AAEM,IAAA4R,YAAA,gBAAwDC,WAAW,CAAC;IACvExX,IAAI,EAAE,MAAM;IACZyX,YAAY,EAAElC,gBAAgB;IAC9BM,QAAQ,EAARA;GACH,CAAC;EAJsB5K,YAAY,GAAAsM,YAAA,CAArBG,OAAO;EAAyBC,WAAW,GAAAJ,YAAA,CAApBK,OAAO;;ACzJtC,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAuB;EACpD7c,SAAS,CAAC;IACN,IAAM8c,gBAAgB,GAAGC,KAAK,CAAC;MAAA,OAAM3U,kBAAkB,CAACyU,KAAK,CAACpL,QAAQ,EAAE,CAAC;MAAC;IAC1E,IAAMuL,iBAAiB,GAAG,SAApBA,iBAAiBA,CACnBxK,YAA2B,EAC3ByK,YAA2B;;;MAI3B,IAAIzK,YAAY,KAAKyK,YAAY,EAAE;;MAGnC,IAAMC,gBAAgB,GAAG5U,qBAAqB,CAACuU,KAAK,CAACpL,QAAQ,EAAE,CAAC;MAChE,IAAM0L,SAAS,GAAG,IAAI1Y,GAAG,CAASyY,gBAAgB,CAAC;MACnDL,KAAK,CAACtN,QAAQ,CACV0D,sBAAsB,CAAC1C,aAAa,CAAC6G,eAAe,EAAE;QAClD+F,SAAS,EAATA;OACH,CAAQ,CACZ;KACJ;IAED,IAAMC,oBAAoB,GAAG,CACzBP,KAAK,CAACQ,SAAS,CAACP,gBAAgB,CAACE,iBAAiB,CAAC,CAAC,CACvD;IACD,OAAO;MACH,SAAA7B,EAAA,MAAAmC,qBAAA,GAA0BF,oBAAoB,EAAAjC,EAAA,GAAAmC,qBAAA,CAAA1Y,MAAA,EAAAuW,EAAA;QAAzC,IAAMoC,WAAW,GAAAD,qBAAA,CAAAnC,EAAA;QAA0BoC,WAAW,EAAE;;KAChE;GACJ,EAAE,CAACV,KAAK,CAAC,CAAC;AACf,CAAC;;IC5BYW,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,gBAAwB;EACnD,IAAMZ,KAAK,GAAGxc,cAAc,CAAC;IACzB,IAAMqd,cAAc,GAAAvG,QAAA,KACbmD,gBAAgB;MACnBtU,UAAU,EAAEyX;MACf;IAED,OAAOE,cAAc,CAAC;MAClBD,cAAc,EAAEA,cAAqB;MACrCf,OAAO,EAAED,WAAW;MACpBkB,UAAU,EAAE,SAAAA,WAAAC,oBAAoB;QAAA,OAC5BA,oBAAoB,CAAC;UACjBC,iBAAiB,EAAE;SACtB,CAAC;;MACNC,QAAQ,EAAE;QAAEhZ,IAAI,cAAY0Y;;KAC/B,CAAC;GACL,CAAC;EACFb,gBAAgB,CAACC,KAAK,CAAC;EACvB,OAAOA,KAAK;AAChB,CAAC;AAED;;;AAGA,IAAamB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CACzBC,oBAAoE;oCACjEC,cAAoB,OAAAnd,KAAA,CAAAC,IAAA,OAAAA,IAAA,WAAAC,IAAA,MAAAA,IAAA,GAAAD,IAAA,EAAAC,IAAA;IAApBid,cAAoB,CAAAjd,IAAA,QAAAC,SAAA,CAAAD,IAAA;;EAEvB,IAAMqL,QAAQ,GAAG6R,WAAW,CACxB,UAACpY,KAAgB;IAAA,OAAKkY,oBAAoB,CAAA5c,KAAA,SAAI6c,cAAc,CAAC,CAACnY,KAAK,CAAC;;EACpE,CACCkY,oBAAoB,EAAA3c,MAAA,CAAK4c,cAAc,CAAC,CAC5C;EACD,OAAOE,WAAW,CAAC9R,QAAQ,CAAC;AAChC,CAAC;AAED;;;;AAIA,IAAa+R,MAAM,GAAG,SAATA,MAAMA,CAA6BC,aAAqC;qCAAKJ,cAAoB,OAAAnd,KAAA,CAAAS,KAAA,OAAAA,KAAA,WAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAApByc,cAAoB,CAAAzc,KAAA,QAAAP,SAAA,CAAAO,KAAA;;EAC1G,IAAM8N,QAAQ,GAAGgP,WAAW,EAAE;EAC9Bve,SAAS,CACL;IACIuP,QAAQ,CAAC+O,aAAa,CAAAjd,KAAA,SAAI6c,cAAc,CAAC,CAAC;GAC7C;EACD,CACC3O,QAAQ,EAAE+O,aAAa,EAAAhd,MAAA,CAAK4c,cAAc,CAAC,CAC/C;AACL,CAAC;AAED,IAAaM,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAyBF,aAAwC,EAAEpL,OAAgB;EAC9G,IAAM3D,QAAQ,GAAGgP,WAAW,EAAE;EAC9Bve,SAAS,CAAC;IACNuP,QAAQ,CAAC+O,aAAa,CAACpL,OAAO,CAAC,CAAC;GACnC,EAAE,CAAC3D,QAAQ,EAAE+O,aAAa,EAAEpL,OAAO,CAAC,CAAC;AAC1C,CAAC;;ACnED;;;;;AAMA,AAIO,IAAMuL,qBAAqB,GAA8B,SAAnDA,qBAAqBA;;EAE9B,IAAMC,KAAK,GACP,6EAA6E,GAC7E,uDAAuD;EAC3D,OAAOC;IAAMD,KAAK,EAAEA;oBAAgB;AACxC,CAAC;;ACMM,IAAME,aAAa,GAAiB;EACvChP,WAAW,EAAE,IAAI;EACjBiP,YAAY,EAAE,IAAI;EAClB7U,kBAAkB,EAAE,IAAI;EACxBE,gBAAgB,EAAE,GAAG;EACrBd,gBAAgB,EAAE,KAAK;EACvBkG,yBAAyB,EAAE,KAAK;EAChClF,kBAAkB,EAAE,KAAK;EACzB0U,0BAA0B,EAAE,KAAK;EACjCC,mBAAmB,EAAExO,aAAa,CAAC4I,eAAe,CAACrU,EAAE;EACrDka,uBAAuB,EAAEzO,aAAa,CAACyI,cAAc,CAAClU,EAAE;EACxDwF,4BAA4B,EAAE,IAAI;EAClC2U,aAAa,EAAER,qBAAqB;EACpCS,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE;CACT;AAED,IAAaC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIxU,MAA6B;EAC3D,SAAAuQ,EAAA,MAAAC,YAAA,GAAkBtT,MAAM,CAACC,IAAI,CAAC6W,aAAa,CAAC,EAAAzD,EAAA,GAAAC,YAAA,CAAAxW,MAAA,EAAAuW,EAAA,IAAE;IAAzC,IAAMkE,GAAG,GAAAjE,YAAA,CAAAD,EAAA;IACV,IAAIkE,GAAG,IAAIzU,MAAM,EAAE;MACfgU,aAAa,CAACS,GAAyB,CAAC,GAAGzU,MAAM,CAC7CyU,GAAyB,CACrB;;;AAGpB,CAAC;;ICrCWC,aAQX;AARD,WAAYA,aAAa;EACrBA,oCAAmB;EACnBA,sCAAqB;EACrBA,wCAAuB;EACvBA,gDAA+B;EAE/BA,wCAAuB;EACvBA,kDAAiC;AACrC,CAAC,EARWA,aAAa,KAAbA,aAAa;AAUzB,IAAaC,SAAS,GAAG,SAAZA,SAASA,CAAIC,SAAwB,EAAEC,QAAgB;EAAA,mBACtDD,SAAS,SAAIC,QAAQ;AAAA,CAAE;AAErC,IAAaC,eAAe,GAAG,SAAlBA,eAAeA,CAAIvN,QAAgB,EAAEsN,QAAgB;EAAA,mBACpDH,aAAa,CAACK,WAAW,SAAIxN,QAAQ,SAAIsN,QAAQ;AAAA,CAAE;AAEjE,AAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA2BA,CAAI9O,SAAiB;EACzD,IAAM+O,IAAI,GAAGC,OAAO,EAAE;EACtB,OAAOC,OAAO,CAAC;IACX,OAAOF,IAAI,CAACG,aAAa,CAAC;MACtBlb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAACW,gBAAgB,EAAEnP,SAAS,CAAC;MACxDoP,cAAc,EAAEpP;KACnB,CAAC;GACL,EAAE,CAACA,SAAS,EAAE+O,IAAI,CAAC,CAAC;AACzB,CAAC;AAED,AAAO,IAAMM,6BAA6B,GAAG,SAAhCA,6BAA6BA,CAAIvX,MAA4B;EACtE,IAAMiX,IAAI,GAAGC,OAAO,EAAE;EACtB,OAAOC,OAAO,CAAC;;IACX,IAAI,CAACnX,MAAM,EAAE;MACT,OAAO;QACHwX,UAAU,EAAE,EAAE;QACdC,aAAa,EAAE/c;OAClB;;IAGL,IAAM8c,UAAU,GAAGP,IAAI,CAACG,aAAa,CAAC;MAClClb,EAAE,EAAE4a,eAAe,CAAC9W,MAAM,CAAC9D,EAAE,EAAE,aAAa,CAAC;MAC7Cob,cAAc,GAAAI,cAAA,GAAE1X,MAAM,CAACwI,MAAM,qBAAbkP,cAAA,CAAevb;KAClC,CAAC;IAEF,IAAIsb,aAAa,GAAwB/c,SAAS;IAClD,KAAAid,eAAA,GAAI3X,MAAM,CAACwI,MAAM,aAAbmP,eAAA,CAAezG,OAAO,EAAE;MAAA,IAAA0G,eAAA;;MAExBH,aAAa,GAAGR,IAAI,CAACG,aAAa,CAAC;QAC/Blb,EAAE,EAAE4a,eAAe,CAAC9W,MAAM,CAAC9D,EAAE,EAAE,gBAAgB,CAAC;QAChDob,cAAc,GAAAM,eAAA,GAAE5X,MAAM,CAACwI,MAAM,qBAAboP,eAAA,CAAe1G;OAClC,CAAC;;IAGN,OAAO;MACHsG,UAAU,EAAVA,UAAU;MACVC,aAAa,EAAbA;KACH;GACJ,EAAE,CAACzX,MAAM,EAAEiX,IAAI,CAAC,CAAC;AACtB,CAAC;AAED,AAAO,IAAMY,4BAA4B,GAAG,SAA/BA,4BAA4BA,CAAIre,IAAwB;EACjE,IAAMyd,IAAI,GAAGC,OAAO,EAAE;EACtB,IAAMY,UAAU,GAAGC,UAAU,CAACC,uBAAuB,CAAC;EACtD,OAAOb,OAAO,CAAC;IACX,OAAO;MACHc,iBAAiB,EAAEH,UAAU,CAACI,iBAAiB,CAACjB,IAAI,EAAEzd,IAAI,CAAC;MAC3D2e,cAAc,EAAEL,UAAU,CAACM,cAAc,CAACnB,IAAI,EAAEzd,IAAI;KACvD;GACJ,EAAE,CAACA,IAAI,EAAEse,UAAU,EAAEb,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,IAAaoB,iBAAiB,GAAqB;EAC/CH,iBAAiB,EAAE,SAAAA,kBACfjB,IAAe,EACfzd,IAAwB;IAExB,IAAM8e,WAAW,GAAGhf,UAAU,CAACkB,UAAU,CAAChB,IAAI,CAAC;IAC/C,IAAI8e,WAAW,EAAE;MACb,OAAOrB,IAAI,CAACsB,UAAU,CAACD,WAAW,EAAE;QAChCE,SAAS,EAAE,QAAQ;QACnBC,SAAS,EAAE;OACgB,CAAC;KACnC,MAAM;MACH,OAAO,IAAI;;GAElB;EACDL,cAAc,EAAE,SAAAA,eAACM,KAAgB,EAAElf,IAAwB;IACvD,IAAI,CAACA,IAAI,IAAI,OAAOA,IAAI,CAAC8C,IAAI,KAAK,QAAQ,EAAE,OAAO,IAAI;IAEvD,IAAMA,IAAI,GAAG9C,IAAI,CAAC8C,IAAI;IACtB,IAAMqc,QAAQ,GAAGC,QAAQ,CAACtc,IAAI,EAAE;MAAEuc,IAAI,EAAE,KAAK;MAAEC,MAAM,EAAE;KAAU,CAAQ;IACzE,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACzB,OAAUC,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC7hB,KAAK,GAAG,EAAE,CAAC,GAAG,KAAK;KACpD,MAAM,IAAI6hB,QAAQ,CAACI,MAAM,KAAK,IAAI,EAAE;MACjC,OAAUC,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC7hB,KAAK,CAAC,SAAI6hB,QAAQ,CAACI,MAAM;;IAE3D,OAAUJ,QAAQ,CAAC7hB,KAAK,SAAI6hB,QAAQ,CAACI,MAAM;;CAElD;AAED,AAAO,IAAMf,uBAAuB,gBAAGkB,aAAa,CAACb,iBAAiB,CAAC;;AC3GvE;;;;;AAMA,AASO,IAAMc,iBAAiB,gBAAGD,aAAa,CAA+BrD,qBAAqB,CAAC;AAEnG,AAAO,IAAMuD,eAAe,GAAa,CACreAAe,GAAa,CACrC,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,IAAI,EACJ,KAAK,EACL,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,MAAM,EACN,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACR;AACD,AAAO,IAAMC,eAAe,GAAa,CACra,CACja,CAChdA,WAAWA;EACb,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAMC,IAAI,GAAG,CAAC;EAEd,IAAMC,iBAAiB,GAAG;;EAEtB,CAACxO,cAAc,CAACyO,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,EACrC,CAACzO,cAAc,CAACpJ,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,EAC7D,CAACoJ,cAAc,CAAC0O,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,EACpD,CAAC1O,cAAc,CAAC2O,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,EAC1G,CAAC3O,cAAc,CAAC4O,IAAI,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,EAC3C,CAAC5O,cAAc,CAAC6O,OAAO,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,EAC/D,CAAC7O,cAAc,CAAC8O,KAAK,EAAEb,eAAe,CAAC,EACvC,CAACjO,cAAc,CAAC+O,KAAK,EAAEf,eAAe,CAAC,EACvC,CAAChO,cAAc,CAACgP,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,EACpG,CAAChP,cAAc,CAACiP,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,EAC/C,CAACjP,cAAc,CAACqL,GAAG,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,EACpC,CAACrL,cAAc,CAACkP,IAAI,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC,EAC/D,CAAClP,cAAc,CAACmP,KAAK,EAAEjB,eAAe,CAAC,EACvC,CAAClO,cAAc,CAACoP,QAAQ,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EACxC,CAACpP,cAAc,CAACqG,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,EACpC,CAACrG,cAAc,CAACqP,KAAK,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;;EAGnD,CAACrP,cAAc,CAACsP,KAAK,EAAE,CAAC,UAAU,CAAC,CAAC,EACpC,CAACtP,cAAc,CAACuP,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,EAChC,CAACvP,cAAc,CAACwP,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC;;EAGjC,CAACxP,cAAc,CAACyP,IAAI,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,EACrC,CAACzP,cAAc,CAAC0P,MAAM,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EACxC,CAAC1P,cAAc,CAAC2P,MAAM,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,EAC3D,CAAC3P,cAAc,CAAC4P,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;;EAG7B,CAAC5P,cAAc,CAAC6P,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC;;EAGpC,CAAC7P,cAAc,CAAC8P,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC;;EAG/B,CAAC9P,cAAc,CAAC+P,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,EAC7B,CAAC/P,cAAc,CAACgQ,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EACvC,CAAChQ,cAAc,CAACiQ,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC,EAC7C,CAACjQ,cAAc,CAACkQ,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,CACzB;EAEV,IAAMC,SAAS,GAAG,IAAIC,SAAS,CAAC;IAAEC,UAAU,EAAE;GAAM,CAAC;EACrD,SAAAlJ,EAAA,MAAAmJ,kBAAA,GAAmB9B,iBAAiB,EAAArH,EAAA,GAAAmJ,kBAAA,CAAA1f,MAAA,EAAAuW,EAAA,IAAE;IAAjC,IAAMoJ,IAAI,GAAAD,kBAAA,CAAAnJ,EAAA;IACX,IAAO9D,IAAI,GAAgBkN,IAAI;MAAlBC,UAAU,GAAID,IAAI;IAE/B,KAAK,IAAI5f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6f,UAAU,CAAC5f,MAAM,EAAE,EAAED,CAAC,EAAE;MACxC2d,WAAW,IAAIC,IAAI;MACnB,IAAMkC,SAAS,GAAInC,WAAW,IAAIH,WAAW,CAACvd,MAAM,GAAG,CAAC,CAAC,GAAI,CAAC;MAC9D,IAAM8f,QAAQ,GAAiB;QAC3BrN,IAAI,EAAJA,IAAI;QACJoN,SAAS,EAATA;OACH;MACDN,SAAS,CAACQ,GAAG,CAACH,UAAU,CAAC7f,CAAC,CAAC,EAAE+f,QAAQ,EAAE,IAAI,CAAC;;;EAIpD,OAAOP,SAAS;AACpB,CAAC;AAED,IAAMS,QAAQ,gBAAGvC,WAAW,EAAE;AAE9B,AAAO,IAAMwC,WAAW,GAAG,SAAdA,WAAWA,CAAIziB,IAAwB;EAChD,OAAO2d,OAAO,CAAC;IACX,IAAI,CAAC3d,IAAI,EAAE,OAAO;MAAEiV,IAAI,EAAErD,cAAc,CAAC8Q,OAAO;MAAEL,SAAS,EAAE;KAAG;IAChE,IAAIriB,IAAI,CAACC,KAAK,KAAK,IAAI,EAAE,OAAO;MAAEgV,IAAI,EAAErD,cAAc,CAAC+Q,MAAM;MAAEN,SAAS,EAAE;KAAG;IAE7E,IAAMO,KAAK,GAAGJ,QAAQ,CAACK,kBAAkB,CAAC7iB,IAAI,CAAC2C,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;IAC/D,OAAOigB,KAAK,GAAGA,KAAK,GAAG;MAAE3N,IAAI,EAAErD,cAAc,CAAC5R,IAAI;MAAEqiB,SAAS,EAAE;KAAI;GACtE,EAAE,CAACriB,IAAI,CAAC,CAAC;AACd,CAAC;;AC3bM,IAAM8iB,UAAU,GAAG;EACtBC,MAAM,EAAE;IACJC,QAAQ,EAAE,SAAS;IACnBC,SAAS,EAAE,SAAS;IACpBC,UAAU,EAAE,SAAS;IACrBC,WAAW,EAAE,SAAS;IACtBC,WAAW,EAAE,SAAS;IAEtBC,UAAU,EAAE;GACf;EAEDC,SAAS,EAAE;IACPC,WAAW,EAAE;GAChB;EAEDC,OAAO,EAAE;IACLC,gBAAgB,EAAE;GACrB;EAEDxU,OAAO,EAAE;IACLnM,IAAI,EAAE,EAAE;IACR4gB,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;GACjB;EAEDC,GAAG,EAAE;IACDC,YAAY,EAAE,OAAO;IACrBC,eAAe,EAAE,KAAK;IACtBC,WAAW,EAAE,2BAA2B;IACxCC,cAAc,EAAE,2BAA2B;IAC3CC,sBAAsB,EAAE,0BAA0B;IAClDC,sBAAsB,EAAE,0BAA0B;IAClDC,yBAAyB,EAAE,0BAA0B;IACrDC,yBAAyB,EAAE;GAC9B;EAEDC,SAAS,EAAE;IACPC,MAAM,EAAE,gBAAgB;IACxBC,OAAO,EAAE,UAAU;IACnBC,YAAY,EAAE;GACjB;EAEDC,QAAQ,EAAE;IACNC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE;GACrB;EAEDC,aAAa,EAAE;IACXC,iBAAiB,EAAE,OAAO;IAC1BC,gBAAgB,EAAE,MAAM;IACxBC,QAAQ,EAAE,OAAO;IACjBC,SAAS,EAAE,MAAM;IACjBR,YAAY,EAAE,CAAC;IACfd,QAAQ,EAAE,EAAE;IAEZuB,aAAa,EAAE,0BAA0B;IACzCC,mBAAmB,EAAE,0BAA0B;IAC/CC,oBAAoB,EAAE;GACzB;EAEDC,aAAa,EAAE;IACXC,gBAAgB,EAAE,EAAE;IACpBC,YAAY,EAAE,OAAO;IACrBC,gBAAgB,EAAE,CAAC;IACnB7B,QAAQ,EAAE;;CAEjB;AAID,AAAO,IAAM8B,iBAAiB,GAA6B;EACvDZ,aAAa,EAAE;IACXK,aAAa,EAAE,uBAAuB;IACtCC,mBAAmB,EAAE,uBAAuB;IAC5CC,oBAAoB,EAAE;;CAE7B;AAED,AAAO,IAAMM,mBAAmB,GAA6B;EACzDpC,SAAS,EAAE;IACPC,WAAW,EAAE;GAChB;EACDC,OAAO,EAAE;IACLC,gBAAgB,EAAE;GACrB;EACDxU,OAAO,EAAE;IACLnM,IAAI,EAAE,EAAE;IACR4gB,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;GACb;EACDkB,aAAa,EAAE;IACXlB,QAAQ,EAAE;GACb;EACD0B,aAAa,EAAE;IACXC,gBAAgB,EAAE,EAAE;IACpBC,YAAY,EAAE,KAAK;IACnB5B,QAAQ,EAAE;;CAEjB;AAED,AAAO,IAAMgC,qBAAqB,GAAG,SAAxBA,qBAAqBA;EAC9B,OAAOC,aAAa,CAAC,mBAAmB,CAAC;AAC7C,CAAC;AAED,AAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,QAAgB,EAAEC,QAAgB;EAAA,OAChE,4BAA4B,GAC5B,QAAQ,IACLD,QAAQ,OAAG,IACXA,QAAQ,YAAQ,IAChBC,QAAQ,SAAK,IACbA,QAAQ,WAAO,GAClB,GAAG;AAAA;AAEP,AAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAC9BC;AACA;AAAA;EAAA,OACMC,eAAe,CAAiBD,MAAM,CAAC;AAAA;AAEjD,AAAO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAC/BC,UAAkD;EAElD,IAAMC,eAAe,GAAG,EAAE;EAC1B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,KAAkB;IACxC,IAAMC,WAAW,GAAGJ,UAAU,CAACG,KAAY,CAAC;IAC5C,IAAME,YAAY,GAAG,EAAE;IACvB,IAAMC,cAAc,GAAGhhB,MAAM,CAACC,IAAI,CAAC6gB,WAAW,CAAC;IAC/CE,cAAc,CAACpgB,GAAG,CAAC,UAAAqgB,aAAa;MAC5B,IAAMC,cAAc,eAAaD,aAAe;MAChD,IAAME,WAAW,iBAAeD,cAAgB;;MAEhDH,YAAY,CAACI,WAAW,CAAC,GAAGL,WAAW,CAACG,aAAa,CAAC;;MAEtDN,eAAe,CAACM,aAAa,CAAC,GAAGC,cAAc;KAClD,CAAC;IACF,OAAOH,YAAY;GACtB;;EAGD,IAAMK,SAAS,GAAGZ,eAAe,CAAiBI,gBAAuB,CAAC;EAC1E,OAAO;IACH,IAAML,MAAM,GAAGa,SAAS,CAAA7nB,KAAA,SAAAH,SAAQ,CAAC;IACjC,IAAMioB,OAAO,GAAG,EAAE;IAClBrhB,MAAM,CAACC,IAAI,CAAC0gB,eAAe,CAAC,CAAC/f,GAAG,CAAC,UAAAqgB,aAAa;;MAE1CI,OAAO,CAACJ,aAAa,CAAC,GAAGN,eAAe,CAACM,aAAa,CAAC;KAC1D,CAAC;IACF,OAAA5R,QAAA,KAAYgS,OAAO,EAAKd,MAAM;GACjC;AACL,CAAC;AAED,AAAO,IAAMe,SAAS,GAAG,SAAZA,SAASA,CAAO1pB,KAAQ;EAAA,OAAK,CAACA,KAAK,EAAE,YAAY,CAAC;AAAA;AAE/D,AAAO,IAAM2pB,CAAC,GAAGC,UAAU;;ACrJpB,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAI5oB,GAAiC;EAClE,IAAMkc,KAAK,GAAG2M,QAAQ,EAAa;EACnC,IAAMja,QAAQ,GAAGgP,WAAW,EAAE;EAE9BkL,mBAAmB,CACf9oB,GAAG,EACH;IAAA,OAAO;MACH+oB,gBAAgB,WAAAA;QACZ,IAAMrhB,YAAY,GAAGD,kBAAkB,CAACyU,KAAK,CAACpL,QAAQ,EAAE,CAAC;QACzD,IAAMkY,YAAY,GAAG,IAAIllB,GAAG,CAACqD,MAAM,CAACC,IAAI,CAACM,YAAY,CAAC,CAAC;QACvD,OAAOshB,YAAY;OACtB;MACDC,gBAAgB,WAAAA,iBAACzM,SAAS,EAAExK,KAAK;YAALA,KAAK;UAALA,KAAK,GAAG,IAAI;;QACpC,IAAMxH,OAAO,GAAGpK,KAAK,CAACqE,IAAI,CAAC+X,SAAS,CAAC;QACrC5N,QAAQ,CAACS,YAAY,CAAC0C,WAAW,CAAC;UAAEvH,OAAO,EAAPA,OAAO;UAAEwH,KAAK,EAALA;SAAO,CAAC,CAAC;OACzD;MACDkX,iBAAiB,WAAAA,kBACbjhB,MAAc,EACdsK,OAAgC;QAEhC,OAAOH,OAAO,CAACC,OAAO,CAClBzD,QAAQ,CAAC0D,sBAAsB,CAACrK,MAAM,EAAEsK,OAAO,CAAC,CAAC,CACpD,CAACS,IAAI,EAAE;;KAEf;GAAC,EACF,CAACkJ,KAAK,EAAEtN,QAAQ,CAAC,CACpB;AACL,CAAC;;ACrCD;;;;;AAMA,AAaO,IAAMua,wBAAwB,gBAAGnL,KAAK,CAACoL,IAAI,eAC9CpL,KAAK,CAACqL,UAAU,CAAsC,UAACC,KAAK,EAAEtpB,GAAG;;;EAE7D6d,kBAAkB,CAACxO,YAAY,CAACiL,WAAW,GAAAiP,YAAA,GAAED,KAAK,CAAC/d,KAAK,YAAAge,YAAA,GAAI5P,gBAAgB,CAAClT,QAAQ,CAAC;EACtFoX,kBAAkB,CAACxO,YAAY,CAACgL,iBAAiB,EAAEiP,KAAK,CAACnjB,WAAW,CAAC;EACrEuX,MAAM,CACFjP,yBAAyB,EACzB2F,kBAAkB,CAACkV,KAAK,CAACra,WAAW,EAAEgP,aAAa,CAAChP,WAAW,CAAC,EAChEmF,kBAAkB,CAACkV,KAAK,CAAC3a,yBAAyB,EAAEsP,aAAa,CAACtP,yBAAyB,CAAC,CAC/F;EACD+O,MAAM,CACFrO,YAAY,CAAC6K,4BAA4B,EACzC9F,kBAAkB,CAACkV,KAAK,CAACpL,YAAY,EAAED,aAAa,CAACC,YAAY,CAAQ,CAC5E;EACDR,MAAM,CACFrO,YAAY,CAAC6L,oBAAoB,EACjC9G,kBAAkB,CAACkV,KAAK,CAAC7gB,gBAAgB,EAAEwV,aAAa,CAACxV,gBAAgB,EAAE,SAAS,CAAC,CACxF;EACDiV,MAAM,CACFzM,uBAAuB,EACvBmD,kBAAkB,CAACkV,KAAK,CAAClL,mBAAmB,EAAEH,aAAa,CAACG,mBAAmB,CAAC,CACnF;EACDV,MAAM,CACF7M,kCAAkC,EAClCuD,kBAAkB,CAACkV,KAAK,CAACjL,uBAAuB,EAAEJ,aAAa,CAACI,uBAAuB,EAAE,QAAQ,CAAC,CACrG;EAEDX,MAAM,CACFrO,YAAY,CAACgM,qBAAqB,EAClCjH,kBAAkB,CAACkV,KAAK,CAACjgB,kBAAkB,EAAE4U,aAAa,CAAC5U,kBAAkB,CAAC,CACjF;EACDqU,MAAM,CACFrO,YAAY,CAACiM,mBAAmB,EAChClH,kBAAkB,CAACkV,KAAK,CAAC/f,gBAAgB,EAAE0U,aAAa,CAAC1U,gBAAgB,EAAE,QAAQ,CAAC,CACvF;EACDmU,MAAM,CACFrO,YAAY,CAACkM,qBAAqB,EAClCnH,kBAAkB,CAACkV,KAAK,CAAC7f,kBAAkB,EAAEwU,aAAa,CAACxU,kBAAkB,EAAE,SAAS,CAAC,CAC5F;EACDiU,MAAM,CACFrO,YAAY,CAACmM,+BAA+B,EAC5CpH,kBAAkB,CACdkV,KAAK,CAAC3f,4BAA4B,EAClCsU,aAAa,CAACtU,4BAA4B,EAC1C,SAAS,CACZ,CACJ;;EAGDif,oBAAoB,CAAC5oB,GAAG,CAAC;EAEzB,OAAO,IAAI;AACf,CAAC,CAAC,CACL;AACDmpB,wBAAwB,CAACK,WAAW,GAAG,0BAA0B;AAEjE,AAAO,IAAMC,mBAAmB,gBAAGzL,KAAK,CAACoL,IAAI,CAACD,wBAAwB,CAAC;AACvEM,mBAAmB,CAACD,WAAW,GAAG,qBAAqB;;ACzEhD,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsBA;EAC/B,IAAMC,UAAU,GAAG3J,UAAU,CAAC4J,UAAU,CAAC;EACzC,IAAQC,eAAe,GAAKF,UAAU,CAA9BE,eAAe;EACvB,OAAO,CAAC,CAACA,eAAe;AAC5B,CAAC;AAED,AAAO,IAAMC,kBAAkB,GAAmB,SAArCA,kBAAkBA;;;EAG3B,IAAMC,mBAAmB,GAAGL,sBAAsB,EAAE;EACpD,IAAMM,QAAQ,GAAGxM,WAAW,CAAC;IAAA,OAAM,CAAC,EAAS,EAAE;MAAA,OAAM,IAAI;OAAE;MAAA,OAAM,IAAI;MAAC;KAAE,EAAE,CAAC;;EAE3E,IAAMyM,OAAO,GAAmBF,mBAAmB,GAAGG,OAAO,GAAGF,QAAQ;EACxE,OAAOC,OAAO,CAAAvpB,KAAA,SAAAH,SAAQ,CAAC;AAC3B,CAAC;AAED,AAAO,IAAM4pB,kBAAkB,GAAmB,SAArCA,kBAAkBA;EAC3B,IAAMJ,mBAAmB,GAAGL,sBAAsB,EAAE;EACpD,IAAMM,QAAQ,GAAGxM,WAAW,CAAC;IAAA,OAAM,CAAC,EAAS,EAAE;MAAA,OAAM,IAAI;MAAC;KAAE,EAAE,CAAC;;EAE/D,IAAMyM,OAAO,GAAmBF,mBAAmB,GAAGK,OAAO,GAAGJ,QAAQ;EACxE,OAAOC,OAAO,CAAAvpB,KAAA,SAAAH,SAAQ,CAAC;AAC3B,CAAC;;ACdM,IAAM8pB,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAChCpW,OAA0B;EAE1B,IAAMqW,mBAAmB,GAAG3W,yBAAyB,CACjDM,OAAO,EACP,UAACA,OAAY;IAAA,OACTA,OAAO,CAACC,OAAO,IACfD,OAAO,CAACC,OAAO,CAACC,WAAW,EAAE,KAAK,KAAK,IACvCF,OAAO,CAACsW,OAAO,IACftW,OAAO,CAACsW,OAAO,CAACC,YAAY;IACnC;EACD,OAAOF,mBAAmB,GAAGA,mBAAmB,CAACC,OAAO,CAACC,YAAa,GAAG,IAAI;AACjF,CAAC;AAED,AAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA;EAC9B,IAAM7b,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAM8M,qBAAqB,GAAG3qB,mBAAmB,CAC7C0d,WAAW,CAAC7T,wBAAwB,CAAC,CACxC;EACD,OAAO4T,WAAW,CACd,UAACmN,KAAuC;;;IAGpC,IAAI,CAACD,qBAAqB,CAAC5qB,OAAO,EAAE;;;IAGpC,IAAI6qB,KAAK,CAACC,MAAM,EAAE;IAElBD,KAAK,CAACE,cAAc,EAAE;IAEtB,IAAM3gB,aAAa,GAAGmgB,uBAAuB,CAACM,KAAK,CAACG,MAAM,CAAC;IAC3Dlc,QAAQ,CACJ0D,sBAAsB,CAAC1C,aAAa,CAACkH,mBAAmB,EAAE;MACtDM,OAAO,EAAEuT,KAAK,CAACvT,OAAO;MACtBE,OAAO,EAAEqT,KAAK,CAACrT,OAAO;MACtBpN,aAAa,EAAbA;KACH,CAAC,CACL;GACJ,EACD,CAACwgB,qBAAqB,EAAE9b,QAAQ,CAAC,CACpC;AACL,CAAC;AAED,AAAO,IAAMmc,uBAAuB,GAAG,SAA1BA,uBAAuBA;EAChC,IAAMnc,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,OAAOJ,WAAW,CAAC;IAAA,OAAM5O,QAAQ,CAACS,YAAY,CAACqM,eAAe,EAAE,CAAC;KAAE,CAAC9M,QAAQ,CAAC,CAAC;AAClF,CAAC;;IC3CYoc,sBAAsB,GAAG,uBAAuB;;ACd7D;;;;;AAMA,AASA,IAAMC,WAAW,GAAwB;EACrCC,QAAQ,EAAE,OAAO;EACjBC,aAAa,EAAE,MAAM;EACrBC,MAAM,EAAE,GAAG;EACXC,IAAI,EAAE,CAAC;EACPC,GAAG,EAAE,CAAC;EACNC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;CACX;AACD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CACfC,mBAAuD,EACvDC,iBAAqD,EACrDC,iBAAqD;EAErD,IAAI,CAACF,mBAAmB,IAAI,CAACC,iBAAiB,IAAI,CAACC,iBAAiB,EAAE;IAClE,OAAO;MACHC,OAAO,EAAE;KACZ;;EAEL,IAAMC,CAAC,GAAGJ,mBAAmB,CAACI,CAAC,IAAIF,iBAAiB,CAACE,CAAC,GAAGH,iBAAiB,CAACG,CAAC,CAAC;EAC7E,IAAMC,CAAC,GAAGL,mBAAmB,CAACK,CAAC,IAAIH,iBAAiB,CAACG,CAAC,GAAGJ,iBAAiB,CAACI,CAAC,CAAC;EAC7E,IAAMC,SAAS,kBAAgBF,CAAC,YAAOC,CAAC,QAAK;EAC7C,OAAO;IACHC,SAAS,EAATA,SAAS;IACTC,eAAe,EAAED;GACpB;AACL,CAAC;AAED,AAAO,IAAME,oBAAoB,GAAwC,SAA5DA,oBAAoBA;EAC7B,IAAM1D,OAAO,GAAGD,SAAS,EAAE;EAE3B,IAAA4D,aAAA,GAOIC,YAAY,CAAC,UAAAC,OAAO;MAAA,OAAK;QACzBnoB,IAAI,EAAEmoB,OAAO,CAACC,OAAO,EAA4B;QACjDC,QAAQ,EAAEF,OAAO,CAACG,WAAW,EAAE;QAC/Bd,mBAAmB,EAAEW,OAAO,CAACI,sBAAsB,EAAE;QACrDd,iBAAiB,EAAEU,OAAO,CAACK,4BAA4B,EAAE;QACzDd,iBAAiB,EAAES,OAAO,CAACM,qBAAqB,EAAE;QAClDC,UAAU,EAAEP,OAAO,CAACO,UAAU;OACjC;KAAC,CAAC;IAbCL,QAAQ,GAAAJ,aAAA,CAARI,QAAQ;IACRroB,IAAI,GAAAioB,aAAA,CAAJjoB,IAAI;IACJwnB,mBAAmB,GAAAS,aAAA,CAAnBT,mBAAmB;IACnBC,iBAAiB,GAAAQ,aAAA,CAAjBR,iBAAiB;IACjBC,iBAAiB,GAAAO,aAAA,CAAjBP,iBAAiB;IACjBgB,UAAU,GAAAT,aAAA,CAAVS,UAAU;EASd,IAAI,CAACA,UAAU,IAAIL,QAAQ,KAAKvB,sBAAsB,IAAI,CAAC9mB,IAAI,CAACqO,OAAO,EAAE;IACrE,OAAO,IAAI;;EAGf,IAAMsa,aAAa,GAAG3oB,IAAI,CAACqO,OAAO,CAAC7E,aAAa,CAACzJ,MAAM;EACvD,OACI+Z;IAAK8O,KAAK,EAAE7B;KACRjN;IACI8O,KAAK,EAAErB,aAAa,CAChBC,mBAAmB,EACnBC,iBAAiB,EACjBC,iBAAiB;KAGrB5N;IAAK+O,SAAS,EAAEvE,OAAO,CAACwE;KACpBhP,+BAAI9Z,IAAI,CAACqO,OAAO,CAAC2D,WAAW,CAAC9R,IAAI,CAAK,EACrCyoB,aAAa,GAAG,CAAC,IACd7O,0CACK,OAAO,EACRA,oCACK6O,aAAa,GAAG,CAAC,iBACjBA,aAAa,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,EAAE,CAC9B,CAEhB,CACC,CACJ,CACJ;AAEd,CAAC;AAED,IAAMtE,SAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/CgF,eAAe,EAAE;MACbC,SAAS,mBAAiBjF,KAAK,CAACkF,OAAO,CAACC,OAAS;MACjDC,eAAe,EAAEpF,KAAK,CAACkF,OAAO,CAACG,UAAU,WAAQ;MACjDnH,YAAY,EAAE8B,KAAK,CAACjC,SAAS,CAACG,YAAY;MAC1Cd,QAAQ,EAAE4C,KAAK,CAACjD,SAAS,CAACC,WAAW;MACrCsI,KAAK,EAAEtF,KAAK,CAACkF,OAAO,CAACjL,IAAI,CAACsL,OAAO;MACjCtH,OAAO,EAAE+B,KAAK,CAACjC,SAAS,CAACE,OAAO;MAChCD,MAAM,EAAEgC,KAAK,CAACjC,SAAS,CAACC,MAAM;MAC9B6F,OAAO,EAAE;;GAEhB;AAAA,CAAC,CAAC;;ACvGH;;;;;AAMA,AAYO,IAAM2B,cAAc,gBAAkCxP,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;EACzE,IAAQzjB,YAAY,GAAKyjB,KAAK,CAAtBzjB,YAAY;EAEpB,IAAM+I,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAM6P,UAAU,GAAGpQ,gBAAgB,CAACzX,oBAAoB,EAAEC,YAAY,CAAC;EAEvExG,SAAS,CAAC;IACN,IAAI,CAACouB,UAAU,IAAI,CAACA,UAAU,CAACja,OAAO,IAAIia,UAAU,CAACja,OAAO,CAACvP,MAAM,KAAK,CAAC,EAAE;MACvE;;IAGJ,IAAMypB,UAAU,GAAGD,UAAU,CAACja,OAAO,CAAClS,IAAI,CAAC,GAAG,CAAC;IAC/C,IAAMqsB,cAAc,GAAG,SAAjBA,cAAcA,CAAIhD,KAAoB;MACxCA,KAAK,CAACE,cAAc,EAAE;MACtBjc,QAAQ,CAAC0D,sBAAsB,CAACmb,UAAU,EAAE9qB,SAAS,CAAC,CAAC;KAC1D;IACD6Q,OAAO,CAACka,UAAU,EAAEC,cAAc,CAAC;IACnC,OAAO;MAAA,OAAMna,OAAO,CAACoa,MAAM,CAACF,UAAU,EAAEC,cAAc,CAAC;;GAC1D,EAAE,CAAC/e,QAAQ,EAAE6e,UAAU,CAAC,CAAC;EAE1B,OAAO,IAAI;AACf,CAAC,CAAC;;ACvCF;;;;;AAMA,AAoBO,IAAMI,uBAAuB,GAA2C,SAAlEA,uBAAuBA,CAAA7Y,IAAA;MAChC8Y,QAAQ,GAAA9Y,IAAA,CAAR8Y,QAAQ;EAER,IAAMlf,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAMjY,aAAa,GAAG8X,WAAW,CAAC/X,mBAAmB,CAAC;EACtD,IAAMqoB,WAAW,GAAGtQ,WAAW,CAACjU,mBAAmB,CAAC;EACpD,IAAMG,4BAA4B,GAAG8T,WAAW,CAC5C/T,kCAAkC,CACrC;;EAGD,IAAMskB,eAAe,GAAGxQ,WAAW,CAC/B,UAACmN,KAAiC;IAC9B,IAAI,CAAChhB,4BAA4B,IAAIoK,qBAAqB,CAAC4W,KAAK,CAACG,MAAM,CAAC,EAAE;;;;;MAKtE;;IAEJlc,QAAQ,CAACS,YAAY,CAACyC,cAAc,EAAE,CAAC;GAC1C,EACD,CAAClD,QAAQ,EAAEjF,4BAA4B,CAAC,CAC3C;;EAGD,IAAMskB,wBAAwB,GAAG7O,OAAO,CACpC;IAAA,OACIzZ,aAAa,CAACoC,GAAG,CAAC,UAAAyJ,QAAQ;MAAA,OACtBwM,oBAACwP,cAAc;QACX9O,GAAG,4BAA0BlN,QAAU;QACvC3L,YAAY,EAAE2L;QAChB;KACL,CAAC;KACN,CAAC7L,aAAa,CAAC,CAClB;EAED,IAAMokB,mBAAmB,GAAGL,sBAAsB,EAAE;EACpD,IAAMxS,eAAe,GAAGuT,qBAAqB,EAAE;EAE/C,IAAMjC,OAAO,GAAGD,WAAS,EAAE;EAC3B,OACIvK,oBAACkQ,iBAAiB;IAACC,WAAW,EAAEH;KAC5BhQ,oBAACoQ,GAAG;IAACrB,SAAS,EAAEvE,OAAO,CAAC6F,UAAU;IAAEC,aAAa,EAAEpX;KAC9C,CAAC6W,WAAW,IAAIhE,mBAAmB,IAAI/L,oBAACkO,oBAAoB,OAAG,EAC/D+B,wBAAwB,EACxBH,QAAQ,GAAGA,QAAQ,GAAG,IAAI,CACzB,CACU;AAE5B,CAAC;AAED,IAAMvF,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/CqG,UAAU,EAAE;MACRjB,eAAe,EAAEpF,KAAK,CAACkF,OAAO,CAACG,UAAU,CAACkB,KAAK;MAC/CvI,MAAM,iBAAegC,KAAK,CAACkF,OAAO,CAACC,OAAS;MAC5ClH,OAAO,EAAE+B,KAAK,CAAC/C,OAAO,CAACC,gBAAgB;MACvCE,QAAQ,EAAE4C,KAAK,CAACjD,SAAS,CAACC,WAAW;MACrCsI,KAAK,EAAEtF,KAAK,CAACkF,OAAO,CAACjL,IAAI,CAACsL,OAAO;MACjCiB,WAAW,EAAE,cAAc;MAC3BC,UAAU,EAAE,YAAY;MACxBC,aAAa,EAAE,QAAQ;MACvBC,SAAS,EAAE,YAAY;MACvBC,SAAS,EAAE,MAAM;MACjB1I,YAAY,EAAE,CAAC;MACf2F,OAAO,EAAE,MAAM;MACfL,MAAM,EAAE,MAAM;;MAGdqD,kBAAkB,EAAE,MAAM;MAC1BC,gBAAgB,EAAE,MAAM;MACxBC,aAAa,EAAE,MAAM;MACrBC,YAAY,EAAE,MAAM;MACpBC,UAAU,EAAE;;GAEnB;AAAA,CAAC,CAAC;;ACvEH;AACA;AACA;AACA;AACA;AACA;AAEA,IAAaC,WAAW,gBAAGlR,KAAK,CAACqL,UAAU,CAGzC,UAACC,KAAK,EAAEtpB,GAAG;;EACT,IAAQqF,UAAU,GAA8BikB,KAAK,CAA7CjkB,UAAU;IAAEiZ,aAAa,GAAegL,KAAK,CAAjChL,aAAa;IAAEwP,QAAQ,GAAKxE,KAAK,CAAlBwE,QAAQ;EAC3C,IAAMrkB,kBAAkB,GAAG2K,kBAAkB,CACzCkV,KAAK,CAAC7f,kBAAkB,EACxBwU,aAAa,CAACxU,kBAAkB,EAChC,SAAS,CACZ;EACD,IAAM0U,0BAA0B,GAAG/J,kBAAkB,CACjDkV,KAAK,CAACnL,0BAA0B,EAChCF,aAAa,CAACE,0BAA0B,EACxC,SAAS,CACZ;EACD,IAAMI,QAAQ,GAAGnK,kBAAkB,CAC/BkV,KAAK,CAAC/K,QAAQ,EACdN,aAAa,CAACM,QAAQ,EACtB,SAAS,CACZ;EACD,IAAMC,IAAI,GAAGpK,kBAAkB,CAACkV,KAAK,CAAC9K,IAAI,EAAEP,aAAa,CAACO,IAAI,CAAC;EAC/D,IAAMuB,UAAU,GAAGX,OAAO,CAAC;IAAA,OAAA5I,QAAA,KAAY8J,iBAAiB,EAAK9B,IAAI,oBAAJA,IAAI,CAAEuB,UAAU;GAAG,EAAE,CAC9EvB,IAAI,CACP,CAAC;EAEF,IAAM1B,gBAAgB,GAAGpd,cAAc,CAAC;IAAA,OAAM2F,UAAU,WAAVA,UAAU,GAAI8pB,OAAO,CAACC,QAAQ,EAAE;IAAC;EAC/E,IAAMlT,KAAK,GAAGW,cAAc,CAACC,gBAAgB,CAAC;EAE9C,IAAMuS,kBAAkB,GAAGjI,qBAAqB,EAAE;EAClD,IAAMY,KAAK,GAAG5I,OAAO,CAAC;IAClB,IAAMkQ,QAAQ,GAAGC,cAAc,CAAC;MAC5BrC,OAAO,EAAE;QAAEsC,IAAI,EAAEjR,QAAQ,GAAG,MAAM,GAAG;;KACxC,CAAC;IACF,IAAMkR,aAAa,GAAGC,KAAK,CACvBJ,QAAQ,EACRI,KAAK,CAACnL,UAAU,EAAEhG,QAAQ,GAAG2I,iBAAiB,GAAG,EAAE,CAAC,CACvD;IACD,OAAOmI,kBAAkB,GACnBK,KAAK,CAACD,aAAa,EAAEtI,mBAAmB,CAAC,GACzCsI,aAAa;GACtB,EAAE,CAAClR,QAAQ,EAAE8Q,kBAAkB,CAAC,CAAC;EAElC,IAAMM,WAAW,GACb3R,0CACIA,oBAACyL,mBAAmB;IAACzpB,GAAG,EAAEA;KAASspB,KAAK,EAAI,EAC5CtL,oBAAC6P,uBAAuB,QAAEC,QAAQ,CAA2B,CAEpE;EAED,OACI9P,oBAAC4R,YAAY;IAACC,MAAM,EAAC,IAAI;IAACC,aAAa,EAAC;KAAStR,IAAI,GACjDR,oBAACiC,uBAAuB,CAAC8P,QAAQ;IAAChxB,KAAK,EAAEghB;KACrC/B,oBAACgS,QAAa;IAAC9T,KAAK,EAAEA;KAClB8B,oBAACiS,aAAa;IAACjI,KAAK,EAAEA;KAClBhK,oBAACkS,eAAgB;IAAClI,KAAK,EAAEA;KACrBhK,oBAACoD,iBAAiB,CAAC2O,QAAQ;IACvBhxB,KAAK,GAAAiW,IAAA,GACDsJ,aAAa,WAAbA,aAAa,GACbL,aAAa,CAACK,aAAa,YAAAtJ,IAAA,GAC3B8I;KAGHrU,kBAAkB,IAAI0U,0BAA0B,GAC7CwR,WAAW,GAEX3R,oBAACmS,WAAW;IAACC,OAAO,EAAEC;KACjBV,WAAW,CAEnB,CACwB,CACd,CACP,CACJ,CACe,CACxB;AAEvB,CAAC,CAAC;AACFT,WAAW,CAAC1F,WAAW,GAAG,aAAa;;AClGhC,IAAM8G,mBAAmB,GAAG,SAAtBA,mBAAmBA;EAC5B,IAAMnqB,WAAW,GAAGsX,WAAW,CAACvX,iBAAiB,CAAC;EAClD,IAAM0I,QAAQ,GAAGgP,WAAW,EAAE;EAE9B,IAAM2S,gBAAgB,GAAGnR,OAAO,CAAC;IAC7B,IAAMoR,KAAK,GAAsB,EAAE;IACnC,IAAI,CAACrqB,WAAW,EAAE,OAAOqqB,KAAK;IAAC,IAAAC,KAAA,YAAAA,QAEc;MACzC,IAAMhvB,IAAI,GAAG0E,WAAW,CAACnC,CAAC,CAAC;MAC3BwsB,KAAK,CAAC9sB,IAAI,CAAC;QACPjC,IAAI,EAAJA,IAAI;QACJivB,QAAQ,EAAE,CAACjvB,IAAI;QACfkvB,OAAO,EACH,CAACpvB,UAAU,CAACQ,UAAU,CAACN,IAAI,CAAC,IAAIuC,CAAC,KAAKmC,WAAW,CAAClC,MAAM,GAAG,CAAC,GACtDtB,SAAS,GACT;UAAA,OACIiM,QAAQ,CACJ0D,sBAAsB,CAAC1C,aAAa,CAACsF,SAAS,EAAE;YAC5CC,UAAU,EAAE1T,IAAI;YAChB8J,KAAK,EAAE,CAAC9J,IAAI;WACf,CAAC,CACL;;OAClB,CAAC;KACL;IAhBD,KAAK,IAAIuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmC,WAAW,CAAClC,MAAM,EAAE,EAAED,CAAC;MAAAysB,KAAA;;IAiB3C,OAAOD,KAAK;GACf,EAAE,CAAC5hB,QAAQ,EAAEzI,WAAW,CAAC,CAAC;EAC3B,OAAOoqB,gBAAgB;AAC3B,CAAC;;ACjBM,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAInvB,IAAwB;;EAEhD,IAAMya,KAAK,GAAG2M,QAAQ,EAAE;EACxB,IAAMgI,OAAO,GAAG9wB,mBAAmB,CAAC0B,IAAI,CAAC;EACzC,IAAMqvB,kBAAkB,GAAGtT,WAAW,CAA8B;IAChE,IAAMuT,UAAU,GAAG7U,KAAK,CAACpL,QAAQ,EAAE;IACnC,OAAO;MACHkgB,gBAAgB,EAAE7rB,gBAAgB,CAAC4rB,UAAU,CAAC;MAC9CE,MAAM,EAAE7qB,mBAAmB,CAAC2qB,UAAU,CAAC;;;MAGvC7a,WAAW,EAAE2a,OAAO,CAAC/wB,OAAQ;MAC7B4N,aAAa,EAAE5F,mBAAmB,CAACipB,UAAU;KAChD;GACJ,EAAE,CAAC7U,KAAK,EAAE2U,OAAO,CAAC,CAAC;;EAGpB,IAAMjiB,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAMsT,OAAO,GAAG1T,WAAW,CAAC;IAAA,OAAMjc,UAAU,CAACY,WAAW,CAAC0uB,OAAO,CAAC/wB,OAAO,CAAC;KAAE,CACvE+wB,OAAO,CACV,CAAC;EACF,IAAMM,WAAW,GAAG3T,WAAW,CAAC;IAC5B,IAAMtZ,IAAI,GAA2B;MACjCsrB,IAAI,EAAExE,sBAAsB;MAC5BzY,OAAO,EAAEue,kBAAkB;KAC9B;IACDliB,QAAQ,CAAC0D,sBAAsB,CAAC1C,aAAa,CAACoG,cAAc,EAAE9R,IAAI,CAACqO,OAAO,CAAC,CAAC;IAC5E,OAAOrO,IAAI;GACd,EAAE,CAAC0K,QAAQ,EAAEkiB,kBAAkB,CAAC,CAAC;EAClC,IAAMM,SAAS,GAAG5T,WAAW,CACzB,UAACtZ,IAA4B,EAAEmoB,OAA0B;IACrD,IAAMgF,UAAU,GAAGhF,OAAO,CAACiF,aAAa,EAAyB;IACjE,IACI,CAAC/vB,UAAU,CAACY,WAAW,CAAC+B,IAAI,CAACqO,OAAO,CAAC2D,WAAW,CAAC,IACjD,CAACmb,UAAU,IACX,CAACA,UAAU,CAACE,UAAU,EACxB;MACE;;IAGJ3iB,QAAQ,CACJ0D,sBAAsB,CAAC1C,aAAa,CAACuG,YAAY,EAAAK,QAAA,KAC1CtS,IAAI,CAACqO,OAAO;MACf8D,WAAW,EAAEgb,UAAU,CAACE,UAAU;MAClCtY,IAAI,EAAEoY,UAAU,CAACG,UAAU,KAAK;MACnC,CAAC,CACL;GACJ,EACD,CAAC5iB,QAAQ,CAAC,CACb;;EAGD,IAAM1K,IAAI,GAAGkb,OAAO,CAChB;IAAA,OAAO;MACHoQ,IAAI,EAAExE,sBAAsB;;MAE5BzY,OAAO,EAAE;KACZ;GAAC,EACF,EAAE,CACL;EACD,IAAMkf,OAAO,GAAGjU,WAAW,CAAC,UAAA6O,OAAO;IAAA,OAAK;MAAEO,UAAU,EAAEP,OAAO,CAACO,UAAU;KAAI;GAAC,EAAE,EAAE,CAAC;EAClF,IAAA8E,mBAAA,GAAuD5H,kBAAkB,CAAC;MACtE5lB,IAAI,EAAJA,IAAI;MACJgtB,OAAO,EAAPA,OAAO;MACPS,KAAK,EAAER,WAAW;;MAElBS,GAAG,EAAER,SAAS;MACdK,OAAO,EAAPA;KACH,CAAC;IAPmBI,aAAa,GAAAH,mBAAA,IAAzB9E,UAAU;IAAmBkF,IAAI,GAAAJ,mBAAA;IAAEK,OAAO,GAAAL,mBAAA;EASnDryB,SAAS,CAAC;;;IAGN0yB,OAAO,CAACC,aAAa,EAAE,EAAE;MAAEC,oBAAoB,EAAE;KAAM,CAAC;GAC3D,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,OAAO;IAAEF,aAAa,EAAbA,aAAa;IAAEC,IAAI,EAAJA;GAAM;AAClC,CAAC;AAQD,AAAO,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAAld,IAAA;MACpBvT,IAAI,GAAAuT,IAAA,CAAJvT,IAAI;IACJ0wB,gBAAgB,GAAAnd,IAAA,CAAhBmd,gBAAgB;IAChBC,oBAAoB,GAAApd,IAAA,CAApBod,oBAAoB;EAEpB,IAAMC,cAAc,GAAGtyB,mBAAmB,CAAC0d,WAAW,CAACvX,iBAAiB,CAAC,CAAC;EAC1E,IAAMosB,MAAM,GAAG9U,WAAW,CACtB,UAAC+U,KAA6B,EAAElG,OAAO;IACnC,IAAI,CAACA,OAAO,CAACmG,OAAO,EAAE,EAAE;IACxB,IAAMC,gBAAgB,GAAmD;MACrElB,UAAU,EAAE9vB;KACf;IACD,OAAOgxB,gBAAgB;GAC1B,EACD,CAAChxB,IAAI,CAAC,CACT;EACD,IAAM+wB,OAAO,GAAGhV,WAAW,CACvB,UAACtZ,IAA4B,EAAEmoB,OAA0B;IACrD,IACI8F,gBAAgB,IAChB,CAAC5wB,UAAU,CAACc,WAAW,CAACZ,IAAI,CAAC,IAC5B,CAAC4qB,OAAO,CAACqG,MAAM,CAAC;MAAEC,OAAO,EAAE;KAAM,CAAC,IAAI,CAACP,oBAAqB,EAC/D;MACE,OAAO,KAAK;;IAEhB,IAAAQ,aAAA,GAA+C1uB,IAAI,CAACqO,OAAO;MAAnD0e,MAAM,GAAA2B,aAAA,CAAN3B,MAAM;MAAE/a,WAAW,GAAA0c,aAAA,CAAX1c,WAAW;MAAExI,aAAa,GAAAklB,aAAA,CAAbllB,aAAa;;;;IAK1C,IAAMmlB,iBAAiB,GAAG,IAAI/uB,GAAG,EAAU;IAC3C+uB,iBAAiB,CAACvuB,GAAG,CAAC7C,IAAI,CAAC0C,EAAE,CAAC;IAC9BkuB,cAAc,CAACvyB,OAAO,CAACiI,GAAG,CAAC,UAAAqc,MAAM;MAC7B,IAAIA,MAAM,EAAEyO,iBAAiB,CAACvuB,GAAG,CAAC8f,MAAM,CAACjgB,EAAE,CAAC;KAC/C,CAAC;IACF,IAAM2uB,UAAU,IAAgB5c,WAAW,EAAAvV,MAAA,CAAK+M,aAAa,CAAC;IAC9D,SAAA2C,SAAA,GAAAC,+BAAA,CAAuBwiB,UAAU,GAAAviB,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;MAAA,IAAxBuiB,QAAQ,GAAAxiB,KAAA,CAAAxR,KAAA;MACf,IAAI8zB,iBAAiB,CAACxuB,GAAG,CAAC0uB,QAAQ,CAAC5uB,EAAE,CAAC,EAAE,OAAO,KAAK;;;;IAKxD,OAAO1C,IAAI,CAAC0C,EAAE,MAAK8sB,MAAM,oBAANA,MAAM,CAAE9sB,EAAE;GAChC,EACD,CAACguB,gBAAgB,EAAE1wB,IAAI,EAAE2wB,oBAAoB,EAAEC,cAAc,CAAC,CACjE;EACD,IAAMZ,OAAO,GAAGjU,WAAW,CACvB,UAAA6O,OAAO;IAAA,OAAK;MACRqG,MAAM,EAAErG,OAAO,CAACqG,MAAM,EAAE;MACxBM,aAAa,EAAE3G,OAAO,CAACqG,MAAM,CAAC;QAAEC,OAAO,EAAE;OAAM,CAAC;MAChDH,OAAO,EAAEnG,OAAO,CAACmG,OAAO;KAC3B;GAAC,EACF,EAAE,CACL;EACD,IAAAS,mBAAA,GAGI9I,kBAAkB,CAAC;MACnB+I,MAAM,EAAElI,sBAAsB;MAC9BmI,IAAI,EAAEb,MAAM;MACZE,OAAO,EAAPA,OAAO;MACPf,OAAO,EAAPA;KACH,CAAC;IAAA2B,oBAAA,GAAAH,mBAAA;IAPYI,SAAS,GAAAD,oBAAA,CAAjBV,MAAM;IAA4BY,gBAAgB,GAAAF,oBAAA,CAA/BJ,aAAa;IAA6BO,UAAU,GAAAH,oBAAA,CAAnBZ,OAAO;IAC7DW,IAAI,GAAAF,mBAAA;EAOR,OAAO;IAAEI,SAAS,EAATA,SAAS;IAAEC,gBAAgB,EAAhBA,gBAAgB;IAAEC,UAAU,EAAVA,UAAU;IAAEJ,IAAI,EAAJA;GAAM;AAC5D,CAAC;AAED,AAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAeA,CAAI/xB,IAAwB;EACpD,IAAAgyB,YAAA,GAAgC7C,WAAW,CAACnvB,IAAI,CAAC;IAAzCowB,aAAa,GAAA4B,YAAA,CAAb5B,aAAa;IAAEC,IAAI,GAAA2B,YAAA,CAAJ3B,IAAI;EAC3B,IAAA4B,YAAA,GAAwCxB,WAAW,CAAC;MAAEzwB,IAAI,EAAJA;KAAM,CAAC;IAArD4xB,SAAS,GAAAK,YAAA,CAATL,SAAS;IAAEE,UAAU,GAAAG,YAAA,CAAVH,UAAU;IAAEJ,IAAI,GAAAO,YAAA,CAAJP,IAAI;EACnC,IAAMQ,QAAQ,GAAGvU,OAAO,CACpB;IAAA,OAAO;MACHyS,aAAa,EAAbA,aAAa;MACbwB,SAAS,EAATA,SAAS;MACTE,UAAU,EAAVA;KACH;GAAC,EACF,CAACA,UAAU,EAAE1B,aAAa,EAAEwB,SAAS,CAAC,CACzC;EACD,OAAO;IACHF,IAAI,EAAJA,IAAI;IACJrB,IAAI,EAAJA,IAAI;IACJ6B,QAAQ,EAARA;GACH;AACL,CAAC;AAED,AAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAInyB,IAAwB,EAAEkyB,QAAuB;EAC7E,IAAM/kB,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAMiW,gBAAgB,GAAG9zB,mBAAmB,CAAC0d,WAAW,CAACrX,mBAAmB,CAAC,CAAC;EAC9E/G,SAAS,CAAC;;IACN,IAAIy0B,OAAO,GAAkB,IAAI;IACjC,IACIH,QAAQ,CAACN,SAAS,IAClB9xB,UAAU,CAACgB,aAAa,CAACd,IAAI,CAAC,IAC9BA,IAAI,CAAC0C,EAAE,OAAA4vB,qBAAA,GAAKF,gBAAgB,CAAC/zB,OAAO,qBAAxBi0B,qBAAA,CAA0B5vB,EAAE,GAC1C;MACE2vB,OAAO,GAAGv0B,UAAU,CAChB;QAAA,OACIqP,QAAQ,CACJ0D,sBAAsB,CAACwC,gBAAgB,CAACI,SAAS,EAAE;UAC/CC,UAAU,EAAE1T,IAAI;UAChB8J,KAAK,EAAE,CAAC9J,IAAI;SACf,CAAC,CACL;;;MAEL,IAAI,CACP;;IAEL,OAAO;MACH,IAAIqyB,OAAO,EAAEt0B,YAAY,CAACs0B,OAAO,CAAC;KACrC;GACJ,EAAE,CAACllB,QAAQ,EAAEnN,IAAI,EAAEkyB,QAAQ,CAACN,SAAS,EAAEQ,gBAAgB,CAAC,CAAC;AAC9D,CAAC;;AC9ND;;;;;AAMA,AASA,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAIC,GAAW,EAAEC,GAAW;EAC1C,OAAOD,GAAG,GAAGhT,IAAI,CAACkT,KAAK,CAAClT,IAAI,CAACmT,MAAM,EAAE,GAAGnT,IAAI,CAACkT,KAAK,CAACD,GAAG,GAAGD,GAAG,CAAC,CAAC;AAClE,CAAC;AACD,AAAO,IAAMI,eAAe,gBAAmCrW,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;EAC3E,IAAQgL,SAAS,GAAgBhL,KAAK,CAA9BgL,SAAS;IAAEC,SAAS,GAAKjL,KAAK,CAAnBiL,SAAS;EAE5B,IAAMC,iBAAiB,GAAGR,YAAY,CAACM,SAAS,EAAEC,SAAS,CAAC;EAC5D,IAAME,UAAU,GAAG,QAAQ,CAACC,MAAM,CAACF,iBAAiB,CAAC;EAErD,IAAMhM,OAAO,GAAGD,WAAS,EAAE;EAC3B,OACIvK;IACI+O,SAAS,EAAEvE,OAAO,CAACmM,eAAe;IAClCC,uBAAuB,EAAE;MAAEC,MAAM,EAAEJ;;IACrC;AAEV,CAAC,CAAC;AAEF,IAAMlM,WAAS,gBAAGd,qBAAqB,CAAC;EAAA,OAAO;IAC3C,gCAAgC,EAAE;MAC9B,IAAI,EAAE;QAAEqN,OAAO,EAAE;OAAK;MACtB,KAAK,EAAE;QAAEA,OAAO,EAAE;OAAK;MACvB,MAAM,EAAE;QAAEA,OAAO,EAAE;;KACtB;IACDH,eAAe,EAAE;MACbI,aAAa,EAAE,sBAAsB;MACrCC,uBAAuB,EAAE,UAAU;MACnCC,uBAAuB,EAAE,QAAQ;MACjCC,iBAAiB,EAAE,MAAM;MACzB9H,eAAe,EAAE,MAAM;MACvB+H,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,QAAQ;MAClBlP,YAAY,EAAE,CAAC;MACfmP,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;;GAEjB;AAAA,CAAC,CAAC;;AChCI,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAI9zB,IAAwB;EAC1D,OAAO2d,OAAO,CAAC;IACX,IAAMoW,SAAS,GAA4C;MACvD,cAAc,EAAE,YAAY;MAC5B,qBAAqB,EAAE/zB,IAAI,GAAGA,IAAI,CAAC0C,EAAE,GAAGxB;KAC3C;IAED,OAAA6T,QAAA;MACIif,IAAI,EAAE;OACHD,SAAS;GAEnB,EAAE,CAAC/zB,IAAI,CAAC,CAAC;AACd,CAAC;AAED,AAAO,IAAMi0B,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIj0B,IAAwB,EAAEk0B,QAAiB,EAAEC,OAAgB;EAC3F,IAAM7R,QAAQ,GAAGG,WAAW,CAACziB,IAAI,CAAC;EAClC,IAAAo0B,gBAAA,GAA2CC,eAAe,CAACr0B,IAAI,CAAC;IAAxDs0B,YAAY,GAAAF,gBAAA,CAAZE,YAAY;IAAEC,gBAAgB,GAAAH,gBAAA,CAAhBG,gBAAgB;EAEtC,OAAO5W,OAAO,CAAiB;IAC3B,IAAM6W,SAAS,GAAGF,YAAY,GAAGtU,UAAU,CAACsC,QAAQ,CAACD,SAAS,CAAC,GAAGtC,WAAW,CAACuC,QAAQ,CAACD,SAAS,CAAC;IACjG,IAAMoS,QAAQ,GAAGF,gBAAgB,IAAI,CAACv0B,IAAI;IAC1C,IAAMiV,IAAI,GAAGsf,gBAAgB,GAAG3iB,cAAc,CAAC8Q,OAAO,GAAGJ,QAAQ,CAACrN,IAAI;IAEtE,OAAO;MACHvT,aAAa,EAAE5B,UAAU,CAAC2B,gBAAgB,CAACzB,IAAI,CAAC;MAChDiV,IAAI,EAAEjV,IAAI,IAAIA,IAAI,CAACiV,IAAI,KAAK/T,SAAS,GAAGlB,IAAI,CAACiV,IAAI,GAAGA,IAAI;MACxDwf,QAAQ,EAAEA,QAAQ;MAClBH,YAAY,EAAEA,YAAY;MAC1BzI,KAAK,EAAE7rB,IAAI,IAAIA,IAAI,CAAC6rB,KAAK,KAAK3qB,SAAS,GAAGlB,IAAI,CAAC6rB,KAAK,GAAG2I,SAAS;MAChEN,QAAQ,EAAEA,QAAQ;MAClBC,OAAO,EAAE,CAAC,CAACA;KACd;GACJ,EAAE,CAACn0B,IAAI,EAAEm0B,OAAO,EAAE7R,QAAQ,EAAE4R,QAAQ,EAAEK,gBAAgB,EAAED,YAAY,CAAC,CAAC;AAC3E,CAAC;AAED,AAAO,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAIxC,QAAuB;EAC9C,IAAIyC,WAAW,GAA6B,IAAI;EAChD,IAAIzC,QAAQ,CAACN,SAAS,EAAE;IACpB,IAAMgD,YAAY,GAAG1C,QAAQ,CAACJ,UAAU;IACxC6C,WAAW,GAAGC,YAAY,GAAGhjB,cAAc,CAACkgB,UAAU,GAAGlgB,cAAc,CAACijB,aAAa;GACxF,MAAM,IAAI3C,QAAQ,CAAC9B,aAAa,EAAE;IAC/BuE,WAAW,GAAG/iB,cAAc,CAACkjB,WAAW;;EAG5C,OAAOH,WAAW;AACtB,CAAC;AAED,AAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAI/0B,IAAwB;EAC9D,IAAMg1B,aAAa,GAAqBrX,OAAO,CAAC;IAC5C,IAAMqX,aAAa,GAAqB,EAAE;IAC1C,IAAIl1B,UAAU,CAACI,QAAQ,CAACF,IAAI,CAAC,EAAEg1B,aAAa,CAAC/yB,IAAI,CAAC2P,cAAc,CAACqjB,MAAM,CAAC;IACxE,IAAIn1B,UAAU,CAACK,SAAS,CAACH,IAAI,CAAC,EAAEg1B,aAAa,CAAC/yB,IAAI,CAAC2P,cAAc,CAACsjB,OAAO,CAAC;IAC1E,IAAIp1B,UAAU,CAACM,WAAW,CAACJ,IAAI,CAAC,EAAEg1B,aAAa,CAAC/yB,IAAI,CAAC2P,cAAc,CAACkP,IAAI,CAAC;IACzE,OAAOkU,aAAa;GACvB,EAAE,CAACh1B,IAAI,CAAC,CAAC;EACV,IAAMm1B,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,IAAMyV,sBAAsB,GAAGzX,OAAO,CAClC;IAAA,OAAMqX,aAAa,CAAC1uB,GAAG,CAAC,UAAC2O,IAAI,EAAEpJ,KAAK;MAAA,OAAK0Q,oBAAC4Y,UAAU;QAAClY,GAAG,qBAAmBpR,KAAO;QAAEoJ,IAAI,EAAEA;QAAQ;MAAC;;;;;EAInG,CAACkgB,UAAU,EAAEH,aAAa,CAAC,CAC9B;EACD,OAAOI,sBAAsB;AACjC,CAAC;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,QAAgB;EAC9B,IAAMC,KAAK,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;EACjC,IAAID,KAAK,CAAC/yB,MAAM,EAAE;IACd,aAAW+yB,KAAK,CAACA,KAAK,CAAC/yB,MAAM,GAAG,CAAC,CAAC;;EAEtC,OAAO,EAAE;AACb,CAAC;AAED,AAAO,IAAMizB,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIz1B,IAAwB;EACzD,OAAO2d,OAAO,CAAC;IACX,IAAI,CAAC3d,IAAI,EAAE,OAAOuc,oBAACqW,eAAe;MAACC,SAAS,EAAE,EAAE;MAAEC,SAAS,EAAE;MAAM;IAEnE,IAAInwB,IAAI;IACR,IAAI+yB,SAAS,GAAG,IAAI;IAEpB,IAAMz1B,KAAK,GAAGH,UAAU,CAACC,WAAW,CAACC,IAAI,CAAC;IAC1C,IAAIC,KAAK,EAAE;MACP0C,IAAI,GAAG3C,IAAI,CAAC2C,IAAI;KACnB,MAAM;MAAA,IAAAgzB,SAAA;MACHD,SAAS,IAAAC,SAAA,GAAG31B,IAAI,CAAC41B,GAAG,YAAAD,SAAA,GAAIN,QAAQ,CAACr1B,IAAI,CAAC2C,IAAI,CAAC;MAC3CA,IAAI,GAAG3C,IAAI,CAAC2C,IAAI,CAACkzB,MAAM,CAAC,CAAC,EAAE71B,IAAI,CAAC2C,IAAI,CAACH,MAAM,GAAGkzB,SAAS,CAAClzB,MAAM,CAAC;;IAGnE,OACI+Z,0CACK5Z,IAAI,EACJ+yB,SAAS,IAAInZ;MAAM+O,SAAS,EAAC;OAAiDoK,SAAS,CAAQ,CACjG;GAEV,EAAE,CAAC11B,IAAI,CAAC,CAAC;AACd,CAAC;AAED,AAAO,IAAMq0B,eAAe,GAAG,SAAlBA,eAAeA,CAAIr0B,IAAwB;EACpD,IAAM4H,kBAAkB,GAAGoU,WAAW,CAACrU,wBAAwB,CAAC;EAChE,IAAAnK,SAAA,GAAwCC,QAAQ,CAAmB,IAAI,CAAC;IAAjE62B,YAAY,GAAA92B,SAAA;IAAEs4B,eAAe,GAAAt4B,SAAA;EACpC,IAAAu4B,UAAA,GAAgDt4B,QAAQ,CAAU,KAAK,CAAC;IAAjE82B,gBAAgB,GAAAwB,UAAA;IAAEC,mBAAmB,GAAAD,UAAA;EAC5C,IAAME,eAAe,GAAG73B,MAAM,CAAC,CAAC,CAAC;EAEjCR,SAAS,CAAC;IACN,IAAIs4B,gBAAgB,GAAG,KAAK;IAE5B,IAAIl2B,IAAI,EAAE;MACN,IAAI4H,kBAAkB,EAAE;QACpB,IAAIquB,eAAe,CAAC53B,OAAO,KAAK,CAAC,EAAE;UAC/B23B,mBAAmB,CAAC,IAAI,CAAC;;QAE7BC,eAAe,CAAC53B,OAAO,EAAE;QACzBsS,OAAO,CAACC,OAAO,EAAE,CACZW,IAAI,CAAC;UAAA,OAAM3J,kBAAkB,CAAC5H,IAAI,CAAC;UAAC,CACpCuR,IAAI,CAAC,UAAC+iB,YAAiB;UACpB,IAAI4B,gBAAgB,EAAE;UACtBF,mBAAmB,CAAC,KAAK,CAAC;UAE1B,IAAI1B,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAAE;YAClDwB,eAAe,CAACxB,YAAY,CAAC;;SAEpC,CAAC,SACI,CAAC,UAAA71B,KAAK;UACR,IAAI,CAACy3B,gBAAgB,EAAEF,mBAAmB,CAAC,KAAK,CAAC;UACjDx3B,MAAM,CAACC,KAAK,kEAA8DA,KAAK,CAAC6C,OAAS,CAAC;SAC7F,CAAC;OACT,MAAM,IAAItB,IAAI,CAACs0B,YAAY,EAAE;QAC1BwB,eAAe,CAAC91B,IAAI,CAACs0B,YAAY,CAAC;;;IAI1C,OAAO;MACH4B,gBAAgB,GAAG,IAAI;KAC1B;GACJ,EAAE,CAACl2B,IAAI,EAAE81B,eAAe,EAAEE,mBAAmB,EAAEpuB,kBAAkB,CAAC,CAAC;EAEpE,OAAO;IAAE0sB,YAAY,EAAZA,YAAY;IAAEC,gBAAgB,EAAhBA;GAAkB;AAC7C,CAAC;AAED,AAAO,IAAM4B,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIn2B,IAAwB,EAAEo2B,YAAoB;EAC/E,IAAMjpB,QAAQ,GAAGgP,WAAW,EAAE;;EAG9B,IAAMka,YAAY,GAAGta,WAAW,CAC5B,UAACmN,KAAsB,EAAE1V,SAA8B;IACnD,IAAI,CAACxT,IAAI,EAAE;IAEXmN,QAAQ,CACJ0D,sBAAsB,CAAC1C,aAAa,CAACmF,cAAc,EAAE;MACjDE,SAAS,EAATA,SAAS;MACTxT,IAAI,EAAJA,IAAI;MACJ+T,gBAAgB,EAAEqiB,YAAY;MAC9BjN,MAAM,EAAED,KAAK,CAACC,MAAM;MACpBxV,OAAO,EAAEuV,KAAK,CAACvV,OAAO;MACtBK,QAAQ,EAAEkV,KAAK,CAAClV;KACnB,CAAC,CACL;GACJ,EACD,CAAC7G,QAAQ,EAAEnN,IAAI,EAAEo2B,YAAY,CAAC,CACjC;EACD,IAAME,eAAe,GAAGva,WAAW,CAC/B,UAACmN,KAAyB;IACtB,IAAI,CAAClpB,IAAI,EAAE;IAEXmN,QAAQ,CACJ0D,sBAAsB,CAAC1C,aAAa,CAACgG,iBAAiB,EAAE;MACpDnU,IAAI,EAAJA,IAAI;MACJ+T,gBAAgB,EAAEqiB,YAAY;MAC9B/hB,QAAQ,EAAE6U,KAAK,CAAC7U,QAAQ;MACxBC,QAAQ,EAAE4U,KAAK,CAAC5U,QAAQ;MACxB6U,MAAM,EAAED,KAAK,CAACC,MAAM;MACpBxV,OAAO,EAAEuV,KAAK,CAACvV,OAAO;MACtBK,QAAQ,EAAEkV,KAAK,CAAClV;KACnB,CAAC,CACL;GACJ,EACD,CAAC7G,QAAQ,EAAEnN,IAAI,EAAEo2B,YAAY,CAAC,CACjC;;EAGD,IAAMG,aAAa,GAAGxa,WAAW,CAAC,UAACmN,KAAsB;IAAA,OAAKmN,YAAY,CAACnN,KAAK,EAAE,QAAQ,CAAC;KAAE,CAACmN,YAAY,CAAC,CAAC;EAC5G,IAAMG,aAAa,GAAGza,WAAW,CAAC,UAACmN,KAAsB;IAAA,OAAKmN,YAAY,CAACnN,KAAK,EAAE,QAAQ,CAAC;KAAE,CAACmN,YAAY,CAAC,CAAC;EAE5G,OAAO;IACHE,aAAa,EAAbA,aAAa;IACbC,aAAa,EAAbA,aAAa;IACbF,eAAe,EAAfA;GACH;AACL,CAAC;;ICrFWG,qBAKX;AALD,WAAYA,qBAAqB;EAC7BA,qEAAM;EACNA,yEAAQ;EACRA,uEAAO;EACPA,qEAAM;AACV,CAAC,EALWA,qBAAqB,KAArBA,qBAAqB;;ACtG1B,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAItyB,YAAoB;EACrD,IAAM+I,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAM6P,UAAU,GAAGpQ,gBAAgB,CAACzX,oBAAoB,EAAEC,YAAY,CAAC;EACvE,OAAO2X,WAAW,CAAC;IAAA,OAAM5O,QAAQ,CAAC0D,sBAAsB,CAACmb,UAAU,EAAE9qB,SAAS,CAAC,CAAC;KAAE,CAC9EiM,QAAQ,EACR6e,UAAU,CACb,CAAC;AACN,CAAC;AAED,AAAO,IAAM2K,kBAAkB,GAAG,SAArBA,kBAAkBA,CAC3BvyB,YAAoB;;EAEpB,IAAMU,YAAY,GAAGkX,WAAW,CAACnX,kBAAkB,CAAC;EACpD,IAAMqC,cAAc,GAAG8U,WAAW,CAAC/U,oBAAoB,CAAC;EAExD,IAAMG,YAAY,GAAG4U,WAAW,CAAC7U,kBAAkB,CAAC;EACpD,IAAMG,SAAS,GAAG0U,WAAW,CAAC3U,eAAe,CAAC;EAE9C,IAAMb,MAAM,GAAGoV,gBAAgB,CAACzX,oBAAoB,EAAEC,YAAY,CAAC;;EAEnE,IAAMwyB,WAAW,GAAGhb,gBAAgB,CAACnU,iBAAiB,EAAEjB,MAAM,aAAAqwB,cAAA,GAANrwB,MAAM,CAAEmH,MAAM,qBAAdkpB,cAAA,CAAgBn0B,EAAE,CAAC;EAE3E,IAAMo0B,mBAAmB,GAAGlb,gBAAgB,CACxChV,iCAAiC,EACjCxC,YAAY,CACf;EAED,IAAM2yB,oBAAoB,GAAGD,mBAAmB,KAAK,CAAC;EAEtD,OAAOnZ,OAAO,CAAC;;IACX,IAAI,CAACnX,MAAM,EAAE,OAAO;MAAEyO,IAAI,EAAE,IAAI;MAAE+hB,MAAM,EAAE,KAAK;MAAE/H,QAAQ,EAAE;KAAM;IAEjE,IAAIha,IAAI,IAAAgiB,mBAAA,IAAA/Y,cAAA,GAAG1X,MAAM,CAACwI,MAAM,qBAAbkP,cAAA,CAAejJ,IAAI,YAAAgiB,mBAAA,GAAI,IAAI;IACtC,IAAIzwB,MAAM,CAAC6D,eAAe,EAAE;MACxB,IAAIjD,YAAY,KAAKZ,MAAM,CAAC9D,EAAE,EAAE;QAC5B,IAAI4E,SAAS,KAAK7D,SAAS,CAAC+G,GAAG,EAAE;UAC7ByK,IAAI,GAAGrD,cAAc,CAACslB,OAAO;SAChC,MAAM;UACHjiB,IAAI,GAAGrD,cAAc,CAACulB,QAAQ;;OAErC,MAAM;QACHliB,IAAI,GAAGrD,cAAc,CAACwlB,WAAW;;KAExC,MAAM,IAAI5wB,MAAM,CAACmH,MAAM,EAAE;MACtB,IAAIipB,WAAW,EAAE;QACb3hB,IAAI,GAAGrD,cAAc,CAACylB,QAAQ;OACjC,MAAM;QACHpiB,IAAI,GAAGrD,cAAc,CAAC0lB,SAAS;;;IAIvC,IAAMC,0BAA0B,GAAG/wB,MAAM,CAAC9D,EAAE,KAAK0E,YAAY;IAC7D,IAAMowB,8BAA8B,GAAGhxB,MAAM,CAACU,cAAc,KAAKA,cAAc;IAC/E,IAAMuwB,kBAAkB,GAAGjxB,MAAM,CAACmH,MAAM,GAAG,CAAC,CAACipB,WAAW,GAAG,KAAK;IAEhE,IAAIc,cAAc,GAAG,KAAK;IAC1B,IAAIC,YAAY,GAAG,KAAK;IACxB,IAAInxB,MAAM,CAACoxB,gBAAgB,KAAK12B,SAAS,EAAE;MACvCw2B,cAAc,GAAGlxB,MAAM,CAACoxB,gBAAgB,EAAE,KAAKnB,qBAAqB,CAACoB,QAAQ;MAC7EF,YAAY,GAAGnxB,MAAM,CAACoxB,gBAAgB,EAAE,KAAKnB,qBAAqB,CAACqB,MAAM;;IAE7E,IAAMd,MAAM,GACRO,0BAA0B,IAC1BC,8BAA8B,IAC9BC,kBAAkB,IAClBE,YAAY;IAEhB,IAAI1I,QAAQ,GAAa,CAAC,CAACzoB,MAAM,CAACC,iBAAiB,IAAIswB,oBAAoB,IAAKW,cAAc;IAE9F,IAAIlxB,MAAM,CAAC9D,EAAE,KAAKyL,aAAa,CAACC,gBAAgB,CAAC1L,EAAE,EAAE;;;MAGjDusB,QAAQ,GAAGA,QAAQ,IAAI,CAACnvB,UAAU,CAACQ,UAAU,CAACwE,YAAY,CAAC;;IAG/D,OAAO;MAAEmQ,IAAI,EAAJA,IAAI;MAAE+hB,MAAM,EAANA,MAAM;MAAE/H,QAAQ,EAARA;KAAU;GACpC,EAAE,CACCnqB,YAAY,EACZoC,cAAc,EACdE,YAAY,EACZE,SAAS,EACTd,MAAM,EACNowB,WAAW,EACXG,oBAAoB,CACvB,CAAC;AACN,CAAC;;AC1GD;;;;;AAMA,AAyBO,IAAMgB,aAAa,gBAAiCxb,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;;EACvE,IACemQ,iBAAiB,GAS5BnQ,KAAK,CATLyD,SAAS;IACT9K,IAAI,GAQJqH,KAAK,CARLrH,IAAI;IACJ9I,OAAO,GAOPmQ,KAAK,CAPLnQ,OAAO;IACPsf,MAAM,GAMNnP,KAAK,CANLmP,MAAM;IACN/hB,IAAI,GAKJ4S,KAAK,CALL5S,IAAI;IACJE,QAAQ,GAIR0S,KAAK,CAJL1S,QAAQ;IACR+Z,OAAO,GAGPrH,KAAK,CAHLqH,OAAO;IACPD,QAAQ,GAERpH,KAAK,CAFLoH,QAAQ;IACRgJ,QAAQ,GACRpQ,KAAK,CADLoQ,QAAQ;EAEZ,IAAMlR,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMqO,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAEhD,IAAM9C,aAAa,GACf5H,IAAI,IAAIE,QAAQ,GACZoH;IAAK+O,SAAS,EAAEnW,QAAQ,GAAG,EAAE,GAAG4R,OAAO,CAACmR;KACpC3b,oBAAC4Y,UAAU;IACPlgB,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAGrD,cAAc,CAACumB,YAAY;IAC/CC,UAAU,EAAE;IACd,CACA,GACN,IAAI;EAEZ,IAAM9M,SAAS,GAAGrE,CAAC,EAAAoR,EAAA,OAAAA,EAAA,CACdL,iBAAiB,WAAjBA,iBAAiB,GAAI,EAAE,IAAG,IAAI,EAAAK,EAAA,CAC9BtR,OAAO,CAACuR,UAAU,IAAG,IAAI,EAAAD,EAAA,CACzBtR,OAAO,CAACwR,cAAc,IAAGpjB,QAAQ,EAAAkjB,EAAA,CACjCtR,OAAO,CAACyR,YAAY,IAAG,CAAC,CAACxB,MAAM,EAAAqB,EAAA,EAClC;EACF,OACI9b,oBAACkc,MAAM;IACHnN,SAAS,EAAEA,SAAS;IACpB4D,OAAO,EAAEA,OAAO;IAChB5S,KAAK,EAAE5E,OAAO,GAAGA,OAAO,GAAG8I,IAAI;IAC/ByO,QAAQ,EAAEA,QAAQ,IAAI,CAACC;KAEtBrS,aAAa,EACb2D,IAAI,IAAI,CAACrL,QAAQ,IAAIoH,kCAAOiE,IAAI,CAAQ,EACxCyX,QAAQ,IACL1b;IAAK+O,SAAS,EAAEvE,OAAO,CAAC2R;KACpBnc,oBAAC4Y,UAAU;IACPlgB,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAGrD,cAAc,CAACqmB,QAAQ;IAC3CG,UAAU,EAAE;IACd,CAET,CACI;AAEjB,CAAC,CAAC;AAEF,IAAMtR,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/C+R,UAAU,EAAE;MACR3U,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3CgV,aAAa,EAAE3R,SAAS,CAAC,MAAM,CAAC;MAChC4R,aAAa,EAAE5R,SAAS,CAAC,CAAC,CAAC;MAC3B6M,QAAQ,EAAE7M,SAAS,CAAC,MAAM,CAAC;MAC3BtD,UAAU,EAAE6C,KAAK,CAACtX,OAAO,CAACyU,UAAU;MACpCqG,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM,IAAI;MAC1B+1B,aAAa,EAAE7R,SAAS,CAAC,CAAC,CAAC;MAC3B8R,UAAU,EAAE9R,SAAS,CAAC,CAAC;KAC1B;IACDkR,YAAY,EAAE;MACVa,WAAW,EAAE;KAChB;IACDR,cAAc,EAAE;MACZzO,KAAK,EAAEvD,KAAK,CAACtX,OAAO,CAACnM,IAAI;MACzBqqB,SAAS,EAAE;KACd;IACDuL,YAAY,EAAE;MACV/U,QAAQ,EAAE,OAAO;MACjBqV,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;KACd;IACDT,YAAY,EAAE;MACV3M,KAAK,EAAE7E,SAAS,CAACT,KAAK,CAACxD,MAAM,CAACM,UAAU;;GAE/C;AAAA,CAAC,CAAC;AAMH,AAAO,IAAM6V,kBAAkB,gBAAsC3c,KAAK,CAACoL,IAAI,CAC3E,UAAAE,KAAK;EACD,IAAQzjB,YAAY,GAAKyjB,KAAK,CAAtBzjB,YAAY;EAEpB,IAAMoC,MAAM,GAAGoV,gBAAgB,CAACzX,oBAAoB,EAAEC,YAAY,CAAC;EACnE,IAAM+0B,aAAa,GAAGzC,oBAAoB,CAACtyB,YAAY,CAAC;EACxD,IAAAg1B,mBAAA,GAAmCzC,kBAAkB,CAACvyB,YAAY,CAAC;IAA3D6Q,IAAI,GAAAmkB,mBAAA,CAAJnkB,IAAI;IAAE+hB,MAAM,GAAAoC,mBAAA,CAANpC,MAAM;IAAE/H,QAAQ,GAAAmK,mBAAA,CAARnK,QAAQ;EAC9B,IAAAoK,qBAAA,GAAsCtb,6BAA6B,CAACvX,MAAM,CAAC;IAAnEwX,UAAU,GAAAqb,qBAAA,CAAVrb,UAAU;IAAEC,aAAa,GAAAob,qBAAA,CAAbpb,aAAa;EAEjC,IAAI,CAACzX,MAAM,EAAE,OAAO,IAAI;EACxB,IAAQwI,MAAM,GAAKxI,MAAM,CAAjBwI,MAAM;EACd,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EACxB,IAAIxI,MAAM,CAACoxB,gBAAgB,KAAK12B,SAAS,IAAIsF,MAAM,CAACoxB,gBAAgB,EAAE,KAAKnB,qBAAqB,CAAC6C,MAAM,EAAE,OAAO,IAAI;EAEpH,OACI/c,oBAACwb,aAAa;IACVvX,IAAI,EAAExC,UAAU;IAChBtG,OAAO,EAAEuG,aAAa;IACtBhJ,IAAI,EAAEA,IAAI;IACVE,QAAQ,EAAEnG,MAAM,CAACmG,QAAQ;IACzB6hB,MAAM,EAAEA,MAAM;IACd9H,OAAO,EAAEiK,aAAa;IACtBlK,QAAQ,EAAEA;IACZ;AAEV,CAAC,CACJ;;AC7ID;;;;;AAMA,AAiBO,IAAMsK,iBAAiB,gBAAqChd,KAAK,CAACoL,IAAI,CACzE,UAAApU,IAAA;;MAAGimB,KAAK,GAAAjmB,IAAA,CAALimB,KAAK;IAAEn7B,OAAO,GAAAkV,IAAA,CAAPlV,OAAO;IAAEoE,IAAI,GAAA8Q,IAAA,CAAJ9Q,IAAI;EACnB,IAAQzC,IAAI,GAAwByC,IAAI,CAAhCzC,IAAI;IAAEivB,QAAQ,GAAcxsB,IAAI,CAA1BwsB,QAAQ;IAAEC,OAAO,GAAKzsB,IAAI,CAAhBysB,OAAO;EAC/B,IAAA+C,YAAA,GAAwCxB,WAAW,CAAC;MAChDzwB,IAAI,EAAJA,IAAI;MACJ0wB,gBAAgB,EAAE,CAAC1wB,IAAI,IAAI3B;KAC9B,CAAC;IAHMuzB,SAAS,GAAAK,YAAA,CAATL,SAAS;IAAEE,UAAU,GAAAG,YAAA,CAAVH,UAAU;IAAEJ,IAAI,GAAAO,YAAA,CAAJP,IAAI;EAInC,IAAMQ,QAAQ,GAAGvU,OAAO,CACpB;IAAA,OAAO;MACHiU,SAAS,EAATA,SAAS;MACTE,UAAU,EAAVA,UAAU;MACV1B,aAAa,EAAE;KAClB;GAAC,EACF,CAAC0B,UAAU,EAAEF,SAAS,CAAC,CAC1B;EACDO,eAAe,CAACnyB,IAAI,EAAEkyB,QAAQ,CAAC;EAC/B,IAAMyC,WAAW,GAAGD,UAAU,CAACxC,QAAQ,CAAC;EACxC,IAAMiD,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAEhD,IAAMoH,OAAO,GAAGD,WAAS,CAACoL,QAAQ,CAAC;EACnC,IAAM5G,SAAS,GAAGrE,CAAC,EAAAoR,EAAA,OAAAA,EAAA,CACdtR,OAAO,CAAC0S,cAAc,IAAG,IAAI,EAAApB,EAAA,CAC7BtR,OAAO,CAAC2S,kBAAkB,IAAGzK,QAAQ,EAAAoJ,EAAA,CACrCtR,OAAO,CAAC4S,iBAAiB,IAAGt7B,OAAO,EAAAg6B,EAAA,EACtC;EACF,IAAM7X,IAAI,GAAGxgB,IAAI,GAAGA,IAAI,CAAC2C,IAAI,GAAG,YAAY;EAC5C,IAAMsS,IAAI,GACNukB,KAAK,IAAI,CAAAx5B,IAAI,oBAAJA,IAAI,CAAE45B,eAAe,MAAK14B,SAAS,GACtC0Q,cAAc,CAAC+Q,MAAM,GACrB3iB,IAAI,oBAAJA,IAAI,CAAE45B,eAAe;EAE/B,OACIrd;IAAK+O,SAAS,EAAEvE,OAAO,CAAC8S,eAAe;IAAEt7B,GAAG,EAAEyB,IAAI,GAAG0xB,IAAI,GAAG;KACvD1xB,IAAI,IAAI20B,WAAW,IAChBpY;IAAK+O,SAAS,EAAEvE,OAAO,CAAC+S;KACpBvd,oBAAC4Y,UAAU;IAAClgB,IAAI,EAAE0f,WAAW;IAAEyD,UAAU,EAAE;IAAQ,CAE1D,EACD7b,oBAACwb,aAAa;IACV9iB,IAAI,EAAEA,IAAI;IACVqW,SAAS,EAAEA,SAAS;IACpB9K,IAAI,EAAEA,IAAI;IACVyO,QAAQ,EAAEA,QAAQ;IAClBC,OAAO,EAAEA;IACX,CACA;AAEd,CAAC,CACJ;AAED,IAAMpI,WAAS,gBAAGd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAC9CsT,eAAe,EAAE;MACbpQ,QAAQ,EAAE;KACb;IACDgQ,cAAc,EAAE;MACZ5N,KAAK,EAAE,SAAAA,MAACqG,QAAuB;QAC3B,IAAIrG,KAAK,GAAGtF,KAAK,CAACkF,OAAO,CAACjL,IAAI,CAACsL,OAAO;QACtC,IAAIoG,QAAQ,CAACN,SAAS,EAAE;UACpB/F,KAAK,GAAGqG,QAAQ,CAACJ,UAAU,GACrBvL,KAAK,CAAC1C,GAAG,CAACC,YAAY,GACtByC,KAAK,CAAC1C,GAAG,CAACE,eAAe;;QAEnC,OAAOiD,SAAS,CAAC6E,KAAK,CAAC;;KAE9B;IACD6N,kBAAkB,EAAE;;;MAGhB7N,KAAK,EAAE,SAAAA;QAAA,OAAM7E,SAAS,CAACT,KAAK,CAACkF,OAAO,CAACjL,IAAI,CAACyO,QAAQ,CAAC;;KACtD;IACD0K,iBAAiB,EAAE;MACfI,cAAc,EAAE/S,SAAS,CAAC,WAAW;KACxC;IACD8S,YAAY,EAAE;MACVjO,KAAK,EAAE,SAAAA,MAACqG,QAAuB;QAAA,OAC3BA,QAAQ,CAACJ,UAAU,GAAGvL,KAAK,CAAC1C,GAAG,CAACC,YAAY,GAAGyC,KAAK,CAAC1C,GAAG,CAACE,eAAe;;MAC5E4H,eAAe,EAAE,SAAAA,gBAACuG,QAAuB;QAAA,OACrCA,QAAQ,CAACJ,UAAU,GAAGvL,KAAK,CAAC1C,GAAG,CAACG,WAAW,GAAGuC,KAAK,CAAC1C,GAAG,CAACI,cAAc;;MAC1EP,UAAU,YAAU6C,KAAK,CAACtX,OAAO,CAACyU,UAAU,YAAS;MACrD6G,SAAS,EAAE,mCAAmC;MAC9C9F,YAAY,EAAE8B,KAAK,CAACtX,OAAO,CAAC2U,YAAY;MACxCmG,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM,IAAI,GAAG,CAAC;MAC9BgnB,KAAK,EAAEvD,KAAK,CAACtX,OAAO,CAACnM,IAAI,GAAG,CAAC;MAC7BoqB,SAAS,EAAE,YAAY;MACvBzD,QAAQ,EAAE,UAAU;MACpB0D,SAAS,EAAE,QAAQ;MACnBvD,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,KAAK;MACVF,MAAM,EAAE;;GAEf;AAAA,CAAC,CAAC;;ACjHH;;;;;AAMA,IAYaqQ,UAAU,gBAA8Bzd,KAAK,CAACoL,IAAI,CAAC;EAC5D,IAAMZ,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMgI,gBAAgB,GAAGD,mBAAmB,EAAE;EAE9C,IAAMoL,qBAAqB,GAAGtc,OAAO,CAAC;IAClC,IAAMuc,UAAU,GAAmB,EAAE;IACrC,KAAK,IAAI33B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGusB,gBAAgB,CAACtsB,MAAM,EAAE,EAAED,CAAC,EAAE;MAC9C,IAAM0a,GAAG,qBAAmB1a,CAAG;MAC/B,IAAM43B,SAAS,GACX5d,oBAACgd,iBAAiB;QACdtc,GAAG,EAAEA,GAAG;QACRuc,KAAK,EAAEj3B,CAAC,KAAK,CAAC;QACdlE,OAAO,EAAEkE,CAAC,KAAKusB,gBAAgB,CAACtsB,MAAM,GAAG,CAAC;QAC1CC,IAAI,EAAEqsB,gBAAgB,CAACvsB,CAAC;QAE/B;MACD23B,UAAU,CAACj4B,IAAI,CAACk4B,SAAS,CAAC;;IAE9B,OAAOD,UAAU;GACpB,EAAE,CAACpL,gBAAgB,CAAC,CAAC;EAEtB,OACIvS,oBAACoQ,GAAG;IAACrB,SAAS,EAAEvE,OAAO,CAACqT;KACpB7d,oBAACoQ,GAAG;IAACrB,SAAS,EAAEvE,OAAO,CAACsT;KACpB9d,oBAAC2c,kBAAkB;IAAC90B,YAAY,EAAE+J,aAAa,CAACC,gBAAgB,CAAC1L;IAAM,EACvE6Z,oBAAC+d,WAAW;IACRhP,SAAS,EAAEvE,OAAO,CAACwT,iBAAiB;IACpCxT,OAAO,EAAE;MAAEyT,SAAS,EAAEzT,OAAO,CAACyT;;KAE7BP,qBAAqB,CACZ,CACZ,CACJ;AAEd,CAAC,CAAC;AAEF,IAAMnT,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/C6T,aAAa,EAAE;MACXvB,aAAa,EAAEtS,KAAK,CAAC/C,OAAO,CAACC;KAChC;IACD4W,eAAe,EAAE;MACbjQ,OAAO,EAAE;KACZ;IACDqQ,iBAAiB,EAAE;MACf9W,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3CoG,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM,IAAI;MAC1BgnB,KAAK,EAAEvD,KAAK,CAACtX,OAAO,CAACnM,IAAI;MACzB0hB,OAAO,EAAE;KACZ;IACD+V,iBAAiB,EAAE;MACf5W,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3C+W,QAAQ,EAAE;KACb;IACDF,SAAS,EAAE;MACPzB,WAAW,EAAE/R,SAAS,CAAC,CAAC,CAAC;MACzBgS,UAAU,EAAEhS,SAAS,CAAC,CAAC;;GAE9B;AAAA,CAAC,CAAC;;AC3EH;;;;;AAMA,AAuBO,IAAM2T,qBAAqB,gBAAGpe,KAAK,CAACqL,UAAU,CACjD,UAACC,KAAiC,EAAEtpB,GAA6B;;EAC7D,IAAQiiB,IAAI,GAAsCqH,KAAK,CAA/CrH,IAAI;IAAEwW,MAAM,GAA8BnP,KAAK,CAAzCmP,MAAM;IAAE/hB,IAAI,GAAwB4S,KAAK,CAAjC5S,IAAI;IAAEia,OAAO,GAAerH,KAAK,CAA3BqH,OAAO;IAAED,QAAQ,GAAKpH,KAAK,CAAlBoH,QAAQ;EAC7C,IAAMlI,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMqO,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAEhD,IAAM2L,SAAS,GAAGrE,CAAC,EAAAoR,EAAA,OAAAA,EAAA,CACdtR,OAAO,CAACuR,UAAU,IAAG,IAAI,EAAAD,EAAA,CACzBtR,OAAO,CAACyR,YAAY,IAAGxB,MAAM,EAAAqB,EAAA,EAChC;EACF,OACI9b,oBAACqe,QAAQ;IACLr8B,GAAG,EAAEA,GAAG;IACR+sB,SAAS,EAAEA,SAAS;IACpB4D,OAAO,EAAEA,OAAO;IAChBD,QAAQ,EAAEA;KAETha,IAAI,IACDsH,oBAACse,YAAY;IAACvP,SAAS,EAAEvE,OAAO,CAAC9R;KAC7BsH,oBAAC4Y,UAAU;IAAClgB,IAAI,EAAEA,IAAI;IAAEmjB,UAAU,EAAE;IAAQ,CAEnD,EACD7b,oBAACue,YAAY;IAACC,sBAAsB,EAAE;MAAEzP,SAAS,EAAEvE,OAAO,CAACvG;;KACtDA,IAAI,CACM,CACR;AAEnB,CAAC,CACJ;AAED,IAAMsG,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/C+R,UAAU,EAAE;MACR5U,UAAU,EAAEsD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAACyU,UAAU,CAAC;MAC/CqG,MAAM,EAAE/C,SAAS,CAACT,KAAK,CAACtX,OAAO,CAACnM,IAAI,CAAC;MACrCk4B,SAAS,EAAEhU,SAAS,CAAC,MAAM,CAAC;MAC5B6M,QAAQ,EAAE7M,SAAS,CAAC,MAAM,CAAC;MAC3BxC,OAAO,EAAEwC,SAAS,CAAC,EAAE;KACxB;IACD/R,IAAI,EAAE;MACF0O,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3CkQ,QAAQ,EAAE7M,SAAS,CAAC,MAAM,CAAC;MAC3B6E,KAAK,EAAE7E,SAAS,CAAC,SAAS,CAAC;MAC3B+R,WAAW,EAAE;KAChB;IACDvY,IAAI,EAAE;MACFmD,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ;KAC7C;IACD6U,YAAY,EAAE;MACV3M,KAAK,EAAE7E,SAAS,CAACT,KAAK,CAACxD,MAAM,CAACM,UAAU;;GAE/C;AAAA,CAAC,CAAC;AAOH,AAAO,IAAM4X,0BAA0B,gBAAG1e,KAAK,CAACqL,UAAU,CACtD,UAACC,KAAsC,EAAEtpB,GAA6B;EAClE,IAAQ6F,YAAY,GAAsByjB,KAAK,CAAvCzjB,YAAY;IAAE82B,eAAe,GAAKrT,KAAK,CAAzBqT,eAAe;EAErC,IAAM10B,MAAM,GAAGoV,gBAAgB,CAACzX,oBAAoB,EAAEC,YAAY,CAAC;EACnE,IAAM+0B,aAAa,GAAGzC,oBAAoB,CAACtyB,YAAY,CAAC;EACxD,IAAAg1B,mBAAA,GAAmCzC,kBAAkB,CAACvyB,YAAY,CAAC;IAA3D6Q,IAAI,GAAAmkB,mBAAA,CAAJnkB,IAAI;IAAE+hB,MAAM,GAAAoC,mBAAA,CAANpC,MAAM;IAAE/H,QAAQ,GAAAmK,mBAAA,CAARnK,QAAQ;EAC9B,IAAAoK,qBAAA,GAAuBtb,6BAA6B,CAACvX,MAAM,CAAC;IAApDwX,UAAU,GAAAqb,qBAAA,CAAVrb,UAAU;;EAGlB,IAAMmd,WAAW,GAAGpf,WAAW,CAAC;IAC5Bod,aAAa,EAAE;IACf,IAAI+B,eAAe,EAAEA,eAAe,EAAE;GACzC,EAAE,CAACA,eAAe,EAAE/B,aAAa,CAAC,CAAC;EAEpC,IAAI,CAAC3yB,MAAM,EAAE,OAAO,IAAI;EACxB,IAAQwI,MAAM,GAAKxI,MAAM,CAAjBwI,MAAM;EACd,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EACxB,IAAIxI,MAAM,CAACoxB,gBAAgB,KAAK12B,SAAS,IAAIsF,MAAM,CAACoxB,gBAAgB,EAAE,KAAKnB,qBAAqB,CAAC6C,MAAM,EAAE,OAAO,IAAI;EAEpH,OACI/c,oBAACoe,qBAAqB;IAClBp8B,GAAG,EAAEA,GAAG;IACRiiB,IAAI,EAAExC,UAAU;IAChB/I,IAAI,EAAEA,IAAI;IACVia,OAAO,EAAEiM,WAAW;IACpBnE,MAAM,EAAEA,MAAM;IACd/H,QAAQ,EAAEA;IACZ;AAEV,CAAC,CACJ;;ACrHD;;;;;AAMA,AAWO,IAAMmM,eAAe,gBAAmC7e,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;EAC3E,IAAQllB,IAAI,GAAoBklB,KAAK,CAA7BllB,IAAI;IAAEuB,aAAa,GAAK2jB,KAAK,CAAvB3jB,aAAa;EAC3B,IAAAm3B,eAAA,GAA4B9e,KAAK,CAAC9e,QAAQ,CAAqB,IAAI,CAAC;IAA7D69B,MAAM,GAAAD,eAAA;IAAEE,SAAS,GAAAF,eAAA;EAExB,IAAMF,WAAW,GAAGpf,WAAW,CAC3B,UAACmN,KAA0C;IAAA,OAAKqS,SAAS,CAACrS,KAAK,CAACsS,aAAa,CAAC;KAC9E,CAACD,SAAS,CAAC,CACd;EACD,IAAME,WAAW,GAAG1f,WAAW,CAAC;IAAA,OAAMwf,SAAS,CAAC,IAAI,CAAC;KAAE,CAACA,SAAS,CAAC,CAAC;EAEnE,IAAMG,kBAAkB,GAAG/d,OAAO,CAC9B;IAAA,OACIzZ,aAAa,CAACoC,GAAG,CAAC,UAAA5D,EAAE;MAAA,OAChB6Z,oBAAC0e,0BAA0B;QACvBhe,GAAG,iBAAeva,EAAI;QACtB0B,YAAY,EAAE1B,EAAE;QAChBw4B,eAAe,EAAEO;QACnB;KACL,CAAC;KACN,CAACv3B,aAAa,EAAEu3B,WAAW,CAAC,CAC/B;EAED,IAAME,aAAa,GAAGne,2BAA2B,CAAC7a,IAAI,CAAC;EACvD,IAAMokB,OAAO,GAAGD,WAAS,EAAE;EAC3B,OACIvK,0CACIA,oBAACwb,aAAa;IAACvX,IAAI,EAAEmb,aAAa;IAAEzM,OAAO,EAAEiM,WAAW;IAAElD,QAAQ,EAAE;IAAQ,EAC5E1b,oBAACqf,IAAI;IACDC,SAAS;IACTC,WAAW;IACXC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAEV,MAAM;IAChBW,OAAO,EAAER,WAAW;IACpBS,IAAI,EAAEC,OAAO,CAACb,MAAM,CAAC;IACrBc,kBAAkB,EAAE,GAAG;IACvBrV,OAAO,EAAE;MAAExQ,IAAI,EAAEwQ,OAAO,CAACsV;;KAExBX,kBAAkB,CAChB,CACR;AAEX,CAAC,CAAC;AAEF,IAAM5U,WAAS,gBAAGX,sBAAsB,CAAC;EAAA,OAAO;IAC5CkW,YAAY,EAAE;MACVxD,aAAa,EAAE7R,SAAS,CAAC,CAAC,CAAC;MAC3B8R,UAAU,EAAE9R,SAAS,CAAC,CAAC;;GAE9B;AAAA,CAAC,CAAC;;ACjEH;;;;;AAMA,AAYO,IAAMsV,WAAW,gBAA+B/f,KAAK,CAACoL,IAAI,CAAC;EAC9D,IAAMZ,OAAO,GAAGD,WAAS,EAAE;EAE3B,IAAMlb,cAAc,GAAGoQ,WAAW,CAAClQ,SAAS,CAACL,iBAAiB,CAAC;EAC/D,IAAM2f,aAAa,GAAGpP,WAAW,CAAC7V,mBAAmB,CAAC;EACtD,IAAMo2B,WAAW,GAAGvgB,WAAW,CAACvW,qBAAqB,CAAC;EAEtD,IAAMgY,IAAI,GAAGC,OAAO,EAAE;EACtB,IAAM8e,eAAe,GAAG/e,IAAI,CAACG,aAAa,CACtC;IACIlb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAACuf,OAAO,EAAE,kBAAkB,CAAC;IACxD3e,cAAc;GAKjB,EACD;IAAE4e,SAAS,EAAE9wB,cAAc,CAACpJ;GAAQ,CACvC;EACD,IAAMm6B,cAAc,GAAGlf,IAAI,CAACG,aAAa,CACrC;IACIlb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAACuf,OAAO,EAAE,mBAAmB,CAAC;IACzD3e,cAAc;GAIjB,EACD;IAAE4e,SAAS,EAAEtR;GAAe,CAC/B;EACD,IAAMwR,YAAY,GAAGnf,IAAI,CAACG,aAAa,CACnC;IACIlb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAACuf,OAAO,EAAE,iBAAiB,CAAC;IACvD3e,cAAc;GAIjB,EACD;IAAE4e,SAAS,EAAEH;GAAa,CAC7B;EAED,OACIhgB;IAAK+O,SAAS,EAAEvE,OAAO,CAAC8V;KACpBtgB,oBAACugB,UAAU;IAACxR,SAAS,EAAEvE,OAAO,CAACgW,QAAQ;IAAEC,OAAO,EAAC;KAC5CR,eAAe,EACf,CAACG,cAAc,IAAIC,YAAY,KAC5BrgB;IAAM+O,SAAS,EAAEvE,OAAO,CAACkW;UAErB1gB;IAAM+O,SAAS,EAAEvE,OAAO,CAACmW;KACpBP,cAAc,CACZ,EACNA,cAAc,IAAIC,YAAY,IAAI,IAAI,EACvCrgB;IAAM+O,SAAS,EAAEvE,OAAO,CAACoW;KAAkBP,YAAY,CAAQ,MAEtE,CACQ,CACX;AAEd,CAAC,CAAC;AAEF,IAAM9V,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/CsW,aAAa,EAAE;MACX9S,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM,IAAI;MAC1BsnB,OAAO,EAAE;KACZ;IACD2S,QAAQ,EAAE;MACNrZ,UAAU,EAAEsD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAACyU,UAAU,CAAC;MAC/CC,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3CqV,UAAU,EAAEhS,SAAS,CAAC,EAAE,CAAC;MACzB+C,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM;KACzB;IACDm6B,aAAa,EAAE;MACXlE,WAAW,EAAE/R,SAAS,CAAC,CAAC,CAAC;MACzBgS,UAAU,EAAEhS,SAAS,CAAC,CAAC,CAAC;MACxBqM,OAAO,EAAE;KACZ;IACD6J,iBAAiB,EAAE;MACfrR,KAAK,EAAEtF,KAAK,CAACxD,MAAM,CAACM;KACvB;IACD8Z,eAAe,EAAE;GACpB;AAAA,CAAC,CAAC;;ACjGH;;;;;AAMA,AAiBO,IAAMC,aAAa,gBAAiC7gB,KAAK,CAACoL,IAAI,CAAC;EAClE,IAAMlK,IAAI,GAAGC,OAAO,EAAE;EACtB,IAAM2f,uBAAuB,GAAG5f,IAAI,CAACG,aAAa,CAAC;IAC/Clb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAACuf,OAAO,EAAE,mBAAmB,CAAC;IACzD3e,cAAc,EAAE;GACnB,CAAC;EAEF,IAAMiJ,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMqO,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAEhD,IAAM2d,cAAc,GAAGl/B,MAAM,EAAoB;EAEjD,IAAM+O,QAAQ,GAAGgP,WAAW,EAAE;EAC9B,IAAMohB,iBAAiB,GAAGvhB,WAAW,CAAClW,kBAAkB,CAAC;EAEzD,IAAAtI,SAAA,GAAkDC,QAAQ,CAAC8/B,iBAAiB,CAAC;IAAtEC,iBAAiB,GAAAhgC,SAAA;IAAEigC,oBAAoB,GAAAjgC,SAAA;EAC9C,IAAAkgC,YAAA,GAAqCrgC,WAAW,CAACmgC,iBAAiB,EAAE,GAAG,CAAC;IAAjEG,0BAA0B,GAAAD,YAAA;EACjC,IAAA3H,UAAA,GAAwDt4B,QAAQ,CAAC,KAAK,CAAC;IAAhEmgC,oBAAoB,GAAA7H,UAAA;IAAE8H,uBAAuB,GAAA9H,UAAA;EAEpDn4B,SAAS,CAAC;IACNuP,QAAQ,CACJS,YAAY,CAAC0L,mBAAmB,CAAC;MAC7B,IAAIgkB,cAAc,CAACj/B,OAAO,EAAEi/B,cAAc,CAACj/B,OAAO,CAACy/B,KAAK,EAAE;KAC7D,CAAC,CACL;IACD,OAAO;MACH3wB,QAAQ,CAACS,YAAY,CAAC0L,mBAAmB,CAAC,IAAI,CAAC,CAAC;KACnD;GACJ,EAAE,CAACnM,QAAQ,CAAC,CAAC;EAEdvP,SAAS,CAAC;IACNigC,uBAAuB,CAAC,KAAK,CAAC;IAC9B1wB,QAAQ,CAACS,YAAY,CAAC2L,eAAe,CAACokB,0BAA0B,CAAC,CAAC;GACrE,EAAE,CAACA,0BAA0B,EAAExwB,QAAQ,CAAC,CAAC;EAE1C,IAAM4wB,YAAY,GAAGhiB,WAAW,CAAC,UAACmN,KAAwC;IACtE2U,uBAAuB,CAAC,IAAI,CAAC;IAC7BJ,oBAAoB,CAACvU,KAAK,CAACsS,aAAa,CAACl+B,KAAK,CAAC;GAClD,EAAE,EAAE,CAAC;EACN,IAAM0gC,WAAW,GAAGjiB,WAAW,CAC3B,UAACmN,KAA4C;;;;;IAKzC,IAAIA,KAAK,CAACjM,GAAG,KAAK,QAAQ,EAAE;MACxBwgB,oBAAoB,CAAC,EAAE,CAAC;MACxBtwB,QAAQ,CAACS,YAAY,CAAC2L,eAAe,CAAC,EAAE,CAAC,CAAC;MAC1C,IAAI+jB,cAAc,CAACj/B,OAAO,EAAEi/B,cAAc,CAACj/B,OAAO,CAAC4/B,IAAI,EAAE;;GAEhE,EACD,CAAC9wB,QAAQ,CAAC,CACb;EAED,OACIoP,oBAAC2hB,SAAS;IACN5S,SAAS,EAAEvE,OAAO,CAACoX,oBAAoB;IACvCr7B,IAAI,EAAC,OAAO;IACZk6B,OAAO,EAAC,UAAU;IAClB1/B,KAAK,EAAEkgC,iBAAiB;IACxBpG,WAAW,EAAEiG,uBAAuB;IACpCe,QAAQ,EAAEL,YAAmB;IAC7BM,QAAQ,EAAEf,cAAc;IACxBgB,UAAU,EAAE;MACRC,OAAO,EAAEP,WAAW;MACpBQ,cAAc,EACVjiB,oBAACkiB,cAAc;QAACnT,SAAS,EAAEvE,OAAO,CAAC2X,UAAU;QAAEjV,QAAQ,EAAC;SACpDlN,oBAAC4Y,UAAU;QACPlgB,IAAI,EAAE2oB,oBAAoB,GAAGhsB,cAAc,CAAC8Q,OAAO,GAAG9Q,cAAc,CAAC1G,MAAM;QAC3EyzB,IAAI,EAAEf;QACR,CAET;MACDtS,SAAS,EAAEvE,OAAO,CAAC6X;KACtB;IACDC,UAAU,EAAE;MAAEvT,SAAS,EAAEvE,OAAO,CAAC+X;;IACnC;AAEV,CAAC,CAAC;AAEF,IAAMhY,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/C4X,oBAAoB,EAAE;MAClBpU,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM,IAAI;MAC1BgnB,KAAK,EAAE;KACV;IACD4U,UAAU,EAAE;MACR/a,QAAQ,EAAE,OAAO;MACjB0P,OAAO,EAAE;KACZ;IACDuL,gBAAgB,EAAE;MACdlb,UAAU,EAAEsD,SAAS,CAAC,CAAC,CAAC;MACxBxC,OAAO,EAAEwC,SAAS,CAAC,CAAC,CAAC;MACrB+X,MAAM,EAAE/X,SAAS,CAAC,CAAC,CAAC;MACpBrD,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3Cc,YAAY,EAAE8B,KAAK,CAACtX,OAAO,CAAC2U,YAAY;MACxCmG,MAAM,EAAExD,KAAK,CAACtX,OAAO,CAACnM,IAAI,GAAG,CAAC;MAC9Bk8B,WAAW,EAAEhY,SAAS,CAAC,CAAC,CAAC;MACzBiS,SAAS,EAAE;KACd;IACD6F,qBAAqB,EAAE;MACnBpb,UAAU,EAAEsD,SAAS,CAAIT,KAAK,CAACtX,OAAO,CAACnM,IAAI,GAAG,CAAC,OAAI,CAAC;MACpD6gB,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAACtX,OAAO,CAAC0U,QAAQ,CAAC;MAC3CoG,MAAM,EAAE/C,SAAS,CAACT,KAAK,CAACtX,OAAO,CAACnM,IAAI,GAAG,CAAC,CAAC;MACzC0hB,OAAO,EAAEwC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAChC+X,MAAM,EAAE/X,SAAS,CAAC,CAAC,CAAC;MACpB,oBAAoB,EAAE;;GAE7B;AAAA,CAAC,CAAC;;ICtHUiY,WAAW,gBAA+B1iB,KAAK,CAACoL,IAAI,CAAC;EAC9D,IAAMZ,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMxiB,YAAY,GAAG0X,WAAW,CAAC3X,kBAAkB,CAAC;EAEpD,IAAM66B,qBAAqB,GAAGvhB,OAAO,CAAC;IAClC,IAAMuc,UAAU,GAAmB,EAAE;IACrC,KAAK,IAAI33B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+B,YAAY,CAAC9B,MAAM,EAAE,EAAED,CAAC,EAAE;MAC1C,IAAME,IAAI,GAAG6B,YAAY,CAAC/B,CAAC,CAAC;MAE5B,IAAM0a,GAAG,sBAAmB,OAAOxa,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAACE,IAAI,CAAE;MACzE,IAAMw3B,SAAS,GACX,OAAO13B,IAAI,KAAK,QAAQ,GACpB8Z,oBAAC2c,kBAAkB;QAACjc,GAAG,EAAEA,GAAG;QAAE7Y,YAAY,EAAE3B;QAAQ,GAEpD8Z,oBAAC6e,eAAe;QACZne,GAAG,EAAEA,GAAG;QACRta,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfuB,aAAa,EAAEzB,IAAI,CAACyB;QAE3B;MACLg2B,UAAU,CAACj4B,IAAI,CAACk4B,SAAS,CAAC;;IAE9B,OAAOD,UAAU;GACpB,EAAE,CAAC51B,YAAY,CAAC,CAAC;EAElB,OACIiY;IAAK+O,SAAS,EAAEvE,OAAO,CAACoY;KACpB5iB;IAAK+O,SAAS,EAAEvE,OAAO,CAACqY;KACpB7iB;IAAK+O,SAAS,EAAEvE,OAAO,CAACsY;KACpB9iB,oBAAC6gB,aAAa,OAAG,EACjB7gB,oBAAC+f,WAAW,OAAG,CACb,EACN/f;IAAK+O,SAAS,EAAEvE,OAAO,CAACuY;KAAeJ,qBAAqB,CAAO,CACjE,CACJ;AAEd,CAAC,CAAC;AAEF,IAAMpY,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/C4Y,cAAc,EAAE,EAAE;IAClBC,gBAAgB,EAAE;MACdG,QAAQ,EAAE,cAAc;MACxBnV,OAAO,EAAE;KACZ;IACDiV,WAAW,EAAE;MACTxG,aAAa,EAAEtS,KAAK,CAAC/C,OAAO,CAACC,gBAAgB;MAC7C8b,QAAQ,EAAE,QAAQ;MAClB7E,QAAQ,EAAE,KAAK;MACftQ,OAAO,EAAE;KACZ;IACDoV,iBAAiB,EAAE;MACf9E,QAAQ,EAAE;KACb;IACD4E,YAAY,EAAE;MACVzG,aAAa,EAAEtS,KAAK,CAAC/C,OAAO,CAACC,gBAAgB;MAC7C8b,QAAQ,EAAE,QAAQ;MAClBnV,OAAO,EAAE;;GAEhB;AAAA,CAAC,CAAC;;ACtEH;;;;;AAMA,AAaO,IAAMqV,aAAa,GAAiC,SAA9CA,aAAaA,CAAiC5X,KAAK;EAC5D,IAAQiC,KAAK,GAAajC,KAAK,CAAvBiC,KAAK;IAAEC,MAAM,GAAKlC,KAAK,CAAhBkC,MAAM;EACrB,IAAMhD,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMqO,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,IAAM0L,KAAK,GAAkB;IACzBvB,KAAK,EAALA,KAAK;IACLC,MAAM,EAANA;GACH;EAED,IAAMtM,IAAI,GAAGC,OAAO,EAAE;EACtB,IAAMgiB,WAAW,GAAGjiB,IAAI,CAACG,aAAa,CAAC;IACnClb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAACyiB,QAAQ,EAAE,eAAe,CAAC;IACtD7hB,cAAc,EAAE;GACnB,CAAC;EAEF,OACIvB;IAAK+O,SAAS,EAAEvE,OAAO,CAAC6Y,aAAa;IAAEvU,KAAK,EAAEA;KAC1C9O;IAAK+O,SAAS,EAAEvE,OAAO,CAAC8Y;KACpBtjB,oBAAC4Y,UAAU;IAAClgB,IAAI,EAAErD,cAAc,CAACkuB;IAAc,WACvCJ,WAAW,CACjB,CACJ;AAEd,CAAC;AAED,IAAM5Y,WAAS,gBAAGX,sBAAsB,CAAC,UAAAI,KAAK;EAAA,OAAK;IAC/CqZ,aAAa,EAAE;MACX/T,KAAK,EAAEtF,KAAK,CAACkF,OAAO,CAACjL,IAAI,CAACyO,QAAQ;MAClCxF,QAAQ,EAAE,UAAU;MACpB0D,SAAS,EAAE,QAAQ;MACnBxJ,QAAQ,EAAE;KACb;IACDkc,oBAAoB,EAAE;MAClBtV,SAAS,EAAE,mCAAmC;MAC9Cd,QAAQ,EAAE,UAAU;MACpBG,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE;;GAEZ;AAAA,CAAC,CAAC;;ACzDH;;;;;AAMA,AAYO,IAAMkW,eAAe,GAAG,SAAlBA,eAAeA,CACxBxJ,aAA8C,EAC9CC,aAA8C;EAE9C,IAAM1uB,gBAAgB,GAAGkU,WAAW,CAACnU,sBAAsB,CAAC;EAE5D,IAAMm4B,OAAO,GAAG5hC,MAAM,CAAC;IACnB6hC,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE;GACjB,CAAC;EAEF,OAAOnkB,WAAW,CACd,UAACmN,KAAuB;IACpB,IAAMiX,eAAe,GAAoB;MACrChX,MAAM,EAAED,KAAK,CAACC,MAAM;MACpBxV,OAAO,EAAEuV,KAAK,CAACvV,OAAO,IAAIuV,KAAK,CAACkX,OAAO;MACvCpsB,QAAQ,EAAEkV,KAAK,CAAClV;KAEnB;IAEDgsB,OAAO,CAAC3hC,OAAO,CAAC4hC,UAAU,EAAE;IAC5B,IAAID,OAAO,CAAC3hC,OAAO,CAAC4hC,UAAU,KAAK,CAAC,EAAE;MAClC,IAAI1J,aAAa,EAAE;QACfrN,KAAK,CAACE,cAAc,EAAE;QACtBmN,aAAa,CAAC4J,eAAe,CAAC;;MAElCH,OAAO,CAAC3hC,OAAO,CAAC4hC,UAAU,GAAG,CAAC;;MAE9BD,OAAO,CAAC3hC,OAAO,CAAC6hC,YAAY,GAAGpiC,UAAU,CACrC;QAAA,OAAOkiC,OAAO,CAAC3hC,OAAO,CAAC4hC,UAAU,GAAG,CAAC;OAAC,EACtCn4B,gBAAgB,CACnB;KACJ,MAAM,IAAIk4B,OAAO,CAAC3hC,OAAO,CAAC4hC,UAAU,KAAK,CAAC,EAAE;MACzC,IAAIzJ,aAAa,EAAE;QACftN,KAAK,CAACE,cAAc,EAAE;QACtBoN,aAAa,CAAC2J,eAAe,CAAC;;MAElC,IAAI,OAAOH,OAAO,CAAC3hC,OAAO,CAAC6hC,YAAY,KAAK,QAAQ,EAAE;QAClDniC,YAAY,CAACiiC,OAAO,CAAC3hC,OAAO,CAAC6hC,YAAY,CAAC;QAC1CF,OAAO,CAAC3hC,OAAO,CAAC6hC,YAAY,GAAG,IAAI;QACnCF,OAAO,CAAC3hC,OAAO,CAAC4hC,UAAU,GAAG,CAAC;;;GAGzC,EACD,CAACn4B,gBAAgB,EAAEyuB,aAAa,EAAEC,aAAa,EAAEwJ,OAAO,CAAC,CAC5D;AACL,CAAC;AAED,AAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAI/J,eAA2C;EACzE,OAAOva,WAAW,CACd,UAACmN,KAA0B;IACvB,IAAI,CAACoN,eAAe,EAAE;IAEtB,IAAMgK,kBAAkB,GAAuB;MAC3CjsB,QAAQ,EAAE6U,KAAK,CAACqX,WAAW,CAAC3f,IAAI,KAAK,OAAO;MAC5CtM,QAAQ,EAAE4U,KAAK,CAACqX,WAAW,CAAC3f,IAAI,KAAK,OAAO;MAC5CuI,MAAM,EAAED,KAAK,CAACC,MAAM;MACpBxV,OAAO,EAAEuV,KAAK,CAACvV,OAAO;MACtBK,QAAQ,EAAEkV,KAAK,CAAClV;KACnB;IAED,IAAIssB,kBAAkB,CAAChsB,QAAQ,IAAIgsB,kBAAkB,CAACjsB,QAAQ,EAAE;MAC5D6U,KAAK,CAACE,cAAc,EAAE;MACtBF,KAAK,CAACsX,eAAe,EAAE;MACvBlK,eAAe,CAACgK,kBAAkB,CAAC;;GAE1C,EACD,CAAChK,eAAe,CAAC,CACpB;AACL,CAAC;;AClDM,IAAMmK,gBAAgB,GAAoC,SAApDA,gBAAgBA,CAAoC5Y,KAAK;EAClE,IACIwE,QAAQ,GAORxE,KAAK,CAPLwE,QAAQ;IACIqU,UAAU,GAMtB7Y,KAAK,CANL8Y,UAAU;IACVC,gBAAgB,GAKhB/Y,KAAK,CALL+Y,gBAAgB;IAChBrK,aAAa,GAIb1O,KAAK,CAJL0O,aAAa;IACbC,aAAa,GAGb3O,KAAK,CAHL2O,aAAa;IACbF,eAAe,GAEfzO,KAAK,CAFLyO,eAAe;IACfuK,UAAU,GACVhZ,KAAK,CADLgZ,UAAU;EAGd,IAAM1F,WAAW,GAAG4E,eAAe,CAACxJ,aAAa,EAAEC,aAAa,CAAC;EACjE,IAAMsK,aAAa,GAAGT,iBAAiB,CAAC/J,eAAe,CAAC;EAExD,IAAMyK,SAAS,GAA4B;IACvCC,OAAO,EAAEjlB,WAAW,CAAC;MAAA,OAAM8kB,UAAU,IAAIA,UAAU,CAAC,IAAI,CAAC;OAAE,CAACA,UAAU,CAAC,CAAC;IACxEI,MAAM,EAAEllB,WAAW,CAAC;MAAA,OAAM8kB,UAAU,IAAIA,UAAU,CAAC,KAAK,CAAC;OAAE,CAACA,UAAU,CAAC;GAC1E;EAED,IAAItK,aAAa,IAAIC,aAAa,IAAIF,eAAe,EAAE;IACnDyK,SAAS,CAAC7R,OAAO,GAAGiM,WAAW;IAC/B4F,SAAS,CAACG,SAAS,GAAGJ,aAAa;IACnCC,SAAS,CAACI,QAAQ,GAAG,CAAC;;EAG1B,IAAMC,WAAW,GAAArsB,QAAA,KAAQgsB,SAAS,EAAKH,gBAAgB,CAAE;EACzD,OAAOrkB,oBAACmkB,UAAU,oBAAKU,WAAW,GAAG/U,QAAQ,CAAc;AAC/D,CAAC;;AChED;;;;;AAMA,AAYO,IAAMgV,aAAa,gBAAiC9kB,KAAK,CAACoL,IAAI,CAAC,UAAApU,IAAA;MAAGvT,IAAI,GAAAuT,IAAA,CAAJvT,IAAI;IAAEsrB,SAAS,GAAA/X,IAAA,CAAT+X,SAAS;EACpF,IAAM8J,sBAAsB,GAAGL,yBAAyB,CAAC/0B,IAAI,CAAC;EAC9D,IAAMshC,iBAAiB,GAAG7L,oBAAoB,CAACz1B,IAAI,CAAC;EAEpD,IAAM+mB,OAAO,GAAGD,WAAS,EAAE;EAC3B,OACIvK;IAAM+O,SAAS,EAAEA,SAAS;IAAEhP,KAAK,EAAEtc,IAAI,GAAGA,IAAI,CAAC2C,IAAI,GAAGzB;KACjDk0B,sBAAsB,CAAC5yB,MAAM,GAAG,CAAC,IAC9B+Z;IAAM+O,SAAS,EAAEvE,OAAO,CAACiO;KAAgBI,sBAAsB,CAClE,EACAkM,iBAAiB,CACf;AAEf,CAAC,CAAC;AACFD,aAAa,CAACtZ,WAAW,GAAG,eAAe;AAE3C,IAAMjB,WAAS,gBAAGd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAC9CyO,aAAa,EAAE;MACXnJ,KAAK,EAAEtF,KAAK,CAACkF,OAAO,CAACjL,IAAI,CAAC+gB,IAAI;MAC9B9X,QAAQ,EAAE,UAAU;MACpB9F,QAAQ,EAAE,SAAS;MACnB6d,YAAY,EAAE;;GAErB;AAAA,CAAC,CAAC;;AC9BI,IAAMC,YAAY,gBAA6BllB,KAAK,CAACoL,IAAI;AAC5D;AACA,UAAApU,IAAA;MAAGvT,IAAI,GAAAuT,IAAA,CAAJvT,IAAI;IAAEk0B,QAAQ,GAAA3gB,IAAA,CAAR2gB,QAAQ;IAAEC,OAAO,GAAA5gB,IAAA,CAAP4gB,OAAO;EACtB,IAAMuN,UAAU,GAAmBzN,iBAAiB,CAACj0B,IAAI,EAAEk0B,QAAQ,EAAEC,OAAO,CAAC;EAE7E,IAAAwN,qBAAA,GAA8CtjB,4BAA4B,CACtEre,IAAI,CACP;IAFOye,iBAAiB,GAAAkjB,qBAAA,CAAjBljB,iBAAiB;IAAEE,cAAc,GAAAgjB,qBAAA,CAAdhjB,cAAc;EAIzC,IAAMoI,OAAO,GAAGD,WAAS,CAAC4a,UAAU,CAAC;EACrC,IAAMvM,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,IAAMiiB,kBAAkB,GAAG9N,qBAAqB,CAAC9zB,IAAI,CAAC;EACtD,OACIuc;IAAK+O,SAAS,EAAEvE,OAAO,CAAC1B;KAAmBuc,kBAAkB,GACzDrlB;IAAK+O,SAAS,EAAEvE,OAAO,CAAC8a;KACpBtlB,oBAAC4Y,UAAU;IACPlgB,IAAI,EAAEysB,UAAU,CAACzsB,IAAI;IACrB0pB,IAAI,EAAE+C,UAAU,CAACjN,QAAQ;IACzB2D,UAAU,EAAE;IACd,CACA,EACN7b;IAAK+O,SAAS,EAAEvE,OAAO,CAAC+a;KACpBvlB;IACI+O,SAAS,EAAEvE,OAAO,CAACgb,iBAAiB;IACpCzlB,KAAK,EAAEtc,IAAI,GAAGA,IAAI,CAAC2C,IAAI,GAAGzB;KAE1Bqb,oBAAC8kB,aAAa;IAACrhC,IAAI,EAAEA;IAAQ,CAC3B,EACNuc;IAAK+O,SAAS,EAAEvE,OAAO,CAACib;KACpBzlB;IAAK+O,SAAS,EAAEvE,OAAO,CAACkb;KACnBjiC,IAAI,GACDye,iBAAiB,WAAjBA,iBAAiB,GAAIlC,2CAAc,GAEnCA,oBAACqW,eAAe;IAACC,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;IAC7C,CACC,EACNvW;IAAK+O,SAAS,EAAEvE,OAAO,CAACkb;KACnBjiC,IAAI,GACD2e,cAAc,WAAdA,cAAc,GAAIpC,2CAAc,GAEhCA,oBAACqW,eAAe;IAACC,SAAS,EAAE,EAAE;IAAEC,SAAS,EAAE;IAC9C,CACC,CACJ,CACJ,EACNvW;IAAK+O,SAAS,EAAC;IAAkC,EACjD/O;IAAK+O,SAAS,EAAC;IAAoC,CACjD;AAEd,CAAC,CACJ;AAED,IAAMxE,WAAS,gBAAGd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAC9ClB,aAAa,EAAE;MACX1B,QAAQ,EAAE4C,KAAK,CAAClB,aAAa,CAAC1B,QAAQ;MACtCue,UAAU,EAAE,QAAQ;MACpBzY,QAAQ,EAAE,UAAU;MACpBW,OAAO,EAAE,MAAM;MACfL,MAAM,EAAE;KACX;IACD8X,iBAAiB,EAAE;MACflW,eAAe,EAAE,SAAAA,gBAAChoB,KAAqB;QAAA,OAAKA,KAAK,CAACkoB,KAAK;;MACvDL,SAAS,EAAE,4CAA4C;MACvD/G,YAAY,EAAE8B,KAAK,CAAClB,aAAa,CAACG,gBAAgB;MAClD7B,QAAQ,EAAE4C,KAAK,CAAClB,aAAa,CAACE,YAAY;MAC1CsG,KAAK,EAAE,MAAM;MACbrH,OAAO,EAAE;KACZ;IACDsd,wBAAwB,EAAE;MACtB7U,aAAa,EAAE,QAAQ;MACvB7C,OAAO,EAAE,MAAM;MACfsQ,QAAQ,EAAE;KACb;IACDqH,iBAAiB,EAAE;MACfvd,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;KACvB;IACDwd,uBAAuB,EAAE;MACrBre,QAAQ,EAAE4C,KAAK,CAAClB,aAAa,CAACC,gBAAgB;MAC9C2H,aAAa,EAAE,KAAK;MACpB7C,OAAO,EAAE;KACZ;IACD6X,qBAAqB,EAAE;MACnBzd,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACf6O,OAAO,EAAE;;GAEhB;AAAA,CAAC,CAAC;;AClFI,IAAM8O,YAAY,gBAAG5lB,KAAK,CAACoL,IAAI,CAAC,UAAApU,IAAA;MAAGvT,IAAI,GAAAuT,IAAA,CAAJvT,IAAI;IAAEqsB,QAAQ,GAAA9Y,IAAA,CAAR8Y,QAAQ;EACpD,IAAA+V,gBAAA,GAAiCrQ,eAAe,CAAC/xB,IAAI,CAAC;IAA9C0xB,IAAI,GAAA0Q,gBAAA,CAAJ1Q,IAAI;IAAErB,IAAI,GAAA+R,gBAAA,CAAJ/R,IAAI;IAAE6B,QAAQ,GAAAkQ,gBAAA,CAARlQ,QAAQ;EAE5BC,eAAe,CAACnyB,IAAI,EAAEkyB,QAAQ,CAAC;EAC/B,IAAMnL,OAAO,GAAGD,WAAS,EAAE;EAC3B,OACIvK;IAAKhe,GAAG,EAAEmzB,IAAI;IAAEpG,SAAS,EAAEvE,OAAO,CAACsb;KAC/B9lB;IACIhe,GAAG,EAAEuB,UAAU,CAACY,WAAW,CAACV,IAAI,CAAC,GAAGqwB,IAAI,GAAG,IAAI;IAC/C/E,SAAS,EAAEvE,OAAO,CAACsb;KAElBhW,QAAQ,CAAC6F,QAAQ,CAAC,CACjB,CACJ;AAEd,CAAC,CAAC;AAEF,AAAO,IAAMpL,WAAS,gBAAGd,qBAAqB,CAAC;EAAA,OAAO;IAClDqc,UAAU,EAAE;MACRtY,MAAM,EAAE;;GAEf;AAAA,CAAC,CAAC;;ACnCH;;;;;AAMA,AAWO,IAAMuY,aAAa,gBAAiC/lB,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;EACvE,IAAQyD,SAAS,GAAmBzD,KAAK,CAAjCyD,SAAS;IAAEgJ,YAAY,GAAKzM,KAAK,CAAtByM,YAAY;EAE/B,IAAMiO,cAAc,GAAwBjO,YAAY,GAAG;IAAEkO,eAAe,YAAUlO,YAAY;GAAM,GAAG,EAAE;EAE7G,IAAMvN,OAAO,GAAGD,WAAS,EAAE;EAC3B,OAAOvK;IAAK+O,SAAS,EAAErE,UAAC,CAAC,CAACqE,SAAS,EAAEvE,OAAO,CAAC0b,aAAa,CAAC,CAAC;IAAEpX,KAAK,EAAEkX;IAAkB;AAC3F,CAAC,CAAC;AACFD,aAAa,CAACva,WAAW,GAAG,eAAe;AAE3C,IAAMjB,WAAS,gBAAGX,sBAAsB,CAAC;EAAA,OAAO;IAC5Csc,aAAa,EAAE;MACXC,gBAAgB,EAAE,WAAW;MAC7BC,kBAAkB,EAAE,QAAQ;MAC5BC,cAAc,EAAE;;GAEvB;AAAA,CAAC,CAAC;;ACjCH;;;;;AAMA,AAYO,IAAMC,qBAAqB,gBAAgCtmB,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;;EAC9E,IAAmBmQ,iBAAiB,GAAenQ,KAAK,CAAhDyD,SAAS;IAAqB4G,QAAQ,GAAKrK,KAAK,CAAlBqK,QAAQ;EAC9C,IAAMyC,WAAW,GAAGD,UAAU,CAACxC,QAAQ,CAAC;EACxC,IAAMnL,OAAO,GAAGD,WAAS,CAACoL,QAAQ,CAAC;EACnC,IAAMiD,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,IAAI,CAACgV,WAAW,EAAE,OAAO,IAAI;EAC7B,IAAMrJ,SAAS,GAAGrE,CAAC,EAAAoR,EAAA,OAAAA,EAAA,CACdtR,OAAO,CAAC+S,YAAY,IAAG,IAAI,EAAAzB,EAAA,CAC3BL,iBAAiB,IAAG,IAAI,EAAAK,EAAA,EAC3B;EACF,OACI9b;IAAK+O,SAAS,EAAEA;KACZ/O,oBAAC4Y,UAAU;IAAClgB,IAAI,EAAE0f;IAAe,CAC/B;AAEd,CAAC,CAAC;AAEF,IAAM7N,WAAS,gBAAGd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAC9CuT,YAAY,EAAE;MACVjO,KAAK,EAAE,SAAAA,MAACqG,QAAuB;QAAA,OAC3BA,QAAQ,CAACN,SAAS,GACZM,QAAQ,CAACJ,UAAU,GACfvL,KAAK,CAAC1C,GAAG,CAACC,YAAY,GACtByC,KAAK,CAAC1C,GAAG,CAACE,eAAe,GAC7B,MAAM;;MAChBmJ,SAAS,EAAE,YAAY;MACvBzD,QAAQ,EAAE,UAAU;MACpB9F,QAAQ,EAAE,OAAO;MACjB0P,OAAO,EAAE,GAAG;MACZ7O,OAAO,EAAE,CAAC;MACV,UAAU,EAAE;QACRse,YAAY,EAAE,wBAAwB;QACtCC,UAAU,EAAE,iBAAiB;QAC7BtZ,QAAQ,EAAE,UAAU;QACpBuZ,OAAO,EAAE,IAAI;QACbrZ,MAAM,EAAE,CAAC,CAAC;QACVC,IAAI,EAAE,CAAC;QACPC,GAAG,EAAE;;;GAGhB;AAAA,CAAC,CAAC;;AC1DH;;;;;AAMA,AA0BO,IAAMoZ,sBAAsB,gBAAoC1mB,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;;EACnF,IAAmBmQ,iBAAiB,GAA2BnQ,KAAK,CAA5DyD,SAAS;IAAqBoW,UAAU,GAAe7Z,KAAK,CAA9B6Z,UAAU;IAAExP,QAAQ,GAAKrK,KAAK,CAAlBqK,QAAQ;EAE1D,IAAMgR,aAAa,GAAGC,eAAe,CAACzB,UAAU,CAAC;EACjD,IAAM0B,WAAW,GAAGC,aAAa,CAAC3B,UAAU,CAAC;EAC7C,IAAM4B,aAAa,GAAGC,oBAAoB,CAAC7B,UAAU,CAAC;EACtD,IAAMpW,SAAS,GAAGrE,CAAC,EAAAoR,EAAA,OAAAA,EAAA,CACd6K,aAAa,CAACM,WAAW,IAAG,IAAI,EAAAnL,EAAA,CAChCL,iBAAiB,IAAI,EAAE,IAAG,CAAC,CAACA,iBAAiB,EAAAK,EAAA,EAChD;EACF,OACI9b;IAAK+O,SAAS,EAAEA;KACZ/O;IAAK+O,SAAS,EAAE4X,aAAa,CAACO;KAC1BlnB;IAAK+O,SAAS,EAAE4X,aAAa,CAACQ;IAAqB,EACnDnnB;IAAK+O,SAAS,EAAE4X,aAAa,CAACS;KAC1BpnB,oBAACsmB,qBAAqB;IAACvX,SAAS,EAAE8X,WAAW,CAACtJ,YAAY;IAAE5H,QAAQ,EAAEA;IAAY,EAClF3V;IAAK+O,SAAS,EAAErE,CAAC,CAAC,CAACmc,WAAW,CAACQ,QAAQ,EAAEV,aAAa,CAACU,QAAQ,CAAC;KAAIlC,UAAU,CAAChgC,aAAa,CAAO,EACnG6a;IAAK+O,SAAS,EAAEgY,aAAa,CAACO;IAA0B,EACxDtnB,oBAAC+lB,aAAa;IAAChX,SAAS,EAAE8X,WAAW,CAACU,SAAS;IAAExP,YAAY,EAAEoN,UAAU,CAACpN;IAAgB,CACxF,CACJ,CACJ;AAEd,CAAC,CAAC;AACF2O,sBAAsB,CAAClb,WAAW,GAAG,wBAAwB;AAE7D,IAAMob,eAAe,gBAAGnd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IACpDid,WAAW,EAAE;MACT/e,YAAY,EAAE8B,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MAC9CgF,QAAQ,EAAE,UAAU;MACpBkK,QAAQ,EAAE;KACb;IACD+P,iBAAiB,EAAE;MACf/X,eAAe,EAAE,SAAAA,gBAAChoB,KAAqB;QAAA,OAAKA,KAAK,CAACkoB,KAAK;;MACvDL,SAAS,EAAE,SAAAA,UAAC7nB,KAAqB;QAC7B,IAAIkoB,KAAK,GAAGtF,KAAK,CAAC1B,aAAa,CAACM,mBAAmB;QACnD,IAAIxhB,KAAK,CAACwwB,OAAO,EAAEtI,KAAK,GAAG,oBAAoB,CAAC,KAC3C,IAAIloB,KAAK,CAACuwB,QAAQ,EAAErI,KAAK,GAAG,uBAAuB;QACxD,kBAAgBA,KAAK;OACxB;MACDkY,mBAAmB,EAAExd,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MACrDuf,oBAAoB,EAAE,EAAE;MACxBva,QAAQ,EAAE,UAAU;MACpBwa,KAAK,EAAE,KAAK;MACZla,MAAM,EAAE,EAAE;MACVF,GAAG,EAAE,CAAC,EAAE;MACRD,IAAI,EAAE,CAAC;MACP,SAAS,EAAE;QACPsa,gBAAgB,EAAE3d,KAAK,CAACkF,OAAO,CAACG,UAAU,CAACkB,KAAK;QAChDqX,cAAc,EAAE5d,KAAK,CAACkF,OAAO,CAACG,UAAU,CAACkB,KAAK;QAC9CsX,iBAAiB,EAAE,aAAa;QAChCC,eAAe,EAAE,aAAa;QAC9BC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3BC,WAAW,EAAE,OAAO;QACpB9a,QAAQ,EAAE,UAAU;QACpBW,OAAO,EAAE,OAAO;QAChB4Y,OAAO,EAAE,IAAI;QACbiB,KAAK,EAAE,CAAC;QACRpa,GAAG,EAAE;;KAEZ;IACD4Z,iBAAiB,EAAE;MACf9X,eAAe,EAAE,SAAAA,gBAAChoB,KAAqB;QAAA,OAAKA,KAAK,CAACkoB,KAAK;;MACvDL,SAAS,EAAE,SAAAA,UAAC7nB,KAAqB;QAC7B,IAAIkoB,KAAK,GAAGtF,KAAK,CAAC1B,aAAa,CAACM,mBAAmB;QACnD,IAAIxhB,KAAK,CAACwwB,OAAO,EAAEtI,KAAK,GAAG,oBAAoB,CAAC,KAC3C,IAAIloB,KAAK,CAACuwB,QAAQ,EAAErI,KAAK,GAAG,uBAAuB;QACxD,kBAAgBA,KAAK;OACxB;MACDmY,oBAAoB,EAAEzd,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MACtDgF,QAAQ,EAAE,UAAU;MACpB+a,MAAM,EAAE,CAAC;MACTP,KAAK,EAAE,CAAC;MACRra,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;KACR;IACD8Z,eAAe,EAAE;MACbnY,SAAS,EAAE,SAAAA,UAAC7nB,KAAqB;QAC7B,IAAM8gC,OAAO,GAAa,EAAE;QAC5B,IAAI9gC,KAAK,CAACwwB,OAAO,EAAEsQ,OAAO,CAACxiC,IAAI,CAAC,kCAAkC,CAAC;QACnE,IAAI0B,KAAK,CAACuwB,QAAQ,EAAEuQ,OAAO,CAACxiC,IAAI,CAAC,wCAAwC,CAAC;QAC1EwiC,OAAO,CAACxiC,IAAI,YAAUskB,KAAK,CAAC1B,aAAa,CAACO,oBAAoB,iBAAc,CAAC;QAC7E,OAAOqf,OAAO,CAAC5kC,IAAI,CAAC,IAAI,CAAC;OAC5B;MACD8rB,eAAe,EAAE,SAAAA,gBAAChoB,KAAqB;QAAA,OAAKA,KAAK,CAACkoB,KAAK;;MACvDpH,YAAY,EAAE8B,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MAC9CgF,QAAQ,EAAE,UAAU;MACpBkK,QAAQ,EAAE,QAAQ;MAClB6Q,MAAM,EAAE,CAAC;MACTP,KAAK,EAAE,CAAC;MACRra,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;KACR;IACD+Z,QAAQ,EAAE;MACNjgB,QAAQ,EAAEqD,SAAS,CAACT,KAAK,CAAC1B,aAAa,CAACC,iBAAiB;;GAEhE;AAAA,CAAC,CAAC;AAEH,AAAO,IAAM4f,oBAAoB,gBAAoCnoB,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;;EACjF,IAAmBmQ,iBAAiB,GAA2BnQ,KAAK,CAA5DyD,SAAS;IAAqBoW,UAAU,GAAe7Z,KAAK,CAA9B6Z,UAAU;IAAExP,QAAQ,GAAKrK,KAAK,CAAlBqK,QAAQ;EAE1D,IAAMkR,WAAW,GAAGC,aAAa,CAAC3B,UAAU,CAAC;EAC7C,IAAM4B,aAAa,GAAGC,oBAAoB,CAAC7B,UAAU,CAAC;EACtD,IAAMvM,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,IAAM2L,SAAS,GAAGrE,CAAC,EAAA0d,GAAA,OAAAA,GAAA,CACdvB,WAAW,CAACI,WAAW,IAAG,IAAI,EAAAmB,GAAA,CAC9B3M,iBAAiB,IAAI,EAAE,IAAG,CAAC,CAACA,iBAAiB,EAAA2M,GAAA,EAChD;EACF,OACIpoB;IAAK+O,SAAS,EAAEA;KACZ/O,oBAACsmB,qBAAqB;IAACvX,SAAS,EAAE8X,WAAW,CAACtJ,YAAY;IAAE5H,QAAQ,EAAEA;IAAY,EAClF3V;IAAK+O,SAAS,EAAE8X,WAAW,CAACQ;KACxBrnB,oBAAC4Y,UAAU;IAAClgB,IAAI,EAAEysB,UAAU,CAACzsB,IAAI;IAAE0pB,IAAI,EAAE+C,UAAU,CAACjN;IAAY,CAC9D,EACNlY;IAAK+O,SAAS,EAAEgY,aAAa,CAACO;IAA0B,EACxDtnB,oBAAC+lB,aAAa;IAAChX,SAAS,EAAE8X,WAAW,CAACU,SAAS;IAAExP,YAAY,EAAEoN,UAAU,CAACpN;IAAgB,CACxF;AAEd,CAAC,CAAC;AACFoQ,oBAAoB,CAAC3c,WAAW,GAAG,sBAAsB;AAEzD,IAAMsb,aAAa,gBAAGrd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAClDid,WAAW,EAAE;MACThY,SAAS,EAAE,SAAAA,UAAC7nB,KAAqB;QAC7B,IAAM8gC,OAAO,GAAa,EAAE;QAC5B,IAAI9gC,KAAK,CAACuwB,QAAQ,EAAEuQ,OAAO,CAACxiC,IAAI,CAAC,sCAAsC,CAAC;QACxE,IAAI0B,KAAK,CAACwwB,OAAO,EAAEsQ,OAAO,CAACxiC,IAAI,CAAC,kCAAkC,CAAC;QACnEwiC,OAAO,CAACxiC,IAAI,YAAUskB,KAAK,CAAC1B,aAAa,CAACK,aAAa,iBAAc,CAAC;QACtE,OAAOuf,OAAO,CAAC5kC,IAAI,CAAC,IAAI,CAAC;OAC5B;MACD8rB,eAAe,EAAE,SAAAA,gBAAChoB,KAAqB;QAAA,OAAKA,KAAK,CAACkoB,KAAK;;MACvDpH,YAAY,EAAE8B,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MAC9CgF,QAAQ,EAAE,UAAU;MACpBkK,QAAQ,EAAE;KACb;IACDmG,YAAY,EAAE;MACVnQ,MAAM,EAAE;KACX;IACDia,QAAQ,EAAE;MACNrZ,SAAS,EAAE,mCAAmC;MAC9C5G,QAAQ,EAAE4C,KAAK,CAAC1B,aAAa,CAACG,QAAQ;MACtCqO,OAAO,EAAE,SAAAA,QAAC1vB,KAAqB;QAAA,OAAMA,KAAK,CAAC2wB,YAAY,IAAI,CAAC3wB,KAAK,CAACwwB,OAAO,GAAG,CAAC,GAAG,CAAC;OAAC;MAClFtI,KAAK,EAAE,SAAAA,MAACloB,KAAqB;QAAA,OACzBA,KAAK,CAACwwB,OAAO,GAAG5N,KAAK,CAAC1B,aAAa,CAACE,gBAAgB,GAAGwB,KAAK,CAAC1B,aAAa,CAACI,SAAS;;MACxFwE,QAAQ,EAAE,UAAU;MACpBG,IAAI,EAAE,KAAK;MACXD,MAAM,EAAE,EAAE;MACVE,GAAG,EAAE;KACR;IACDia,SAAS,EAAE;MACPrf,YAAY,EAAE8B,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MAC9CgF,QAAQ,EAAE,UAAU;MACpBE,MAAM,EAAE,CAAC;MACT6a,MAAM,EAAE,CAAC;MACTP,KAAK,EAAE,CAAC;MACRra,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE;;GAEZ;AAAA,CAAC,CAAC;AAEH,AAAO,IAAM0Z,oBAAoB,gBAAGvd,qBAAqB,CAAC;EAAA,OAAO;IAC7D6d,kBAAkB,EAAE;MAChBzZ,OAAO,EAAE,SAAAA,QAACzmB,KAAqB;QAAA,OAAMA,KAAK,CAACuwB,QAAQ,GAAG,OAAO,GAAG,MAAM;OAAC;MACvEtI,UAAU,EACN,4BAA4B,GAC5B,QAAQ,GACR,sBAAsB,GACtB,2BAA2B,GAC3B,wBAAwB,GACxB,0BAA0B,GAC1B,GAAG;MACPD,eAAe,EAAE,wBAAwB;MACzClC,QAAQ,EAAE,UAAU;MACpBM,MAAM,EAAE,MAAM;MACdD,KAAK,EAAE,MAAM;MACbH,MAAM,EAAE;KACX;IACDib,cAAc,EAAE;MACZxa,OAAO,EAAE,SAAAA,QAACzmB,KAAqB;QAAA,OAAMA,KAAK,CAACwwB,OAAO,GAAG,OAAO,GAAG,MAAM;OAAC;MACtE3I,SAAS,EAAE,kCAAkC;MAC7C/B,QAAQ,EAAE,UAAU;MACpBM,MAAM,EAAE,MAAM;MACdD,KAAK,EAAE,MAAM;MACbH,MAAM,EAAE;;GAEf;AAAA,CAAC,CAAC;;AChNI,IAAMkb,SAAS,gBAA6BtoB,KAAK,CAACoL,IAAI,CAAC,UAAApU,IAAA;;MAAGvT,IAAI,GAAAuT,IAAA,CAAJvT,IAAI;IAAEk0B,QAAQ,GAAA3gB,IAAA,CAAR2gB,QAAQ;IAAEC,OAAO,GAAA5gB,IAAA,CAAP4gB,OAAO;IAAEjC,QAAQ,GAAA3e,IAAA,CAAR2e,QAAQ;EAC9F,IAAMnyB,WAAW,GAAGD,UAAU,CAACC,WAAW,CAACC,IAAI,CAAC;EAChD,IAAM0hC,UAAU,GAAGzN,iBAAiB,CAACj0B,IAAI,EAAEk0B,QAAQ,EAAEC,OAAO,CAAC;EAE7D,IAAMpN,OAAO,GAAG+d,kBAAkB,CAACpD,UAAU,CAAC;EAC9C,IAAME,kBAAkB,GAAG9N,qBAAqB,CAAC9zB,IAAI,CAAC;EACtD,IAAM+kC,cAAc,GAAG9d,CAAC,EAAAoR,EAAA,OAAAA,EAAA,CACnBtR,OAAO,CAAClC,aAAa,IAAG,IAAI,EAAAwT,EAAA,EAC/B;EACF,OACI9b;IAAK+O,SAAS,EAAEyZ;KAAoBnD,kBAAkB,GACjD7hC,WAAW,GACRwc,oBAAC0mB,sBAAsB;IACnB3X,SAAS,EAAEvE,OAAO,CAACie,oBAAoB;IACvCtD,UAAU,EAAEA,UAAU;IACtBxP,QAAQ,EAAEA;IACZ,GAEF3V,oBAACmoB,oBAAoB;IACjBpZ,SAAS,EAAEvE,OAAO,CAACie,oBAAoB;IACvCtD,UAAU,EAAEA,UAAU;IACtBxP,QAAQ,EAAEA;IAEjB,EACD3V;IAAK+O,SAAS,EAAEvE,OAAO,CAACke;KACpB1oB,oBAAC8kB,aAAa;IAAC/V,SAAS,EAAEvE,OAAO,CAACme,iBAAiB;IAAEllC,IAAI,EAAEA;IAAQ,CACjE,CACJ;AAEd,CAAC,CAAC;AACF6kC,SAAS,CAAC9c,WAAW,GAAG,WAAW;AAEnC,IAAM+c,kBAAkB,gBAAG9e,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IACvD1B,aAAa,EAAE;MACXoI,aAAa,EAAE,QAAQ;MACvB7C,OAAO,EAAE,MAAM;MACfL,MAAM,EAAE;KACX;IACDib,oBAAoB,EAAE;MAClBtK,QAAQ,EAAE;KACb;IACDuK,0BAA0B,EAAE;MACxBthB,QAAQ,EAAE4C,KAAK,CAAC1B,aAAa,CAAClB,QAAQ;MACtCwhB,SAAS,EAAE,YAAY;MACvBhY,SAAS,EAAE,QAAQ;MACnB2L,UAAU,EAAE;KACf;IACDoM,iBAAiB,EAAE;MACfvZ,eAAe,EAAE,SAAAA,gBAAChoB,KAAqB;QAAA,OAAMA,KAAK,CAACuwB,QAAQ,GAAG,sBAAsB,GAAG,aAAa;OAAC;MACrG6F,cAAc,EAAE,SAAAA,eAACp2B,KAAqB;QAAA,OAAMA,KAAK,CAACwwB,OAAO,GAAG,WAAW,GAAG,MAAM;OAAC;MACjF1P,YAAY,EAAE,CAAC;MACfD,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;;GAErB;AAAA,CAAC,CAAC;;AC1CI,IAAM4gB,SAAS,gBAA6B7oB,KAAK,CAACoL,IAAI,CACzD,UAAApU,IAAA;MAAGvT,IAAI,GAAAuT,IAAA,CAAJvT,IAAI;IAAEk0B,QAAQ,GAAA3gB,IAAA,CAAR2gB,QAAQ;IAAEC,OAAO,GAAA5gB,IAAA,CAAP4gB,OAAO;IAAEjC,QAAQ,GAAA3e,IAAA,CAAR2e,QAAQ;EAChC,IAAMwP,UAAU,GAAmBzN,iBAAiB,CAACj0B,IAAI,EAAEk0B,QAAQ,EAAEC,OAAO,CAAC;EAC7E,IAAMQ,WAAW,GAAGD,UAAU,CAACxC,QAAQ,CAAC;EAExC,IAAAyP,qBAAA,GAA8CtjB,4BAA4B,CACtEre,IAAI,CACP;IAFOye,iBAAiB,GAAAkjB,qBAAA,CAAjBljB,iBAAiB;IAAEE,cAAc,GAAAgjB,qBAAA,CAAdhjB,cAAc;EAGzC,IAAM0mB,UAAU,GAAG1nB,OAAO,CACtB;IAAA,OAAO;MACH+jB,UAAU,EAAVA,UAAU;MACVxP,QAAQ,EAARA;KACH;GAAC,EACF,CAACA,QAAQ,EAAEwP,UAAU,CAAC,CACzB;EACD,IAAM3a,OAAO,GAAGD,WAAS,CAACue,UAAU,CAAC;EACrC,IAAM/B,aAAa,GAAGC,oBAAoB,CAAC7B,UAAU,CAAC;EACtD,IAAMvM,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,IAAMiiB,kBAAkB,GAAG9N,qBAAqB,CAAC9zB,IAAI,CAAC;EACtD,OACIuc;IAAK+O,SAAS,EAAEvE,OAAO,CAAC1B;KAAmBuc,kBAAkB,GACzDrlB;IAAK+O,SAAS,EAAEgY,aAAa,CAACsB;IAAsB,EACpDroB;IACI+O,SAAS,EAAErE,CAAC,CAAC,CACTqc,aAAa,CAACO,kBAAkB,EAChC9c,OAAO,CAACue,sBAAsB,CACjC;IACE,EACP/oB;IAAK+O,SAAS,EAAEvE,OAAO,CAAC8a;KACpBtlB,oBAAC4Y,UAAU;IACPlgB,IAAI,EAAE0f,WAAW,WAAXA,WAAW,GAAI+M,UAAU,CAACzsB,IAAI;IACpC0pB,IAAI,EAAEhK,WAAW,GAAG,KAAK,GAAG+M,UAAU,CAACjN,QAAQ;IAC/C2D,UAAU,EAAE;IACd,CACA,EACN7b;IACI+O,SAAS,EAAEvE,OAAO,CAACgb,iBAAiB;IACpCzlB,KAAK,EAAEtc,IAAI,GAAGA,IAAI,CAAC2C,IAAI,GAAGzB;KAE1Bqb,oBAAC8kB,aAAa;IAACrhC,IAAI,EAAEA;IAAQ,CAC3B,EACNuc;IAAK+O,SAAS,EAAEvE,OAAO,CAACkb;KACnBjiC,IAAI,GACDye,iBAAiB,WAAjBA,iBAAiB,GAAIlC,2CAAc,GAEnCA,oBAACqW,eAAe;IAACC,SAAS,EAAE,CAAC;IAAEC,SAAS,EAAE;IAC7C,CACC,EACNvW;IAAK+O,SAAS,EAAEvE,OAAO,CAACkb;KACnBjiC,IAAI,GACD2e,cAAc,WAAdA,cAAc,GAAIpC,2CAAc,GAEhCA,oBAACqW,eAAe;IAACC,SAAS,EAAE,EAAE;IAAEC,SAAS,EAAE;IAC9C,CACC,CACJ;AAEd,CAAC,CACJ;AAED,IAAMhM,WAAS,gBAAGd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAC9ClB,aAAa,EAAE;MACXmG,SAAS,aAAWjF,KAAK,CAACkF,OAAO,CAACC,OAAO,cAAW;MACpD/H,QAAQ,EAAE4C,KAAK,CAAClB,aAAa,CAAC1B,QAAQ;MACtCkI,KAAK,EAAE,SAAAA,MAAA3X,KAAA;QAAA,IAAGge,QAAQ,GAAAhe,KAAA,CAARge,QAAQ;QAAA,OACdA,QAAQ,CAACN,SAAS,GACZM,QAAQ,CAACJ,UAAU,GACfvL,KAAK,CAAC1C,GAAG,CAACC,YAAY,GACtByC,KAAK,CAAC1C,GAAG,CAACE,eAAe,GAC7B,SAAS;;MACnBme,UAAU,EAAE,QAAQ;MACpBzY,QAAQ,EAAE,UAAU;MACpBW,OAAO,EAAE,MAAM;MACfL,MAAM,EAAE;KACX;IACDub,sBAAsB,EAAE;MACpBjS,OAAO,EAAE;KACZ;IACDwO,iBAAiB,EAAE;MACfhW,KAAK,EAAE,SAAAA,MAAAzX,KAAA;QAAA,IAAGstB,UAAU,GAAAttB,KAAA,CAAVstB,UAAU;UAAExP,QAAQ,GAAA9d,KAAA,CAAR8d,QAAQ;QAAA,OAC1BA,QAAQ,CAACN,SAAS,GACZM,QAAQ,CAACJ,UAAU,GACfvL,KAAK,CAAC1C,GAAG,CAACC,YAAY,GACtByC,KAAK,CAAC1C,GAAG,CAACE,eAAe,GAC7B2d,UAAU,CAAC7V,KAAK;;MAC1BlI,QAAQ,EAAE4C,KAAK,CAAClB,aAAa,CAACE,YAAY;MAC1C2H,SAAS,EAAE,YAAY;MACvB1I,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACfmF,MAAM,EAAE;KACX;IACDoY,iBAAiB,EAAE;MACfwD,YAAY,EAAE,UAAU;MACxBrY,SAAS,EAAE,YAAY;MACvBwG,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,QAAQ;MAClB6R,IAAI,EAAE,WAAW;MACjBxG,WAAW,EAAE,CAAC;MACdrV,MAAM,EAAE;KACX;IACDsY,qBAAqB,EAAE;MACnBte,QAAQ,EAAE4C,KAAK,CAAClB,aAAa,CAACC,gBAAgB;MAC9C4H,SAAS,EAAE,YAAY;MACvBwG,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE,QAAQ;MAClB6R,IAAI,EAAE,WAAW;MACjBhhB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACfmF,MAAM,EAAE;;GAEf;AAAA,CAAC,CAAC;;ACzGH,IAAM8b,gBAAgB,GAAkB;EACpCrV,aAAa,EAAE,KAAK;EACpBwB,SAAS,EAAE,KAAK;EAChBE,UAAU,EAAE;CACf;AAED,AAAO,IAAM4T,cAAc,gBAAkCnpB,KAAK,CAACoL,IAAI,CAAC,UAAApU,IAAA;MAAGjO,MAAM,GAAAiO,IAAA,CAANjO,MAAM;IAAE8wB,YAAY,GAAA7iB,IAAA,CAAZ6iB,YAAY;IAAEuP,YAAY,GAAApyB,IAAA,CAAZoyB,YAAY;EACzG,IAAM5e,OAAO,GAAGD,WAAS,EAAE;;EAG3B,IAAM9mB,IAAI,GAAG4b,gBAAgB,CAACvW,cAAc,EAAEC,MAAM,CAAC;EACrD,IAAM4uB,QAAQ,GAAGtY,gBAAgB,CAACxV,oBAAoB,EAAEd,MAAM,CAAC;EAC/D,IAAMgnB,WAAW,GAAGtQ,WAAW,CAACjU,mBAAmB,CAAC;;EAGpD,IAAM69B,iBAAiB,GAAGzP,oBAAoB,CAACn2B,IAAI,EAAEo2B,YAAY,CAAC;EAClE,IAAA54B,SAAA,GAA8BC,QAAQ,CAAC,KAAK,CAAC;IAAtC02B,OAAO,GAAA32B,SAAA;IAAEqjC,UAAU,GAAArjC,SAAA;EAC1B,IAAMqoC,qBAAqB,GAAA9wB,QAAA;IACvB4rB,UAAU,EAAE,KAAK;IACjBC,gBAAgB,EAAE;MAAEtV,SAAS,EAAEvE,OAAO,CAAC+e;;KACnChmC,UAAU,CAACO,WAAW,CAACL,IAAI,CAAC,GAAG4lC,iBAAiB,GAAG1kC,SAAS;IAChE2/B,UAAU,EAAVA;IACH;;EAGD,IAAMkF,cAAc,GAAqC;IACrD/lC,IAAI,EAAJA,IAAI;IACJk0B,QAAQ,EAARA,QAAQ;IACRC,OAAO,EAAPA;GACH;EAED,IAAI6R,cAAwC;EAC5C,IAAIL,YAAY,KAAKh0B,YAAY,CAAC0E,IAAI,EAAE2vB,cAAc,GAAGZ,SAAS,CAAC,KAC9D,IAAIO,YAAY,KAAKh0B,YAAY,CAAC8E,OAAO,EAAEuvB,cAAc,GAAGvE,YAAY,CAAC,KACzEuE,cAAc,GAAGnB,SAAS;EAE/B,OAAOvY,WAAW,GACd/P,oBAACkkB,gBAAgB,oBAAKoF,qBAAqB,GACvCtpB,oBAACypB,cAAc,oBAAKD,cAAc;IAAE7T,QAAQ,EAAEuT;KAAoB,CACnD,GAEnBlpB,oBAAC4lB,YAAY;IAACniC,IAAI,EAAEA;KACf,UAAAkyB,QAAQ;IAAA,OACL3V,oBAACkkB,gBAAgB,oBAAKoF,qBAAqB,GACvCtpB,oBAACypB,cAAc,oBAAKD,cAAc;MAAE7T,QAAQ,EAAEA;OAAY,CAC3C;GACtB,CAER;AACL,CAAC,CAAC;AACFwT,cAAc,CAAC3d,WAAW,GAAG,gBAAgB;AAE7C,IAAMjB,WAAS,gBAAGX,sBAAsB,CAAC;EAAA,OAAO;IAC5C2f,yBAAyB,EAAE;;;MAGvBG,OAAO,EAAE,iBAAiB;MAC1Bxc,QAAQ,EAAE,UAAU;MACpBM,MAAM,EAAE;;GAEf;AAAA,CAAC,CAAC;;ACpDI,IAAMmc,cAAc,GAAG,SAAjBA,cAAcA;;EAEvB,OAAO,OAAOC,MAAM,CAACC,WAAW,KAAK,WAAW,IAAIC,SAAS,CAACC,SAAS,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACtG,CAAC;AAED,AAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CACtB1c,KAAa,EACb4S,SAAiB,EACjB+J,UAA8B,EAC9B7Y,kBAA2B;EAE3B,IAAM8Y,MAAM,GAAG9Y,kBAAkB,GAAG,CAAC,GAAG,CAAC;EACzC,IAAM+Y,SAAS,GAAGT,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE;EAE3C,IAAIU,WAAmB;EACvB,IAAIC,WAAmB;EACvB,IAAIjZ,kBAAkB,EAAE;IACpBgZ,WAAW,GAAG,CAAC;IACfC,WAAW,GAAG,CAAC/c,KAAK,GAAG4c,MAAM,GAAGC,SAAS,IAAIC,WAAW;GAC3D,MAAM;IACHC,WAAW,GAAGJ,UAAU,CAAC/vB,UAAU;IACnCkwB,WAAW,GAAGpnB,IAAI,CAACiT,GAAG,CAAC,CAAC,EAAEjT,IAAI,CAACkT,KAAK,CAAC,CAAC5I,KAAK,GAAG6c,SAAS,KAAKE,WAAW,GAAGH,MAAM,CAAC,CAAC,CAAC;;EAGvF,IAAMI,QAAQ,GAAGtnB,IAAI,CAACunB,IAAI,CAACrK,SAAS,GAAGkK,WAAW,CAAC;EAEnD,OAAO;IACHE,QAAQ,EAARA,QAAQ;IACRF,WAAW,EAAXA,WAAW;IACXF,MAAM,EAANA,MAAM;IACNM,SAAS,EAAEP,UAAU,CAACnwB,WAAW;IACjCuwB,WAAW,EAAXA;GACH;AACL,CAAC;AAED,AAAO,IAAMI,aAAa,gBAAgC1qB,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;EACtE,IAAQiC,KAAK,GAAajC,KAAK,CAAvBiC,KAAK;IAAEC,MAAM,GAAKlC,KAAK,CAAhBkC,MAAM;EAErB,IAAM0c,UAAU,GAAGzqB,WAAW,CAAC/U,oBAAoB,CAAuB;EAC1E,IAAM2E,cAAc,GAAGoQ,WAAW,CAAClQ,SAAS,CAACL,iBAAiB,CAAC;EAC/D,IAAMixB,SAAS,GAAG/e,OAAO,CAAC;IAAA,OAAM/R,cAAc,CAACpJ,MAAM;KAAE,CAACoJ,cAAc,CAAC,CAAC;EAExE,IAAMs7B,OAAO,GAAG9oC,MAAM,EAAoB;EAC1C,IAAMwvB,kBAAkB,GAAGjI,qBAAqB,EAAE;;;;;EAMlD,IAAAnoB,SAAA,GAAoCC,QAAQ,CAAC+oC,aAAa,CAAC1c,KAAK,EAAE4S,SAAS,EAAE+J,UAAU,EAAE7Y,kBAAkB,CAAC,CAAC;IAAtGuZ,UAAU,GAAA3pC,SAAA;IAAE4pC,aAAa,GAAA5pC,SAAA;EAChC,IAAM6pC,aAAa,GAAGjpC,MAAM,CAAC+oC,UAAU,CAAC;EACxCvpC,SAAS,CAAC;IACN,IAAM0pC,OAAO,GAAGD,aAAa,CAAChpC,OAAO;IACrC,IAAMkpC,OAAO,GAAGf,aAAa,CAAC1c,KAAK,EAAE4S,SAAS,EAAE+J,UAAU,EAAE7Y,kBAAkB,CAAC;IAE/EyZ,aAAa,CAAChpC,OAAO,GAAGkpC,OAAO;IAC/B,IAAIL,OAAO,CAAC7oC,OAAO,EAAE;MACjB,IAAIipC,OAAO,CAACR,QAAQ,KAAKS,OAAO,CAACT,QAAQ,EAAE;QACvCI,OAAO,CAAC7oC,OAAO,CAACmpC,kBAAkB,CAAChoB,IAAI,CAACgT,GAAG,CAAC8U,OAAO,CAACR,QAAQ,EAAES,OAAO,CAACT,QAAQ,CAAC,GAAG,CAAC,CAAC;;MAExF,IAAIQ,OAAO,CAACV,WAAW,KAAKW,OAAO,CAACX,WAAW,EAAE;QAC7CM,OAAO,CAAC7oC,OAAO,CAACopC,qBAAqB,CAACjoB,IAAI,CAACgT,GAAG,CAAC8U,OAAO,CAACV,WAAW,EAAEW,OAAO,CAACT,QAAQ,CAAC,GAAG,CAAC,CAAC;;MAE9F,IAAIQ,OAAO,CAACT,WAAW,KAAKU,OAAO,CAACV,WAAW,EAAE;QAC7CK,OAAO,CAAC7oC,OAAO,CAACqpC,iBAAiB,CAAC;UAAEC,WAAW,EAAE,CAAC;UAAEC,QAAQ,EAAE;SAAG,CAAC;;;IAI1ER,aAAa,CAACG,OAAO,CAAC;GACzB,EAAE,CAACH,aAAa,EAAEC,aAAa,EAAEzZ,kBAAkB,EAAE9D,KAAK,EAAE2c,UAAU,EAAE/J,SAAS,CAAC,CAAC;EAEpF,IAAMmL,MAAM,GAAGlqB,OAAO,CAAC;IACnB,IAAMmqB,EAAE,GAAGT,aAAa;IACxB,OAAO;MACHU,cAAc,EAAE,SAAAA,eAACl8B,KAAa;QAAA,OAC1Bi8B,EAAE,CAACzpC,OAAO,CAACwoC,WAAY,IAAIh7B,KAAK,KAAKi8B,EAAE,CAACzpC,OAAO,CAACuoC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAGkB,EAAE,CAACzpC,OAAO,CAACqoC,MAAM,CAAC;;MAC5FsB,YAAY,EAAE,SAAAA,aAACn8B,KAAa;QAAA,OACxBi8B,EAAE,CAACzpC,OAAO,CAAC2oC,SAAS,IAAIn7B,KAAK,KAAKi8B,EAAE,CAACzpC,OAAO,CAACyoC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGgB,EAAE,CAACzpC,OAAO,CAACqoC,MAAM,CAAC;;KACzF;GACJ,EAAE,CAACW,aAAa,CAAC,CAAC;EAEnB,IAAMY,iBAAiB,GAAG3pC,mBAAmB,CAAC0d,WAAW,CAAClQ,SAAS,CAACL,iBAAiB,CAAC,CAAC;EACvF,IAAMy8B,UAAU,GAAGnsB,WAAW,CAC1B,UAACtL,IAA0D;;IACvD,IAAM5E,KAAK,GAAG4E,IAAI,CAACm3B,QAAQ,GAAGP,aAAa,CAAChpC,OAAO,CAACuoC,WAAW,GAAGn2B,IAAI,CAACk3B,WAAW;IAElF,QAAAQ,qBAAA,GAAOF,iBAAiB,CAAC5pC,OAAO,CAACwN,KAAK,CAAC,YAAAs8B,qBAAA,qBAAoBt8B,KAAK;GACnE,EACD,CAACw7B,aAAa,EAAEY,iBAAiB,CAAC,CACrC;EAED,IAAMG,YAAY,GAAGrsB,WAAW,CAC5B,UAACtL,IAAqE;IAClE,IAAMq3B,EAAE,GAAGT,aAAa;IACxB,IAAMx7B,KAAK,GAAG4E,IAAI,CAACm3B,QAAQ,GAAGE,EAAE,CAACzpC,OAAO,CAACuoC,WAAW,GAAGn2B,IAAI,CAACk3B,WAAW;IACvE,IAAMriC,MAAM,GAAGsG,cAAc,CAACC,KAAK,CAAC;IACpC,IAAID,cAAc,CAACC,KAAK,CAAC,KAAK3K,SAAS,EAAE,OAAO,IAAI;IAEpD,IAAMmnC,eAAe,GAAAtzB,QAAA,KACdtE,IAAI,CAAC4a,KAAK;MACbmW,YAAY,EAAE/wB,IAAI,CAACk3B,WAAW,KAAKG,EAAE,CAACzpC,OAAO,CAACuoC,WAAW,GAAG,CAAC,GAAG,CAAC,GAAGkB,EAAE,CAACzpC,OAAO,CAACqoC,MAAM;MACrF7N,aAAa,EAAEpoB,IAAI,CAACm3B,QAAQ,KAAKE,EAAE,CAACzpC,OAAO,CAACyoC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAGgB,EAAE,CAACzpC,OAAO,CAACqoC,MAAM;MAChFxZ,SAAS,EAAE;MACd;IAED,OACI3Q;MAAK8O,KAAK,EAAEgd;OACR9rB,oBAACmpB,cAAc;MAACpgC,MAAM,EAAEA,MAAM,WAANA,MAAM,GAAI,IAAI;MAAE8wB,YAAY,EAAEvqB,KAAK;MAAE85B,YAAY,EAAEc,UAAU,CAAC7kC;MAAQ,CAC5F;GAEb,EACD,CAACgK,cAAc,EAAE66B,UAAU,CAAC7kC,IAAI,CAAC,CACpC;EAED,IAAMmlB,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMwhB,aAAa,GAAG3qB,OAAO,CAAC;IAC1B,OACIpB,oBAACgsB,gBAAgB;MACbhqC,GAAG,EAAE2oC,OAAc;MACnB5b,SAAS,EAAEvE,OAAO,CAACyhB,aAAa;MAChCC,kBAAkB,EAAEtB,UAAU,CAACH,SAAS,GAAGG,UAAU,CAACT,MAAM;MAC5DM,SAAS,EAAEa,MAAM,CAACG,YAAY;MAC9BU,oBAAoB,EAAEvB,UAAU,CAACN,WAAW,GAAGM,UAAU,CAACT,MAAM;MAChEG,WAAW,EAAEgB,MAAM,CAACE,cAAc;MAClCnB,WAAW,EAAEO,UAAU,CAACP,WAAW;MACnC7c,MAAM,EAAEA,MAAM;MACd+c,QAAQ,EAAEK,UAAU,CAACL,QAAQ;MAC7Bhd,KAAK,EAAEA,KAAK;MACZ6e,OAAO,EAAET;OAERE,YAAY,CACE;GAE1B,EAAE,CACCrhB,OAAO,CAACyhB,aAAa,EACrBrB,UAAU,CAACH,SAAS,EACpBG,UAAU,CAACT,MAAM,EACjBS,UAAU,CAACN,WAAW,EACtBM,UAAU,CAACP,WAAW,EACtBO,UAAU,CAACL,QAAQ,EACnBe,MAAM,CAACG,YAAY,EACnBH,MAAM,CAACE,cAAc,EACrBhe,MAAM,EACND,KAAK,EACLoe,UAAU,EACVE,YAAY,CACf,CAAC;EAEF,OAAOE,aAAa;AACxB,CAAC,CAAC;AAEF,IAAMxhB,WAAS,gBAAGX,sBAAsB,CAAC;EAAA,OAAO;IAC5CqiB,aAAa,EAAE;GAClB;AAAA,CAAC,CAAC;;ACxLH;;;;;AAMA,AAeO,IAAMI,aAAa,gBAAgCrsB,KAAK,CAACoL,IAAI,CAAC,UAAAE,KAAK;EACtE,IAAQiC,KAAK,GAAajC,KAAK,CAAvBiC,KAAK;IAAEC,MAAM,GAAKlC,KAAK,CAAhBkC,MAAM;EAErB,IAAM0c,UAAU,GAAGzqB,WAAW,CAAC/U,oBAAoB,CAAC;EAEpD,IAAM4hC,OAAO,GAAGzqC,MAAM,EAAiB;EAEvC,IAAMwN,cAAc,GAAGoQ,WAAW,CAAClQ,SAAS,CAACL,iBAAiB,CAAC;EAC/D,IAAMw8B,iBAAiB,GAAG3pC,mBAAmB,CAACsN,cAAc,CAAC;EAC7D,IAAMs8B,UAAU,GAAGnsB,WAAW,CAC1B,UAAClQ,KAAa;IAAA,IAAAs8B,qBAAA;IAAA,QAAAA,qBAAA,GAAKF,iBAAiB,CAAC5pC,OAAO,CAACwN,KAAK,CAAC,YAAAs8B,qBAAA,qBAAoBt8B,KAAK;GAAE,EAC9E,CAACo8B,iBAAiB,CAAC,CACtB;EAED,IAAMlhB,OAAO,GAAGD,WAAS,EAAE;EAC3B,IAAMgiB,aAAa,GAAGnrB,OAAO,CAAC;;IAE1B,IAAMorB,WAAW,GAAG,SAAdA,WAAWA,CAAIt4B,IAA6C;;MAC9D,OACI8L;QAAK8O,KAAK,EAAE5a,IAAI,CAAC4a;SACb9O,oBAACmpB,cAAc;QACXpgC,MAAM,GAAA0jC,qBAAA,GAAEp9B,cAAc,CAAC6E,IAAI,CAAC5E,KAAK,CAAC,YAAAm9B,qBAAA,GAAI,IAAI;QAC1C5S,YAAY,EAAE3lB,IAAI,CAAC5E,KAAK;QACxB85B,YAAY,EAAEh0B,YAAY,CAAC0E;QAC7B,CACA;KAEb;IAED,OACIkG,oBAAC0sB,aAAa;MACV1qC,GAAG,EAAEsqC,OAAc;MACnBvd,SAAS,EAAEvE,OAAO,CAACmiB,aAAa;MAChCC,QAAQ,EAAE1C,UAAU,CAACnwB,WAAW;MAChCyT,MAAM,EAAEA,MAAM;MACdqf,SAAS,EAAEx9B,cAAc,CAACpJ,MAAM;MAChCsnB,KAAK,EAAEA,KAAK;MACZ6e,OAAO,EAAET;OAERa,WAAW,CACA;GAEvB,EAAE,CACChiB,OAAO,CAACmiB,aAAa,EACrBzC,UAAU,CAACnwB,WAAW,EACtByT,MAAM,EACNne,cAAc,EACdke,KAAK,EACLoe,UAAU,CACb,CAAC;EAEF,OAAOY,aAAa;AACxB,CAAC,CAAC;AAEF,IAAMhiB,WAAS,gBAAGd,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IAC9C2iB,aAAa,EAAE;MACXG,SAAS,iBAAe9iB,KAAK,CAACkF,OAAO,CAACC;;GAE7C;AAAA,CAAC,CAAC;;ICrDUiU,QAAQ,gBAA4BpjB,KAAK,CAACoL,IAAI,CAAC,UAACE,KAAoB;EAC7E,IAAMjc,cAAc,GAAGoQ,WAAW,CAAClQ,SAAS,CAACL,iBAAiB,CAAC;EAC/D,IAAMg7B,UAAU,GAAGzqB,WAAW,CAAC/U,oBAAoB,CAAC;EAEpD,IAAMrC,aAAa,GAAGoX,WAAW,CAACrX,mBAAmB,CAAC;EACtD,IAAAstB,YAAA,GAA+CxB,WAAW,CAAC;MAAEzwB,IAAI,EAAE4E;KAAe,CAAC;IAA3E8sB,IAAI,GAAAO,YAAA,CAAJP,IAAI;IAAEI,UAAU,GAAAG,YAAA,CAAVH,UAAU;IAAED,gBAAgB,GAAAI,YAAA,CAAhBJ,gBAAgB;EAC1C,IAAMwT,UAAU,GAAG1nB,OAAO,CAAa;IAAA,OAAO;MAAEmU,UAAU,EAAVA,UAAU;MAAED,gBAAgB,EAAhBA;KAAkB;GAAC,EAAE,CAACC,UAAU,EAAED,gBAAgB,CAAC,CAAC;EAEhH,IAAMyX,YAAY,GAAGC,cAAc,CAAClE,UAAU,CAAC;EAC/C,IAAMte,OAAO,GAAGD,WAAS,CAAC2f,UAAU,CAAC;EACrC,IAAQ+C,QAAQ,GAAK3hB,KAAK,CAAlB2hB,QAAQ;;;;EAKhB,IAAMC,mBAAmB,GAAG,IAAI;EAEhC,IAAMC,YAAY,GAAG3tB,WAAW,CAC5B,UAAAxI,IAAA;QAAGuW,KAAK,GAAAvW,IAAA,CAALuW,KAAK;MAAEC,MAAM,GAAAxW,IAAA,CAANwW,MAAM;IACZ,IAAIne,cAAc,CAACpJ,MAAM,KAAK,CAAC,EAAE;MAC7B,OAAO+Z,oBAACkjB,aAAa;QAAC3V,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAE0c,UAAU,CAACnwB;QAAe;KACzE,MAAM,IAAImwB,UAAU,CAAC7kC,IAAI,KAAK+P,YAAY,CAAC0E,IAAI,EAAE;MAC9C,OAAOkG,oBAACqsB,aAAa;QAAC9e,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA;QAAU;KACzD,MAAM;MACH,OAAOxN,oBAAC0qB,aAAa;QAACnd,KAAK,EAAEA,KAAK;QAAEC,MAAM,EAAEA;QAAU;;GAE7D,EACD,CAACne,cAAc,EAAE66B,UAAU,CAAC,CAC/B;EAED,IAAMtR,UAAU,GAAG5W,UAAU,CAACoB,iBAAiB,CAAC;EAChD,OACIpD;IAAKitB,QAAQ,EAAEA,QAAQ;IAAEjrC,GAAG,EAAEmzB,IAAI;IAAEpG,SAAS,EAAErE,CAAC,CAAC,CAACF,OAAO,CAAC4iB,eAAe,EAAEL,YAAY,CAACK,eAAe,CAAC,CAAC;IAAE3V,IAAI,EAAC;KAC5GzX;IAAK+O,SAAS,EAAEge,YAAY,CAACM;KACzBrtB;IAAK+O,SAAS,EAAEge,YAAY,CAACO;KACzBttB,oBAAC4Y,UAAU;IAAClgB,IAAI,EAAE6c,UAAU,GAAGlgB,cAAc,CAACkgB,UAAU,GAAGlgB,cAAc,CAACijB;IAAiB,CACzF,CACJ,EACNtY,oBAACutB,SAAS;IAACC,aAAa,EAAE,CAACN;KAAsBC,YAAY,CAAa,CACxE;AAEd,CAAC,CAAC;AACF/J,QAAQ,CAAC5X,WAAW,GAAG,UAAU;AAEjC,IAAMwhB,cAAc,gBAAGvjB,qBAAqB,CAAC,UAAAO,KAAK;EAAA,OAAK;IACnDojB,eAAe,EAAE;MACb3O,SAAS,EAAE7sB,aAAa,CAACyI,cAAc,CAAC1P,cAAc,CAACoP,WAAW,GAAG,CAAC;MACtEsV,UAAU,EAAE,SAAAA,WAACjoB,KAAiB;QAAA,OAC1BA,KAAK,CAACkuB,gBAAgB,IAAIluB,KAAK,CAACmuB,UAAU,GACpCnuB,KAAK,CAACmuB,UAAU,GACZjM,iBAAiB,CAACU,KAAK,CAAC1C,GAAG,CAACK,sBAAsB,EAAEqC,KAAK,CAAC1C,GAAG,CAACM,sBAAsB,CAAC,GACrF0B,iBAAiB,CAACU,KAAK,CAAC1C,GAAG,CAACO,yBAAyB,EAAEmC,KAAK,CAAC1C,GAAG,CAACQ,yBAAyB,CAAC,GAC/F,MAAM;;KACnB;IACDulB,WAAW,EAAE;MACTxf,OAAO,EAAE,SAAAA,QAACzmB,KAAiB;QAAA;;UAEvBA,KAAK,CAACkuB,gBAAgB,IAAIluB,KAAK,CAACmuB,UAAU,GAAG,OAAO,GAAG;;;MAC3DrN,YAAY,EAAE8B,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MAC9CiF,aAAa,EAAE,MAAM;MACrBD,QAAQ,EAAE,UAAU;MACpBM,MAAM,EAAE,MAAM;MACdD,KAAK,EAAE,MAAM;MACbH,MAAM,EAAE;KACX;IACDkgB,eAAe,EAAE;MACble,eAAe,EAAE,SAAAA,gBAAChoB,KAAiB;QAAA,OAAMA,KAAK,CAACmuB,UAAU,GAAGvL,KAAK,CAAC1C,GAAG,CAACG,WAAW,GAAGuC,KAAK,CAAC1C,GAAG,CAACI,cAAc;OAAC;MAC7G4H,KAAK,EAAE,SAAAA,MAACloB,KAAiB;QAAA,OAAMA,KAAK,CAACmuB,UAAU,GAAGvL,KAAK,CAAC1C,GAAG,CAACC,YAAY,GAAGyC,KAAK,CAAC1C,GAAG,CAACE,eAAe;OAAC;MACrGU,YAAY,EAAE8B,KAAK,CAAC1B,aAAa,CAACJ,YAAY;MAC9C8F,SAAS,EAAE,mCAAmC;MAC9Cd,QAAQ,EAAE,UAAU;MACpB0D,SAAS,EAAE,QAAQ;MACnBzJ,UAAU,EAAE,MAAM;MAClBC,QAAQ,EAAE,KAAK;MACfiG,IAAI,EAAE,KAAK;MACXG,MAAM,EAAE,EAAE;MACVF,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE;;GAEd;AAAA,CAAC,CAAC;AAEH,IAAMhD,WAAS,gBAAGX,sBAAsB,CAAC;EAAA,OAAO;IAC5CwjB,eAAe,EAAE;MACb5f,MAAM,EAAE,MAAM;MACdigB,SAAS,EAAE;;GAElB;AAAA,CAAC,CAAC;;AChHH;;;;;AAMA,IAgBaC,eAAe,gBAAmC1tB,KAAK,CAACoL,IAAI,CAAC;EACtE,IAAMxa,QAAQ,GAAGgP,WAAW,EAAE;EAC9Bve,SAAS,CAAC;IACNuP,QAAQ,CAACS,YAAY,CAACoM,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAClD,OAAO;MACH7M,QAAQ,CAACS,YAAY,CAACoM,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACtD;GACJ,EAAE,CAAC7M,QAAQ,CAAC,CAAC;EAEd,IAAMsQ,IAAI,GAAGC,OAAO,EAAE;EACtB,IAAMwsB,yBAAyB,GAAGzsB,IAAI,CAACG,aAAa,CAChD;IACIlb,EAAE,EAAEya,SAAS,CAACD,aAAa,CAAC+sB,eAAe,EAAE,qBAAqB,CAAC;IACnEnsB,cAAc,EAAE;GACnB,EACD;IAAEqsB,QAAQ,EAAE5tB;GAAoC,CACnD;EAED,IAAMjU,iBAAiB,GAAG0T,WAAW,CAAC3T,uBAAuB,CAAC;EAC9D,IAAM7D,gBAAgB,GAAGwX,WAAW,CAACzX,sBAAsB,CAAC;EAE5D,IAAM0V,eAAe,GAAGqP,uBAAuB,EAAE;EACjD,IAAM8gB,yBAAyB,GAAGzsB,OAAO,CAAC;IACtC,IAAMuc,UAAU,GAAmB,EAAE;IAAC,IAAAlL,KAAA,YAAAA,QACY;MAC9C,IAAMvsB,IAAI,GAAG+B,gBAAgB,CAACjC,CAAC,CAAC;MAEhC,IAAI,OAAOE,IAAI,KAAK,QAAQ,EAAE;QAC1By3B,UAAU,CAACj4B,IAAI,CACXsa,oBAAC0e,0BAA0B;UACvBhe,GAAG,yBAAuBxa,IAAM;UAChC2B,YAAY,EAAE3B,IAAI;UAClBy4B,eAAe,EAAEjhB;UACnB,CACL;OACJ,MAAM;QACHxX,IAAI,CAACyB,aAAa,CAACoC,GAAG,CAAC,UAAA5D,EAAE;UAAA,OACrBw3B,UAAU,CAACj4B,IAAI,CACXsa,oBAAC0e,0BAA0B;YACvBhe,GAAG,yBAAuBxa,IAAI,CAACE,IAAI,SAAID,EAAI;YAC3C0B,YAAY,EAAE1B,EAAE;YAChBw4B,eAAe,EAAEjhB;YACnB,CACL;UACJ;;KAER;IAtBD,KAAK,IAAI1X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiC,gBAAgB,CAAChC,MAAM,EAAE,EAAED,CAAC;MAAAysB,KAAA;;IAuBhD,OAAOkL,UAAU;GACpB,EAAE,CAAC11B,gBAAgB,EAAEyV,eAAe,CAAC,CAAC;EAEvC,IAAMowB,cAAc,GAAG1sB,OAAO,CAC1B;IAAA,OAAOrV,iBAAiB,GAAG;MAAEuhB,GAAG,EAAEvhB,iBAAiB,CAACsN,MAAM;MAAEgU,IAAI,EAAEthB,iBAAiB,CAACoN;KAAQ,GAAGxU,SAAS;GAAC,EACzG,CAACoH,iBAAiB,CAAC,CACtB;EAED,IAAMye,OAAO,GAAGD,WAAS,EAAE;EAC3B,OACIvK,oBAACqf,IAAI;IACDG,SAAS,EAAE,CAAC;IACZuO,aAAa;IACbrO,OAAO,EAAEhiB,eAAe;IACxBmiB,kBAAkB,EAAE,GAAG;IACvBF,IAAI,EAAE,CAAC,CAAC5zB,iBAAiB;IACzB+hC,cAAc,EAAEA,cAAc;IAC9BE,eAAe,EAAC,gBAAgB;IAChCxjB,OAAO,EAAE;MAAExQ,IAAI,EAAEwQ,OAAO,CAACyjB;;KAExBJ,yBAAyB,EAC1B7tB,oBAACkuB,aAAa;IAACtQ,SAAS,EAAC,KAAK;IAAC7O,SAAS,EAAEvE,OAAO,CAAC2jB;KAC7CR,yBAAyB,CACd,CACb;AAEf,CAAC,CAAC;AAEF,IAAMpjB,WAAS,gBAAGX,sBAAsB,CAAC;EAAA,OAAO;IAC5CqkB,eAAe,EAAE;MACb3R,aAAa,EAAE7R,SAAS,CAAC,CAAC,CAAC;MAC3B8R,UAAU,EAAE9R,SAAS,CAAC,CAAC;KAC1B;IACD0jB,kBAAkB,EAAE;MAChBhnB,UAAU,EAAEsD,SAAS,CAAC,MAAM,CAAC;MAC7BrD,QAAQ,EAAEqD,SAAS,CAAC,OAAO;;GAElC;AAAA,CAAC,CAAC;;AC1GH;;;;;AAMA,IASa2jB,eAAe,gBAAGpuB,KAAK,CAACoL,IAAI,eACrCpL,KAAK,CAACqL,UAAU,CAAsC,UAACC,KAAK,EAAEtpB,GAAG;EAC7D,IAAQirC,QAAQ,GAAK3hB,KAAK,CAAlB2hB,QAAQ;EAChB,OACIjtB,oBAACkR,WAAW;IAAClvB,GAAG,EAAEA;KAASspB,KAAK,GAC5BtL,oBAACyd,UAAU,OAAG,EACdzd,oBAAC0iB,WAAW,OAAG,EACf1iB,oBAACojB,QAAQ;IAAC6J,QAAQ,EAAEA;IAAW,EAC/BjtB,oBAAC0tB,eAAe,OAAE,CACR;AAEtB,CAAC,CAAC,CACL;AACDU,eAAe,CAAC5iB,WAAW,GAAG,iBAAiB;;ACJxC,IAAM6iB,cAAc,GAAG,SAAjBA,cAAcA,CACvB1lC,OAA0B,EAC1B2lC,eAAuB;EAEvB,OAAOltB,OAAO,CAAC;IACX,IAAM/Y,aAAa,GAAGM,OAAO,CAAC2lC,eAAe,CAAC;IAE9C,IAAMnmC,WAAW,GAAG,CAACE,aAAa,CAAC;IAEnC,IAAIkmC,QAAQ,GAAGlmC,aAAa,CAACkmC,QAAQ;IACrC,OAAOA,QAAQ,EAAE;MACb,IAAMC,UAAU,GAAG7lC,OAAO,CAAC4lC,QAAQ,CAAC;MACpC,IAAIC,UAAU,EAAE;QACZrmC,WAAW,CAACsmC,OAAO,CAACD,UAAU,CAAC;QAC/BD,QAAQ,GAAGC,UAAU,CAACD,QAAQ;OACjC,MAAM;QACH;;;IAIR,OAAOpmC,WAAW;GACrB,EAAE,CAACmmC,eAAe,EAAE3lC,OAAO,CAAC,CAAC;AAClC,CAAC;AAED,AAAO,IAAM+lC,QAAQ,GAAG,SAAXA,QAAQA,CACjB/lC,OAA0B,EAC1B2lC,eAAuB;EAEvB,OAAOltB,OAAO,CAAC;IACX,IAAM/Y,aAAa,GAAGM,OAAO,CAAC2lC,eAAe,CAAC;IAC9C,IAAMK,WAAW,GAAGtmC,aAAa,CAACsmC,WAAY;IAC9C,IAAMphC,KAAK,GAAGohC,WAAW,CAAC5kC,GAAG,CAAC,UAAChB,MAAc;MAAA,OAAKJ,OAAO,CAACI,MAAM,CAAC;MAAC;IAClE,OAAOwE,KAAK;GACf,EAAE,CAAC+gC,eAAe,EAAE3lC,OAAO,CAAC,CAAC;AAClC,CAAC;AAED,AAAO,IAAMimC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAC1BC,WAA8B,EAC9BC,eAAuB;EAEvB,IAAA7tC,SAAA,GAA8BC,QAAQ,CAAC2tC,WAAW,CAAC;IAA5ClmC,OAAO,GAAA1H,SAAA;IAAE8tC,UAAU,GAAA9tC,SAAA;EAC1B,IAAAu4B,UAAA,GAA8Ct4B,QAAQ,CAAC4tC,eAAe,CAAC;IAAhER,eAAe,GAAA9U,UAAA;IAAEwV,kBAAkB,GAAAxV,UAAA;EAC1C,IAAMyV,YAAY,GAAGzvB,WAAW,CAAC;IAC7BuvB,UAAU,CAACF,WAAW,CAAC;IACvBG,kBAAkB,CAACF,eAAe,CAAC;GACtC,EAAE,CAACD,WAAW,EAAEC,eAAe,CAAC,CAAC;EAClC,IAAMI,SAAS,GAAG1vB,WAAW,CACzB,UAACjS,KAAW,EAAE0lB,MAAU,EAAE5a,WAAe;IAAA,OACrC02B,UAAU,CAAC,UAAAI,cAAc;MACrB,IAAMC,UAAU,GAAA52B,QAAA,KAAQ22B,cAAc,CAAE;MACxC,IAAME,WAAW,GAAG,IAAIvpC,GAAG,CAACyH,KAAK,CAACxD,GAAG,CAAC,UAAA6E,CAAC;QAAA,OAAIA,CAAC,CAACzI,EAAE;QAAC,CAAC;;MAGjD,IAAMmpC,oBAAoB,GAAGrc,MAAM,CAAC0b,WAAY,CAACx/B,MAAM,CAAC,UAAAhJ,EAAE;QAAA,OAAI,CAACkpC,WAAW,CAAChpC,GAAG,CAACF,EAAE,CAAC;QAAC;MACnFipC,UAAU,CAACnc,MAAM,CAAC9sB,EAAE,CAAC,GAAAqS,QAAA,KACdya,MAAM;QACT0b,WAAW,EAAEW,oBAAoB;QACjCnqC,aAAa,EAAEmqC,oBAAoB,CAACrpC;QACvC;;MAGD,IAAMspC,yBAAyB,MAAA5sC,MAAA,CAAO0V,WAAW,CAACs2B,WAAY,EAAKphC,KAAK,CAACxD,GAAG,CAAC,UAAA6E,CAAC;QAAA,OAAIA,CAAC,CAACzI,EAAE;QAAC,CAAC;MACxFipC,UAAU,CAAC/2B,WAAW,CAAClS,EAAE,CAAC,GAAAqS,QAAA,KACnBH,WAAW;QACds2B,WAAW,EAAEY,yBAAyB;QACtCpqC,aAAa,EAAEoqC,yBAAyB,CAACtpC;QAC5C;;;MAIDsH,KAAK,CAAC0B,OAAO,CAAC,UAAAxL,IAAI;QACd2rC,UAAU,CAAC3rC,IAAI,CAAC0C,EAAE,CAAC,GAAAqS,QAAA,KACZ/U,IAAI;UACP8qC,QAAQ,EAAEl2B,WAAW,CAAClS;UACzB;OACJ,CAAC;MAEF,OAAOipC,UAAU;KACpB,CAAC;KACN,EAAE,CACL;EAED,IAAMI,OAAO,GAAGpuB,OAAO,CACnB;IAAA,OAAO;MACH2tB,UAAU,EAAVA,UAAU;MACVC,kBAAkB,EAAlBA,kBAAkB;MAClBC,YAAY,EAAZA,YAAY;MACZC,SAAS,EAATA;KACH;GAAC,EACF,CAACH,UAAU,EAAEC,kBAAkB,EAAEC,YAAY,EAAEC,SAAS,CAAC,CAC5D;EACD,OAAO;IACHvmC,OAAO,EAAPA,OAAO;IACP2lC,eAAe,EAAfA,eAAe;IACfkB,OAAO,EAAPA;GACH;AACL,CAAC;AAGD,AAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAID,OAAoB;EACrD,OAAOhwB,WAAW,CACd,UAACtL,IAAgC;IAC7B,IAAIA,IAAI,CAAC/N,EAAE,KAAKyL,aAAa,CAACsF,SAAS,CAAC/Q,EAAE,EAAE;MACxC,IAAAupC,aAAA,GAA8Bx7B,IAAI,CAACK,OAAO;QAAlC4C,UAAU,GAAAu4B,aAAA,CAAVv4B,UAAU;QAAE5J,KAAK,GAAAmiC,aAAA,CAALniC,KAAK;MACzB,IAAMoiC,UAAU,GAAGx4B,UAAU,WAAVA,UAAU,GAAI5J,KAAK,CAAC,CAAC,CAAC;MACzC,IAAIoiC,UAAU,IAAIpsC,UAAU,CAACC,WAAW,CAACmsC,UAAU,CAAC,EAAE;QAClDH,OAAO,CAACR,kBAAkB,CAACW,UAAU,CAACxpC,EAAE,CAAC;;KAEhD,MAAM,IAAI+N,IAAI,CAAC/N,EAAE,KAAKyL,aAAa,CAAC2G,SAAS,CAACpS,EAAE,EAAE;MAC/CqpC,OAAO,CAACN,SAAS,CAACh7B,IAAI,CAACK,OAAO,CAAChH,KAAK,EAAE2G,IAAI,CAACK,OAAO,CAAC0e,MAAO,EAAE/e,IAAI,CAACK,OAAO,CAAC8D,WAAW,CAAC;;GAE5F,EACD,CAACm3B,OAAO,CAAC,CACZ;AACL,CAAC;AAED,AAAO,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAA54B,IAAA;MACnB63B,WAAW,GAAA73B,IAAA,CAAX63B,WAAW;IACXC,eAAe,GAAA93B,IAAA,CAAf83B,eAAe;EAEf,IAAAe,kBAAA,GAA8CjB,iBAAiB,CAACC,WAAW,EAAEC,eAAe,CAAC;IAArFnmC,OAAO,GAAAknC,kBAAA,CAAPlnC,OAAO;IAAE2lC,eAAe,GAAAuB,kBAAA,CAAfvB,eAAe;IAAEkB,OAAO,GAAAK,kBAAA,CAAPL,OAAO;EACzC,IAAMrnC,WAAW,GAAGkmC,cAAc,CAAC1lC,OAAO,EAAE2lC,eAAe,CAAC;EAC5D,IAAM/gC,KAAK,GAAGmhC,QAAQ,CAAC/lC,OAAO,EAAE2lC,eAAe,CAAC;EAChD,IAAMwB,iBAAiB,GAAGL,oBAAoB,CAACD,OAAsB,CAAC;EAEtE,IAAMt7B,IAAI,GAAG;IACTvL,OAAO,EAAPA,OAAO;IACP2lC,eAAe,EAAfA,eAAe;IACfnmC,WAAW,EAAXA,WAAW;IACXoF,KAAK,EAALA;GACH;EACD,OAAO;IAAE2G,IAAI,EAAJA,IAAI;IAAEs7B,OAAO,EAAPA,OAAO;IAAEM,iBAAiB,EAAjBA;GAAmB;AAC/C,CAAC;;;;;;;;;;;;;"}